//Copyright 2023-Present riplin

#include <hag/types.h>
#include <hag/testing/mock.h>
#include <hag/system/bda.h>
#include <hag/drivers/vga/dacdata.h>
#include <hag/drivers/vga/dacrdidx.h>
#include <hag/drivers/vga/dacwridx.h>
#include <hag/drivers/vga/miscout.h>
#include <hag/drivers/vga/attribc/data.h>
#include <hag/drivers/vga/attribc/index.h>
#include <hag/drivers/vga/crtc/data.h>
#include <hag/drivers/vga/crtc/index.h>
#include <hag/drivers/vga/gfxc/data.h>
#include <hag/drivers/vga/gfxc/index.h>
#include <hag/drivers/vga/sqrc/data.h>
#include <hag/drivers/vga/sqrc/index.h>

uint8_t modes[] = 
{
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x49, 0x4A, 0x4B, 0x4C,
    0x4D, 0x4E, 0x4F, 0x52, 0x54, 0x55, 0x68, 0x69,
    0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71,
    0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
    0x7A, 0x7C
};

uint16_t modesCount = sizeof(modes) / sizeof(uint8_t);

uint8_t legacyModesOnly[] =
{
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13
};

uint16_t legacyModesOnlyCount = sizeof(legacyModesOnly) / sizeof(uint8_t);

uint8_t vesaModesOnly[] = 
{
    0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x52,
    0x54, 0x55, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D,
    0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75,
    0x76, 0x77, 0x78, 0x79, 0x7A, 0x7C
};

uint16_t vesaModesOnlyCount = sizeof(vesaModesOnly) / sizeof(uint8_t);

////////////////////////////////////////////////////////////////////////////////

Hag::Testing::Mock::BDAFieldsAndValues ModeSetBDA_modifiedDefault[] =
{
    { 0, 0 }
};

uint16_t ModeSetBDA_modifiedDefaultCount = sizeof(ModeSetBDA_modifiedDefault) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues);

Hag::Testing::Mock::BDAFieldsAndValues ModeSetBDA_modified_0x07_0x0F[] =
{
    {
        Hag::System::BDA::Offset::DetectedHardware,
        Hag::System::BDA::DetectedHardware::Monochrome80x25 | 0x07
    },
    {
        Hag::System::BDA::Offset::VideoModeOptions,
        Hag::System::BDA::VideoModeOptions::Memory256k | Hag::System::BDA::VideoModeOptions::Monochrome
    },
    {
        Hag::System::BDA::Offset::EGAFeatureBitSwitches,
        Hag::System::BDA::EGAFeatureBitSwitches::CGAMono80x25_2
    }
};

uint16_t ModeSetBDA_modified_0x07_0x0FCount = sizeof(ModeSetBDA_modified_0x07_0x0F) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues);

uint8_t ModeSetBDA_readDefault[] =
{
    Hag::System::BDA::Offset::DetectedHardware,
    Hag::System::BDA::Offset::DisplayMode,
    Hag::System::BDA::Offset::VideoBaseIOPort,
    Hag::System::BDA::Offset::VideoBaseIOPort + 1, //Word size
    Hag::System::BDA::Offset::EGAFeatureBitSwitches,
    Hag::System::BDA::Offset::VideoDisplayDataArea
};

uint16_t ModeSetBDA_readDefaultCount = sizeof(ModeSetBDA_readDefault) / sizeof(uint8_t);

uint8_t ModeSetBDA_read_0x03[] =
{
    Hag::System::BDA::Offset::DisplayMode,
    Hag::System::BDA::Offset::VideoDisplayDataArea
};

uint16_t ModeSetBDA_read_0x03Count = sizeof(ModeSetBDA_read_0x03) / sizeof(uint8_t);

uint8_t ModeSetBDA_read_0x07_0x0F[] =
{
    Hag::System::BDA::Offset::DisplayMode,
    Hag::System::BDA::Offset::VideoBaseIOPort,
    Hag::System::BDA::Offset::VideoBaseIOPort + 1,  //Word size
    Hag::System::BDA::Offset::VideoDisplayDataArea
};

uint16_t ModeSetBDA_read_0x07_0x0FCount = sizeof(ModeSetBDA_read_0x07_0x0F) / sizeof(uint8_t);

////////////////////////////////////////////////////////////////////////////////

uint8_t VerifyBDAOrDeactivate_readDefault[] =
{
    Hag::System::BDA::Offset::DetectedHardware,
    Hag::System::BDA::Offset::DisplayMode,
    Hag::System::BDA::Offset::VideoBaseIOPort,
    Hag::System::BDA::Offset::VideoBaseIOPort + 1, //Word size
    Hag::System::BDA::Offset::VideoModeOptions,
    Hag::System::BDA::Offset::EGAFeatureBitSwitches,
    Hag::System::BDA::Offset::VideoDisplayDataArea
};

uint16_t VerifyBDAOrDeactivate_readDefaultCount = sizeof(VerifyBDAOrDeactivate_readDefault) / sizeof(uint8_t);

uint8_t VerifyBDAOrDeactivate_read_0x03[] =
{
    Hag::System::BDA::Offset::DetectedHardware,
    Hag::System::BDA::Offset::DisplayMode,
    Hag::System::BDA::Offset::VideoModeOptions,
    Hag::System::BDA::Offset::VideoDisplayDataArea
};

uint16_t VerifyBDAOrDeactivate_read_0x03Count = sizeof(VerifyBDAOrDeactivate_read_0x03) / sizeof(uint8_t);

uint8_t VerifyBDAOrDeactivate_read_0x07_0x0F[] =
{
    Hag::System::BDA::Offset::DisplayMode,
    Hag::System::BDA::Offset::VideoBaseIOPort,
    Hag::System::BDA::Offset::VideoBaseIOPort + 1,  //Word size
    Hag::System::BDA::Offset::VideoModeOptions,
    Hag::System::BDA::Offset::VideoDisplayDataArea
};

uint16_t VerifyBDAOrDeactivate_read_0x07_0x0FCount = sizeof(VerifyBDAOrDeactivate_read_0x07_0x0F) / sizeof(uint8_t);


Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified0[] =
{
    {
        Hag::System::BDA::Offset::NumberOfScreenColumns, 40
    },
    {
        Hag::System::BDA::Offset::VideoBufferSize + 1, 0x08 //2048
    },
    {
        Hag::System::BDA::Offset::CursorEndScanLine, 14
    },
    {
        Hag::System::BDA::Offset::CursorStartScanLine, 13
    },
    {
        Hag::System::BDA::Offset::CRTModeControlRegValue,
        Hag::System::BDA::CRTModeControlRegValue::VideoEnabled |
        Hag::System::BDA::CRTModeControlRegValue::Blinking
    }
};

uint8_t SetTextModeBiosDataTest_read0[] =
{
    Hag::System::BDA::Offset::DetectedHardware,
    Hag::System::BDA::Offset::VideoBufferSize,
    Hag::System::BDA::Offset::CGAColorPaletteMaskSetting,
    Hag::System::BDA::Offset::RowsOnScreen,
    Hag::System::BDA::Offset::PointHeightOfCharacterMatrix,
    Hag::System::BDA::Offset::PointHeightOfCharacterMatrix + 1,
    Hag::System::BDA::Offset::VideoModeOptions
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified1[] =
{
    {
        Hag::System::BDA::Offset::CursorEndScanLine, 14
    },
    {
        Hag::System::BDA::Offset::CursorStartScanLine, 13
    },
    {
        Hag::System::BDA::Offset::CRTModeControlRegValue,
        Hag::System::BDA::CRTModeControlRegValue::Mode2Or3Text |
        Hag::System::BDA::CRTModeControlRegValue::Monochrome |
        Hag::System::BDA::CRTModeControlRegValue::VideoEnabled |
        Hag::System::BDA::CRTModeControlRegValue::Blinking
    }
};

uint8_t SetTextModeBiosDataTest_read1[] =
{
    Hag::System::BDA::Offset::DetectedHardware,
    Hag::System::BDA::Offset::NumberOfScreenColumns,
    Hag::System::BDA::Offset::VideoBufferSize,
    Hag::System::BDA::Offset::VideoBufferSize + 1,
    Hag::System::BDA::Offset::CGAColorPaletteMaskSetting,
    Hag::System::BDA::Offset::RowsOnScreen,
    Hag::System::BDA::Offset::PointHeightOfCharacterMatrix,
    Hag::System::BDA::Offset::PointHeightOfCharacterMatrix + 1,
    Hag::System::BDA::Offset::VideoModeOptions
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified2[] =
{
    {
        Hag::System::BDA::Offset::CursorEndScanLine, 14
    },
    {
        Hag::System::BDA::Offset::CursorStartScanLine, 13
    }
};

uint8_t SetTextModeBiosDataTest_read2[] =
{
    Hag::System::BDA::Offset::DetectedHardware,
    Hag::System::BDA::Offset::NumberOfScreenColumns,
    Hag::System::BDA::Offset::VideoBufferSize,
    Hag::System::BDA::Offset::VideoBufferSize + 1,
    Hag::System::BDA::Offset::CRTModeControlRegValue,
    Hag::System::BDA::Offset::CGAColorPaletteMaskSetting,
    Hag::System::BDA::Offset::RowsOnScreen,
    Hag::System::BDA::Offset::PointHeightOfCharacterMatrix,
    Hag::System::BDA::Offset::PointHeightOfCharacterMatrix + 1,
    Hag::System::BDA::Offset::VideoModeOptions
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified3[] =
{
    {
        Hag::System::BDA::Offset::NumberOfScreenColumns, 40
    },
    {
        Hag::System::BDA::Offset::VideoBufferSize + 1, 0x40 //16384
    },
    {
        Hag::System::BDA::Offset::CursorEndScanLine, 0x00
    },
    {
        Hag::System::BDA::Offset::CursorStartScanLine, 0x00
    },
    {
        Hag::System::BDA::Offset::CRTModeControlRegValue,
        Hag::System::BDA::CRTModeControlRegValue::Mode4Or5Graphics |
        Hag::System::BDA::CRTModeControlRegValue::VideoEnabled |
        Hag::System::BDA::CRTModeControlRegValue::Blinking
    },
    {
        Hag::System::BDA::Offset::PointHeightOfCharacterMatrix, 8
    }
};

uint8_t SetTextModeBiosDataTest_read3[] =
{
    0x10,
    0x4C,
    0x66,
    0x84,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified4[] =
{
    { 0x4A, 0x28 },
    { 0x4D, 0x40 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x65, 0x2E },
    { 0x85, 0x08 }
};

uint8_t SetTextModeBiosDataTest_read4[] =
{
    0x10,
    0x4C,
    0x66,
    0x84,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified5[] =
{
    { 0x4D, 0x40 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x65, 0x1E },
    { 0x66, 0x3F },
    { 0x85, 0x08 }
};

uint8_t SetTextModeBiosDataTest_read5[] =
{
    0x10,
    0x4A,
    0x4C,
    0x84,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified6[] =
{
    { 0x10, 0x37 },
    { 0x60, 0x0E },
    { 0x61, 0x0D },
    { 0x87, 0x62 }
};

uint8_t SetTextModeBiosDataTest_read6[] =
{
    0x4A,
    0x4C,
    0x4D,
    0x65,
    0x66,
    0x84,
    0x85,
    0x86
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified7[] =
{
    { 0x4D, 0x7D },
    { 0x60, 0x00 },
    { 0x61, 0x00 }
};

uint8_t SetTextModeBiosDataTest_read7[] =
{
    0x10,
    0x4A,
    0x4C,
    0x84,
    0x85,
    0x86,
    0x87
};


Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified8[] =
{
    { 0x4A, 0x00 },
    { 0x4D, 0x00 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x00 },
    { 0x85, 0x00 }
};

uint8_t SetTextModeBiosDataTest_read8[] =
{
    0x10,
    0x4C,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified9[] =
{
    { 0x4A, 0x28 },
    { 0x4D, 0x40 },
    { 0x60, 0x07 },
    { 0x61, 0x06 },
    { 0x85, 0x08 }
};

uint8_t SetTextModeBiosDataTest_read9[] =
{
    0x10,
    0x4C,
    0x84,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified10[] =
{
    { 0x4D, 0x00 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x00 },
    { 0x85, 0x00 }
};

uint8_t SetTextModeBiosDataTest_read10[] =
{
    0x10,
    0x4A,
    0x4C,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified11[] =
{
    { 0x4A, 0x28 },
    { 0x4D, 0x20 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x85, 0x08 }
};

uint8_t SetTextModeBiosDataTest_read11[] =
{
    0x10,
    0x4C,
    0x84,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified12[] =
{
    { 0x4D, 0x40 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x85, 0x08 }
};

uint8_t SetTextModeBiosDataTest_read12[] =
{
    0x10,
    0x4A,
    0x4C,
    0x84,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified13[] =
{
    { 0x10, 0x37 },
    { 0x4D, 0x80 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x85, 0x0E },
    { 0x87, 0x62 }
};

uint8_t SetTextModeBiosDataTest_read13[] =
{
    0x4A,
    0x4C,
    0x84,
    0x86
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified14[] =
{
    { 0x4D, 0x80 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x85, 0x0E }
};

uint8_t SetTextModeBiosDataTest_read14[] =
{
    0x10,
    0x4A,
    0x4C,
    0x84,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified15[] =
{
    { 0x4D, 0xA0 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x1D }
};

uint8_t SetTextModeBiosDataTest_read15[] =
{
    0x10,
    0x4A,
    0x4C,
    0x85,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified16[] =
{
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x1D }
};

uint8_t SetTextModeBiosDataTest_read16[] =
{
    0x10,
    0x4A,
    0x4C,
    0x4D,
    0x85,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified17[] =
{
    { 0x4A, 0x64 },
    { 0x4D, 0xFA },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x4A },
    { 0x85, 0x08 }
};

uint8_t SetTextModeBiosDataTest_read17[] =
{
    0x10,
    0x4C,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified18[] =
{
    { 0x4A, 0x80 },
    { 0x4C, 0xFF },
    { 0x4D, 0xFF },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x2F }
};

uint8_t SetTextModeBiosDataTest_read18[] =
{
    0x10,
    0x85,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified19[] =
{
    { 0x4A, 0x90 },
    { 0x4C, 0xFF },
    { 0x4D, 0xFF },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x36 }
};

uint8_t SetTextModeBiosDataTest_read19[] =
{
    0x10,
    0x85,
    0x87,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified20[] =
{
    { 0x4A, 0xA0 },
    { 0x4D, 0x01 },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x3F }
};

uint8_t SetTextModeBiosDataTest_read20[] =
{
    0x10,
    0x4C,
    0x85,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified21[] =
{
    { 0x60, 0x00 },
    { 0x61, 0x00 }
};

uint8_t SetTextModeBiosDataTest_read21[] =
{
    0x10,
    0x4A,
    0x4C,
    0x4D,
    0x84,
    0x85,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified22[] =
{
    { 0x4A, 0x84 },
    { 0x4D, 0x40 },
    { 0x60, 0x07 },
    { 0x61, 0x06 },
    { 0x84, 0x2A },
    { 0x85, 0x08 }
};

uint8_t SetTextModeBiosDataTest_read22[] =
{
    0x10,
    0x4C,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified23[] =
{
    { 0x4A, 0x84 },
    { 0x4D, 0x20 },
    { 0x60, 0x0E },
    { 0x61, 0x0D }
};

uint8_t SetTextModeBiosDataTest_read23[] =
{
    0x10,
    0x4C,
    0x84,
    0x85,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues SetTextModeBiosDataTest_modified24[] =
{
    { 0x4A, 0xC8 },
    { 0x4C, 0xFF },
    { 0x4D, 0xFF },
    { 0x60, 0x00 },
    { 0x61, 0x00 },
    { 0x84, 0x4B }
};

uint8_t SetTextModeBiosDataTest_read24[] =
{
    0x10,
    0x85,
    0x86,
    0x87
};

Hag::Testing::Mock::BDAFieldsAndValues* SetTextModeBiosDataTest_modified[] =
{
    SetTextModeBiosDataTest_modified0,
    SetTextModeBiosDataTest_modified1,
    SetTextModeBiosDataTest_modified2,
    SetTextModeBiosDataTest_modified3,
    SetTextModeBiosDataTest_modified4,
    SetTextModeBiosDataTest_modified5,
    SetTextModeBiosDataTest_modified6,
    SetTextModeBiosDataTest_modified7,
    SetTextModeBiosDataTest_modified8,
    SetTextModeBiosDataTest_modified9,
    SetTextModeBiosDataTest_modified10,
    SetTextModeBiosDataTest_modified11,
    SetTextModeBiosDataTest_modified12,
    SetTextModeBiosDataTest_modified13,
    SetTextModeBiosDataTest_modified14,
    SetTextModeBiosDataTest_modified15,
    SetTextModeBiosDataTest_modified16,
    SetTextModeBiosDataTest_modified17,
    SetTextModeBiosDataTest_modified18,
    SetTextModeBiosDataTest_modified19,
    SetTextModeBiosDataTest_modified20,
    SetTextModeBiosDataTest_modified21,
    SetTextModeBiosDataTest_modified22,
    SetTextModeBiosDataTest_modified23,
    SetTextModeBiosDataTest_modified24
};

int SetTextModeBiosDataTest_modifiedSize[] =
{
    sizeof(SetTextModeBiosDataTest_modified0) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified1) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified2) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified3) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified4) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified5) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified6) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified7) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified8) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified9) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified10) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified11) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified12) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified13) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified14) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified15) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified16) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified17) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified18) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified19) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified20) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified21) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified22) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified23) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues),
    sizeof(SetTextModeBiosDataTest_modified24) / sizeof(Hag::Testing::Mock::BDAFieldsAndValues)
};

uint8_t* SetTextModeBiosDataTest_read[] =
{
    SetTextModeBiosDataTest_read0,
    SetTextModeBiosDataTest_read1,
    SetTextModeBiosDataTest_read2,
    SetTextModeBiosDataTest_read3,
    SetTextModeBiosDataTest_read4,
    SetTextModeBiosDataTest_read5,
    SetTextModeBiosDataTest_read6,
    SetTextModeBiosDataTest_read7,
    SetTextModeBiosDataTest_read8,
    SetTextModeBiosDataTest_read9,
    SetTextModeBiosDataTest_read10,
    SetTextModeBiosDataTest_read11,
    SetTextModeBiosDataTest_read12,
    SetTextModeBiosDataTest_read13,
    SetTextModeBiosDataTest_read14,
    SetTextModeBiosDataTest_read15,
    SetTextModeBiosDataTest_read16,
    SetTextModeBiosDataTest_read17,
    SetTextModeBiosDataTest_read18,
    SetTextModeBiosDataTest_read19,
    SetTextModeBiosDataTest_read20,
    SetTextModeBiosDataTest_read21,
    SetTextModeBiosDataTest_read22,
    SetTextModeBiosDataTest_read23,
    SetTextModeBiosDataTest_read24
};

int SetTextModeBiosDataTest_readSize[] =
{
    sizeof(SetTextModeBiosDataTest_read0),
    sizeof(SetTextModeBiosDataTest_read1),
    sizeof(SetTextModeBiosDataTest_read2),
    sizeof(SetTextModeBiosDataTest_read3),
    sizeof(SetTextModeBiosDataTest_read4),
    sizeof(SetTextModeBiosDataTest_read5),
    sizeof(SetTextModeBiosDataTest_read6),
    sizeof(SetTextModeBiosDataTest_read7),
    sizeof(SetTextModeBiosDataTest_read8),
    sizeof(SetTextModeBiosDataTest_read9),
    sizeof(SetTextModeBiosDataTest_read10),
    sizeof(SetTextModeBiosDataTest_read11),
    sizeof(SetTextModeBiosDataTest_read12),
    sizeof(SetTextModeBiosDataTest_read13),
    sizeof(SetTextModeBiosDataTest_read14),
    sizeof(SetTextModeBiosDataTest_read15),
    sizeof(SetTextModeBiosDataTest_read16),
    sizeof(SetTextModeBiosDataTest_read17),
    sizeof(SetTextModeBiosDataTest_read18),
    sizeof(SetTextModeBiosDataTest_read19),
    sizeof(SetTextModeBiosDataTest_read20),
    sizeof(SetTextModeBiosDataTest_read21),
    sizeof(SetTextModeBiosDataTest_read22),
    sizeof(SetTextModeBiosDataTest_read23),
    sizeof(SetTextModeBiosDataTest_read24)
};

uint8_t SetTextModeBiosDataTest_idxToData[] =
{
    0,  // 0    0x00
    0,  // 1    0x01
    1,  // 2    0x02
    2,  // 3    0x03
    3,  // 4    0x04
    4,  // 5    0x05
    5,  // 6    0x06
    6,  // 7    0x07
    7,  // 8    0x08
    8,  // 9    0x09
    9,  // 10   0x0A
    10,  // 11   0x0B
    10,  // 12   0x0C
    11,  // 13   0x0D
    12,  // 14   0x0E
    13,  // 15   0x0F
    14,  // 16   0x10
    15,  // 17   0x11
    15,  // 18   0x12
    11,  // 19   0x13
    16,  // 20   0x49
    17,  // 21   0x4A
    17,  // 22   0x4B
    18,  // 23   0x4C
    18,  // 24   0x4D
    19,  // 25   0x4E
    20,  // 26   0x4F
    21,  // 27   0x52
    22,  // 28   0x54
    23,  // 29   0x55
    21,  // 30   0x68
    16,  // 31   0x69
    17,  // 32   0x6A
    17,  // 33   0x6B
    18,  // 34   0x6C
    18,  // 35   0x6D
    20,  // 36   0x6E
    20,  // 37   0x6F
    16,  // 38   0x70
    16,  // 39   0x71
    16,  // 40   0x72
    17,  // 41   0x73
    17,  // 42   0x74
    17,  // 43   0x75
    18,  // 44   0x76
    18,  // 45   0x77
    18,  // 46   0x78
    20,  // 47   0x79
    20,  // 48   0x7A
    24,  // 49   0x7C
};

uint8_t SetTextModeBiosDataTest_ignore[] =
{
    Hag::System::BDA::Offset::DisplayMode,
    Hag::System::BDA::Offset::NumberOfScreenColumns +1,
    Hag::System::BDA::Offset::VideoBufferOffset,
    Hag::System::BDA::Offset::VideoBufferOffset + 1,
    Hag::System::BDA::Offset::PointHeightOfCharacterMatrix + 1,
    Hag::System::BDA::Offset::CursorPositionPage0,
    Hag::System::BDA::Offset::CursorPositionPage0 + 1,
    Hag::System::BDA::Offset::CursorPositionPage1,
    Hag::System::BDA::Offset::CursorPositionPage1 + 1,
    Hag::System::BDA::Offset::CursorPositionPage2,
    Hag::System::BDA::Offset::CursorPositionPage2 + 1,
    Hag::System::BDA::Offset::CursorPositionPage3,
    Hag::System::BDA::Offset::CursorPositionPage3 + 1,
    Hag::System::BDA::Offset::CursorPositionPage4,
    Hag::System::BDA::Offset::CursorPositionPage4 + 1,
    Hag::System::BDA::Offset::CursorPositionPage5,
    Hag::System::BDA::Offset::CursorPositionPage5 + 1,
    Hag::System::BDA::Offset::CursorPositionPage6,
    Hag::System::BDA::Offset::CursorPositionPage6 + 1,
    Hag::System::BDA::Offset::CursorPositionPage7,
    Hag::System::BDA::Offset::CursorPositionPage7 + 1,
    Hag::System::BDA::Offset::ActiveDisplayNumber,
    Hag::System::BDA::Offset::VideoBaseIOPort,
    Hag::System::BDA::Offset::VideoBaseIOPort + 1,
    Hag::System::BDA::Offset::EGAFeatureBitSwitches,
    Hag::System::BDA::Offset::VideoDisplayDataArea
};

uint16_t SetTextModeBiosDataTest_ignoreCount = sizeof(SetTextModeBiosDataTest_ignore) / sizeof(uint8_t);

extern uint8_t Characters8x8[];
extern uint8_t Characters8x14[];
extern uint8_t Characters8x16[];
extern uint8_t LegacyVideoParameterTable[][64];
extern uint8_t VESAVideoParameters132x43[];
extern uint8_t VESAVideoParameters132x25[];
extern uint8_t VESAVideoParameters640x400[];
extern uint8_t VESAVideoParameters640x480[];
extern uint8_t VESAVideoParameters800x600[];
extern uint8_t VESAVideoParameters1024x768[];
extern uint8_t VESAVideoParameters1280x1024[];
extern uint8_t VESAVideoParameters1152x864[];
extern uint8_t VESAVideoParameters1600x1200[];

struct SetTextModeBiosDataTest_DataVerify
{
    uint8_t* font;
    uint8_t* overrideTable;
    uint8_t modeDataIndex;
};

SetTextModeBiosDataTest_DataVerify SetTextModeBiosDataTest_Verify[] =
{
    { nullptr, nullptr, 0 },
    { Characters8x8, LegacyVideoParameterTable[23], 0 },
    { Characters8x8, LegacyVideoParameterTable[24], 0 },
    { Characters8x8, LegacyVideoParameterTable[24], 0 },
    { Characters8x8, LegacyVideoParameterTable[4], 0 },
    { Characters8x8, LegacyVideoParameterTable[5], 0 },
    { Characters8x8, LegacyVideoParameterTable[6], 0 },
    { Characters8x8, LegacyVideoParameterTable[25], 0 },
    { Characters8x16, LegacyVideoParameterTable[8], 0 },
    { Characters8x8, LegacyVideoParameterTable[9], 0 },
    { Characters8x8, LegacyVideoParameterTable[10], 0 },
    { Characters8x8, LegacyVideoParameterTable[11], 0 },
    { Characters8x8, LegacyVideoParameterTable[12], 0 },
    { Characters8x8, LegacyVideoParameterTable[13], 0 },
    { Characters8x8, LegacyVideoParameterTable[14], 0 },
    { Characters8x14, LegacyVideoParameterTable[17], 0 },
    { Characters8x14, LegacyVideoParameterTable[18], 0 },
    { Characters8x16, LegacyVideoParameterTable[26], 0 },
    { Characters8x16, LegacyVideoParameterTable[27], 0 },
    { Characters8x8, LegacyVideoParameterTable[28], 0 },
    { Characters8x16, VESAVideoParameters640x480, 48 },
    { Characters8x8, VESAVideoParameters800x600, 52 },
    { Characters8x8, VESAVideoParameters800x600, 56 },
    { Characters8x16, VESAVideoParameters1024x768, 60 },
    { Characters8x16, VESAVideoParameters1024x768, 64 },
    { Characters8x16, VESAVideoParameters1152x864, 65 },
    { Characters8x16, VESAVideoParameters1280x1024, 69 },
    { Characters8x16, VESAVideoParameters640x400, 70 },
    { Characters8x8, VESAVideoParameters132x43, 0 },
    { Characters8x8, VESAVideoParameters132x25, 1 },
    { Characters8x16, VESAVideoParameters640x400, 2 },
    { Characters8x16, VESAVideoParameters640x480, 5 },
    { Characters8x8, VESAVideoParameters800x600, 9 },
    { Characters8x8, VESAVideoParameters800x600, 13 },
    { Characters8x16, VESAVideoParameters1024x768, 17 },
    { Characters8x16, VESAVideoParameters1024x768, 21 },
    { Characters8x16, VESAVideoParameters1280x1024, 22 },
    { Characters8x16, VESAVideoParameters1280x1024, 26 },
    { Characters8x16, VESAVideoParameters640x480, 29 },
    { Characters8x16, VESAVideoParameters640x480, 29 },
    { Characters8x16, VESAVideoParameters640x480, 32 },
    { Characters8x8, VESAVideoParameters800x600, 35 },
    { Characters8x8, VESAVideoParameters800x600, 35 },
    { Characters8x8, VESAVideoParameters800x600, 38 },
    { Characters8x16, VESAVideoParameters1024x768, 42 },
    { Characters8x16, VESAVideoParameters1024x768, 42 },
    { Characters8x16, VESAVideoParameters1024x768, 43 },
    { Characters8x16, VESAVideoParameters1280x1024, 44 },
    { Characters8x16, VESAVideoParameters1280x1024, 44 },
    { Characters8x16, VESAVideoParameters1600x1200, 45 }
};

uint16_t ApplyVideoParametersTest_ignorePorts[] =
{ 
    Hag::VGA::Register::CRTControllerIndexB,
    Hag::VGA::Register::CRTControllerDataB,
    Hag::VGA::Register::InputStatus1B,
    Hag::VGA::Register::AttributeControllerIndex,
    Hag::VGA::Register::SequencerIndex,
    Hag::VGA::Register::SequencerData,
    Hag::VGA::Register::MiscellaneousR,
    Hag::VGA::Register::CRTControllerIndexD,
    Hag::VGA::Register::CRTControllerDataD,
    Hag::VGA::Register::InputStatus1D,
    Hag::VGA::Register::GraphicsControllerIndex,
    Hag::VGA::Register::GraphicsControllerData,
};

uint16_t ApplyVideoParametersTest_ignorePortsCount = sizeof(ApplyVideoParametersTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_ignoreIndexedPorts[] =
{
    { 0x03D5, 0x0E },
    { 0x03D5, 0x0F }
};

uint16_t ApplyVideoParametersTest_ignoreIndexedPortsCount = sizeof(ApplyVideoParametersTest_ignoreIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndex);

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts0[] =
{
    { 0x0000, 0x00 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts1[] =
{
    { 0x03C2, 0x67 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts2[] =
{
    { 0x03C2, 0x63 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts3[] =
{
    { 0x03C2, 0x66 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts4[] =
{
    { 0x03C2, 0x00 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts5[] =
{
    { 0x03C2, 0x23 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts6[] =
{
    { 0x03C2, 0x62 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts7[] =
{
    { 0x03C2, 0xA2 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts8[] =
{
    { 0x03C2, 0xA3 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts9[] =
{
    { 0x03C2, 0xE3 }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts10[] =
{
    { 0x03C2, 0xEF }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts11[] =
{
    { 0x03C2, 0x6F }
};

Hag::Testing::Mock::PortAndValue ApplyVideoParametersTest_modifiedPorts12[] =
{
    { 0x03C2, 0x2F }
};

Hag::Testing::Mock::PortAndValue* ApplyVideoParametersTest_modifiedPorts[] =
{
    ApplyVideoParametersTest_modifiedPorts0, //0
    ApplyVideoParametersTest_modifiedPorts1, //1
    ApplyVideoParametersTest_modifiedPorts1, //2
    ApplyVideoParametersTest_modifiedPorts1, //3
    ApplyVideoParametersTest_modifiedPorts2, //4
    ApplyVideoParametersTest_modifiedPorts2, //5
    ApplyVideoParametersTest_modifiedPorts2, //6
    ApplyVideoParametersTest_modifiedPorts3, //7
    ApplyVideoParametersTest_modifiedPorts2, //8
    ApplyVideoParametersTest_modifiedPorts4, //9
    ApplyVideoParametersTest_modifiedPorts5, //10
    ApplyVideoParametersTest_modifiedPorts6, //11
    ApplyVideoParametersTest_modifiedPorts2, //12
    ApplyVideoParametersTest_modifiedPorts2, //13
    ApplyVideoParametersTest_modifiedPorts2, //14
    ApplyVideoParametersTest_modifiedPorts7, //15
    ApplyVideoParametersTest_modifiedPorts8, //16
    ApplyVideoParametersTest_modifiedPorts9, //17
    ApplyVideoParametersTest_modifiedPorts9, //18
    ApplyVideoParametersTest_modifiedPorts2, //19
    ApplyVideoParametersTest_modifiedPorts10, //20
    ApplyVideoParametersTest_modifiedPorts10, //21
    ApplyVideoParametersTest_modifiedPorts10, //22
    ApplyVideoParametersTest_modifiedPorts10, //23
    ApplyVideoParametersTest_modifiedPorts10, //24
    ApplyVideoParametersTest_modifiedPorts10, //25
    ApplyVideoParametersTest_modifiedPorts10, //26
    ApplyVideoParametersTest_modifiedPorts10, //27
    ApplyVideoParametersTest_modifiedPorts11, //28
    ApplyVideoParametersTest_modifiedPorts11, //29
    ApplyVideoParametersTest_modifiedPorts10, //30
    ApplyVideoParametersTest_modifiedPorts10, //31
    ApplyVideoParametersTest_modifiedPorts10, //32
    ApplyVideoParametersTest_modifiedPorts10, //33
    ApplyVideoParametersTest_modifiedPorts10, //34
    ApplyVideoParametersTest_modifiedPorts10, //35
    ApplyVideoParametersTest_modifiedPorts10, //36
    ApplyVideoParametersTest_modifiedPorts10, //37
    ApplyVideoParametersTest_modifiedPorts10, //38
    ApplyVideoParametersTest_modifiedPorts10, //39
    ApplyVideoParametersTest_modifiedPorts10, //40
    ApplyVideoParametersTest_modifiedPorts10, //41
    ApplyVideoParametersTest_modifiedPorts10, //42
    ApplyVideoParametersTest_modifiedPorts10, //43
    ApplyVideoParametersTest_modifiedPorts10, //44
    ApplyVideoParametersTest_modifiedPorts10, //45
    ApplyVideoParametersTest_modifiedPorts10, //46
    ApplyVideoParametersTest_modifiedPorts10, //47
    ApplyVideoParametersTest_modifiedPorts10, //48
    ApplyVideoParametersTest_modifiedPorts12 //49
};

int ApplyVideoParametersTest_modifiedPortsCount[] =
{
    sizeof(ApplyVideoParametersTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //0
    sizeof(ApplyVideoParametersTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //1
    sizeof(ApplyVideoParametersTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //2
    sizeof(ApplyVideoParametersTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //3
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //4
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //5
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //6
    sizeof(ApplyVideoParametersTest_modifiedPorts3) / sizeof(Hag::Testing::Mock::PortAndValue), //7
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //8
    sizeof(ApplyVideoParametersTest_modifiedPorts4) / sizeof(Hag::Testing::Mock::PortAndValue), //9
    sizeof(ApplyVideoParametersTest_modifiedPorts5) / sizeof(Hag::Testing::Mock::PortAndValue), //10
    sizeof(ApplyVideoParametersTest_modifiedPorts6) / sizeof(Hag::Testing::Mock::PortAndValue), //11
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //12
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //13
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //14
    sizeof(ApplyVideoParametersTest_modifiedPorts7) / sizeof(Hag::Testing::Mock::PortAndValue), //15
    sizeof(ApplyVideoParametersTest_modifiedPorts8) / sizeof(Hag::Testing::Mock::PortAndValue), //16
    sizeof(ApplyVideoParametersTest_modifiedPorts9) / sizeof(Hag::Testing::Mock::PortAndValue), //17
    sizeof(ApplyVideoParametersTest_modifiedPorts9) / sizeof(Hag::Testing::Mock::PortAndValue), //18
    sizeof(ApplyVideoParametersTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //19
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //20
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //21
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //22
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //23
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //24
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //25
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //26
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //27
    sizeof(ApplyVideoParametersTest_modifiedPorts11) / sizeof(Hag::Testing::Mock::PortAndValue), //28
    sizeof(ApplyVideoParametersTest_modifiedPorts11) / sizeof(Hag::Testing::Mock::PortAndValue), //29
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //30
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //31
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //32
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //33
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //34
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //35
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //36
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //37
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //38
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //39
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //40
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //41
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //42
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //43
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //44
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //45
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //46
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //47
    sizeof(ApplyVideoParametersTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //48
    sizeof(ApplyVideoParametersTest_modifiedPorts12) / sizeof(Hag::Testing::Mock::PortAndValue) //49
};

uint16_t ApplyVideoParametersTest_readPorts[] = { 0 };
int ApplyVideoParametersTest_readPortsCount = sizeof(ApplyVideoParametersTest_readPorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts0[] =
{
    { 0x0000, 0x00, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts1[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x28 },
    { 0x03C5, 0x04, 0x02 },
    { 0x03D5, 0x00, 0x2D },
    { 0x03D5, 0x01, 0x27 },
    { 0x03D5, 0x02, 0x28 },
    { 0x03D5, 0x03, 0x90 },
    { 0x03D5, 0x04, 0x2B },
    { 0x03D5, 0x05, 0xA0 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x13, 0x14 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x0C },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x08 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts2[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x20 },
    { 0x03C5, 0x04, 0x02 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x0C },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x08 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts3[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x29 },
    { 0x03C5, 0x04, 0x02 },
    { 0x03D5, 0x00, 0x2D },
    { 0x03D5, 0x01, 0x27 },
    { 0x03D5, 0x02, 0x28 },
    { 0x03D5, 0x03, 0x90 },
    { 0x03D5, 0x04, 0x2B },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x09, 0xC1 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x13, 0x14 },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x17, 0xA2 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x13 },
    { 0x03C0, 0x02, 0x15 },
    { 0x03C0, 0x03, 0x17 },
    { 0x03C0, 0x04, 0x02 },
    { 0x03C0, 0x05, 0x04 },
    { 0x03C0, 0x06, 0x06 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x10 },
    { 0x03C0, 0x09, 0x11 },
    { 0x03C0, 0x0A, 0x12 },
    { 0x03C0, 0x0B, 0x13 },
    { 0x03C0, 0x0C, 0x14 },
    { 0x03C0, 0x0D, 0x15 },
    { 0x03C0, 0x0E, 0x16 },
    { 0x03C0, 0x0F, 0x17 },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x03 },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x30 },
    { 0x03CF, 0x06, 0x0F },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts4[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x01 },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x04, 0x54 },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x09, 0xC1 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x17, 0xC2 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x17 },
    { 0x03C0, 0x02, 0x17 },
    { 0x03C0, 0x03, 0x17 },
    { 0x03C0, 0x04, 0x17 },
    { 0x03C0, 0x05, 0x17 },
    { 0x03C0, 0x06, 0x17 },
    { 0x03C0, 0x07, 0x17 },
    { 0x03C0, 0x08, 0x17 },
    { 0x03C0, 0x09, 0x17 },
    { 0x03C0, 0x0A, 0x17 },
    { 0x03C0, 0x0B, 0x17 },
    { 0x03C0, 0x0C, 0x17 },
    { 0x03C0, 0x0D, 0x17 },
    { 0x03C0, 0x0E, 0x17 },
    { 0x03C0, 0x0F, 0x17 },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x01 },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x0D },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts5[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x20 },
    { 0x03C5, 0x04, 0x02 },
    { 0x03B5, 0x0E, 0x00 },
    { 0x03B5, 0x0F, 0x00 },
    { 0x03B5, 0x11, 0x8E },
    { 0x03B5, 0x14, 0x0F },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x08 },
    { 0x03C0, 0x02, 0x08 },
    { 0x03C0, 0x03, 0x08 },
    { 0x03C0, 0x04, 0x08 },
    { 0x03C0, 0x05, 0x08 },
    { 0x03C0, 0x06, 0x08 },
    { 0x03C0, 0x07, 0x08 },
    { 0x03C0, 0x08, 0x10 },
    { 0x03C0, 0x09, 0x18 },
    { 0x03C0, 0x0A, 0x18 },
    { 0x03C0, 0x0B, 0x18 },
    { 0x03C0, 0x0C, 0x18 },
    { 0x03C0, 0x0D, 0x18 },
    { 0x03C0, 0x0E, 0x18 },
    { 0x03C0, 0x0F, 0x18 },
    { 0x03C0, 0x10, 0x0E },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x08 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x06, 0x0A },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts6[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts7[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x20 },
    { 0x03C5, 0x02, 0x00 },
    { 0x03C5, 0x04, 0x00 },
    { 0x03D5, 0x00, 0x00 },
    { 0x03D5, 0x01, 0x00 },
    { 0x03D5, 0x02, 0x00 },
    { 0x03D5, 0x03, 0x00 },
    { 0x03D5, 0x04, 0x00 },
    { 0x03D5, 0x05, 0x00 },
    { 0x03D5, 0x06, 0x00 },
    { 0x03D5, 0x07, 0x00 },
    { 0x03D5, 0x09, 0x00 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0x00 },
    { 0x03D5, 0x11, 0x00 },
    { 0x03D5, 0x12, 0x00 },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x15, 0x00 },
    { 0x03D5, 0x16, 0x00 },
    { 0x03D5, 0x17, 0x00 },
    { 0x03D5, 0x18, 0x00 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x00 },
    { 0x03C0, 0x02, 0x00 },
    { 0x03C0, 0x03, 0x00 },
    { 0x03C0, 0x04, 0x00 },
    { 0x03C0, 0x05, 0x00 },
    { 0x03C0, 0x06, 0x00 },
    { 0x03C0, 0x07, 0x00 },
    { 0x03C0, 0x08, 0x00 },
    { 0x03C0, 0x09, 0x00 },
    { 0x03C0, 0x0A, 0x00 },
    { 0x03C0, 0x0B, 0x00 },
    { 0x03C0, 0x0C, 0x00 },
    { 0x03C0, 0x0D, 0x00 },
    { 0x03C0, 0x0E, 0x00 },
    { 0x03C0, 0x0F, 0x00 },
    { 0x03C0, 0x10, 0x00 },
    { 0x03C0, 0x12, 0x00 },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x00 },
    { 0x03CF, 0x07, 0x00 },
    { 0x03CF, 0x08, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts8[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x20 },
    { 0x03C5, 0x02, 0x00 },
    { 0x03C5, 0x04, 0x03 },
    { 0x03D5, 0x00, 0x37 },
    { 0x03D5, 0x01, 0x27 },
    { 0x03D5, 0x02, 0x2D },
    { 0x03D5, 0x03, 0x37 },
    { 0x03D5, 0x04, 0x31 },
    { 0x03D5, 0x05, 0x15 },
    { 0x03D5, 0x06, 0x04 },
    { 0x03D5, 0x07, 0x11 },
    { 0x03D5, 0x09, 0x47 },
    { 0x03D5, 0x0A, 0x06 },
    { 0x03D5, 0x0B, 0x07 },
    { 0x03D5, 0x10, 0xE1 },
    { 0x03D5, 0x11, 0x24 },
    { 0x03D5, 0x12, 0xC7 },
    { 0x03D5, 0x13, 0x14 },
    { 0x03D5, 0x14, 0x08 },
    { 0x03D5, 0x15, 0xE0 },
    { 0x03D5, 0x16, 0xF0 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x06 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x10 },
    { 0x03C0, 0x09, 0x11 },
    { 0x03C0, 0x0A, 0x12 },
    { 0x03C0, 0x0B, 0x13 },
    { 0x03C0, 0x0C, 0x14 },
    { 0x03C0, 0x0D, 0x15 },
    { 0x03C0, 0x0E, 0x16 },
    { 0x03C0, 0x0F, 0x17 },
    { 0x03C0, 0x10, 0x08 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts9[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x29 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x00 },
    { 0x03C0, 0x02, 0x00 },
    { 0x03C0, 0x03, 0x00 },
    { 0x03C0, 0x04, 0x00 },
    { 0x03C0, 0x05, 0x00 },
    { 0x03C0, 0x06, 0x00 },
    { 0x03C0, 0x07, 0x00 },
    { 0x03C0, 0x08, 0x00 },
    { 0x03C0, 0x09, 0x00 },
    { 0x03C0, 0x0A, 0x00 },
    { 0x03C0, 0x0B, 0x00 },
    { 0x03C0, 0x0C, 0x00 },
    { 0x03C0, 0x0D, 0x00 },
    { 0x03C0, 0x0E, 0x00 },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03C0, 0x16, 0x0F },
    { 0x03CF, 0x02, 0x0F },
    { 0x03CF, 0x05, 0x08 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts10[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x29 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x00, 0x2D },
    { 0x03D5, 0x01, 0x27 },
    { 0x03D5, 0x02, 0x28 },
    { 0x03D5, 0x03, 0x90 },
    { 0x03D5, 0x04, 0x2B },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x09, 0xC0 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x13, 0x14 },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x06 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x10 },
    { 0x03C0, 0x09, 0x11 },
    { 0x03C0, 0x0A, 0x12 },
    { 0x03C0, 0x0B, 0x13 },
    { 0x03C0, 0x0C, 0x14 },
    { 0x03C0, 0x0D, 0x15 },
    { 0x03C0, 0x0E, 0x16 },
    { 0x03C0, 0x0F, 0x17 },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts11[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x04, 0x54 },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x09, 0xC0 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x06 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x10 },
    { 0x03C0, 0x09, 0x11 },
    { 0x03C0, 0x0A, 0x12 },
    { 0x03C0, 0x0B, 0x13 },
    { 0x03C0, 0x0C, 0x14 },
    { 0x03C0, 0x0D, 0x15 },
    { 0x03C0, 0x0E, 0x16 },
    { 0x03C0, 0x0F, 0x17 },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts12[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03B5, 0x04, 0x54 },
    { 0x03B5, 0x05, 0x80 },
    { 0x03B5, 0x09, 0x40 },
    { 0x03B5, 0x0A, 0x00 },
    { 0x03B5, 0x0B, 0x00 },
    { 0x03B5, 0x0E, 0x00 },
    { 0x03B5, 0x0F, 0x00 },
    { 0x03B5, 0x10, 0x83 },
    { 0x03B5, 0x11, 0x85 },
    { 0x03B5, 0x12, 0x5D },
    { 0x03B5, 0x14, 0x0F },
    { 0x03B5, 0x15, 0x63 },
    { 0x03B5, 0x16, 0xBA },
    { 0x03B5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x08 },
    { 0x03C0, 0x02, 0x00 },
    { 0x03C0, 0x03, 0x00 },
    { 0x03C0, 0x04, 0x18 },
    { 0x03C0, 0x05, 0x18 },
    { 0x03C0, 0x06, 0x00 },
    { 0x03C0, 0x07, 0x00 },
    { 0x03C0, 0x08, 0x00 },
    { 0x03C0, 0x09, 0x08 },
    { 0x03C0, 0x0A, 0x00 },
    { 0x03C0, 0x0B, 0x00 },
    { 0x03C0, 0x0C, 0x00 },
    { 0x03C0, 0x0D, 0x18 },
    { 0x03C0, 0x0E, 0x00 },
    { 0x03C0, 0x0F, 0x00 },
    { 0x03C0, 0x10, 0x0B },
    { 0x03C0, 0x12, 0x05 },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 },
    { 0x03CF, 0x07, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts13[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x04, 0x54 },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0x83 },
    { 0x03D5, 0x11, 0x85 },
    { 0x03D5, 0x12, 0x5D },
    { 0x03D5, 0x14, 0x0F },
    { 0x03D5, 0x15, 0x63 },
    { 0x03D5, 0x16, 0xBA },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts14[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x04, 0x54 },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x06, 0x0B },
    { 0x03D5, 0x07, 0x3E },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0xEA },
    { 0x03D5, 0x11, 0x8C },
    { 0x03D5, 0x12, 0xDF },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x15, 0xE7 },
    { 0x03D5, 0x16, 0x04 },
    { 0x03D5, 0x17, 0xC3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x3F },
    { 0x03C0, 0x02, 0x3F },
    { 0x03C0, 0x03, 0x3F },
    { 0x03C0, 0x04, 0x3F },
    { 0x03C0, 0x05, 0x3F },
    { 0x03C0, 0x06, 0x3F },
    { 0x03C0, 0x07, 0x3F },
    { 0x03C0, 0x08, 0x3F },
    { 0x03C0, 0x09, 0x3F },
    { 0x03C0, 0x0A, 0x3F },
    { 0x03C0, 0x0B, 0x3F },
    { 0x03C0, 0x0C, 0x3F },
    { 0x03C0, 0x0D, 0x3F },
    { 0x03C0, 0x0E, 0x3F },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 },
    { 0x03CF, 0x07, 0x01 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts15[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x04, 0x54 },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x06, 0x0B },
    { 0x03D5, 0x07, 0x3E },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0xEA },
    { 0x03D5, 0x11, 0x8C },
    { 0x03D5, 0x12, 0xDF },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x15, 0xE7 },
    { 0x03D5, 0x16, 0x04 },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts16[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x0E },
    { 0x03D5, 0x04, 0x54 },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x09, 0x41 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x14, 0x40 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x06 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x08 },
    { 0x03C0, 0x09, 0x09 },
    { 0x03C0, 0x0A, 0x0A },
    { 0x03C0, 0x0B, 0x0B },
    { 0x03C0, 0x0C, 0x0C },
    { 0x03C0, 0x0D, 0x0D },
    { 0x03C0, 0x0E, 0x0E },
    { 0x03C0, 0x0F, 0x0F },
    { 0x03C0, 0x10, 0x41 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x40 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts17[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x0E },
    { 0x03D5, 0x03, 0x02 },
    { 0x03D5, 0x04, 0x53 },
    { 0x03D5, 0x05, 0x9F },
    { 0x03D5, 0x06, 0x0B },
    { 0x03D5, 0x07, 0x3E },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0xEA },
    { 0x03D5, 0x11, 0x8C },
    { 0x03D5, 0x12, 0xDF },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x14, 0x60 },
    { 0x03D5, 0x15, 0xE7 },
    { 0x03D5, 0x16, 0x04 },
    { 0x03D5, 0x17, 0xAB },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x06 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x10 },
    { 0x03C0, 0x09, 0x11 },
    { 0x03C0, 0x0A, 0x12 },
    { 0x03C0, 0x0B, 0x13 },
    { 0x03C0, 0x0C, 0x14 },
    { 0x03C0, 0x0D, 0x15 },
    { 0x03C0, 0x0E, 0x16 },
    { 0x03C0, 0x0F, 0x17 },
    { 0x03C0, 0x10, 0x41 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x40 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts18[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x0E },
    { 0x03D5, 0x00, 0x7B },
    { 0x03D5, 0x01, 0x63 },
    { 0x03D5, 0x02, 0x63 },
    { 0x03D5, 0x03, 0x80 },
    { 0x03D5, 0x04, 0x67 },
    { 0x03D5, 0x05, 0x10 },
    { 0x03D5, 0x06, 0x6F },
    { 0x03D5, 0x07, 0xF0 },
    { 0x03D5, 0x09, 0x60 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0x58 },
    { 0x03D5, 0x11, 0x8A },
    { 0x03D5, 0x12, 0x57 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x15, 0x57 },
    { 0x03D5, 0x16, 0x00 },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts19[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x00, 0x9A },
    { 0x03D5, 0x01, 0x7F },
    { 0x03D5, 0x02, 0x7F },
    { 0x03D5, 0x03, 0x9D },
    { 0x03D5, 0x04, 0x81 },
    { 0x03D5, 0x05, 0x17 },
    { 0x03D5, 0x06, 0x97 },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0x80 },
    { 0x03D5, 0x11, 0x84 },
    { 0x03D5, 0x12, 0x7F },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x15, 0x80 },
    { 0x03D5, 0x16, 0x00 },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts20[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x00, 0xB1 },
    { 0x03D5, 0x01, 0x8F },
    { 0x03D5, 0x02, 0x90 },
    { 0x03D5, 0x03, 0x14 },
    { 0x03D5, 0x04, 0x93 },
    { 0x03D5, 0x05, 0x9F },
    { 0x03D5, 0x06, 0x9A },
    { 0x03D5, 0x07, 0xFF },
    { 0x03D5, 0x09, 0x60 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0x70 },
    { 0x03D5, 0x11, 0x83 },
    { 0x03D5, 0x12, 0x5F },
    { 0x03D5, 0x13, 0x90 },
    { 0x03D5, 0x14, 0x60 },
    { 0x03D5, 0x15, 0x6F },
    { 0x03D5, 0x16, 0x8D },
    { 0x03D5, 0x17, 0xEB },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts21[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x00, 0xC0 },
    { 0x03D5, 0x01, 0x9F },
    { 0x03D5, 0x02, 0xA0 },
    { 0x03D5, 0x03, 0x83 },
    { 0x03D5, 0x04, 0xA4 },
    { 0x03D5, 0x05, 0x19 },
    { 0x03D5, 0x06, 0x18 },
    { 0x03D5, 0x07, 0xB2 },
    { 0x03D5, 0x09, 0x60 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0x01 },
    { 0x03D5, 0x11, 0x85 },
    { 0x03D5, 0x12, 0xFF },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x15, 0x00 },
    { 0x03D5, 0x16, 0x18 },
    { 0x03D5, 0x17, 0xE3 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts22[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x0E },
    { 0x03D5, 0x04, 0x54 },
    { 0x03D5, 0x05, 0x80 },
    { 0x03D5, 0x09, 0x40 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x13, 0x50 },
    { 0x03D5, 0x14, 0x40 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x06 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x10 },
    { 0x03C0, 0x09, 0x11 },
    { 0x03C0, 0x0A, 0x12 },
    { 0x03C0, 0x0B, 0x13 },
    { 0x03C0, 0x0C, 0x14 },
    { 0x03C0, 0x0D, 0x15 },
    { 0x03C0, 0x0E, 0x16 },
    { 0x03C0, 0x0F, 0x17 },
    { 0x03C0, 0x10, 0x41 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x40 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts23[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x04, 0x02 },
    { 0x03D5, 0x00, 0x9A },
    { 0x03D5, 0x01, 0x83 },
    { 0x03D5, 0x02, 0x84 },
    { 0x03D5, 0x03, 0x9C },
    { 0x03D5, 0x04, 0x88 },
    { 0x03D5, 0x05, 0x1A },
    { 0x03D5, 0x09, 0x47 },
    { 0x03D5, 0x0A, 0x06 },
    { 0x03D5, 0x0B, 0x07 },
    { 0x03D5, 0x10, 0x83 },
    { 0x03D5, 0x11, 0x85 },
    { 0x03D5, 0x12, 0x58 },
    { 0x03D5, 0x13, 0x42 },
    { 0x03D5, 0x15, 0x63 },
    { 0x03D5, 0x16, 0xBA },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x0C },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x90 },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts24[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x04, 0x02 },
    { 0x03D5, 0x00, 0x9A },
    { 0x03D5, 0x01, 0x83 },
    { 0x03D5, 0x02, 0x84 },
    { 0x03D5, 0x03, 0x9C },
    { 0x03D5, 0x04, 0x88 },
    { 0x03D5, 0x05, 0x1A },
    { 0x03D5, 0x11, 0x8E },
    { 0x03D5, 0x13, 0x42 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x0C },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x90 },
    { 0x03CF, 0x07, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVideoParametersTest_modifiedIndexedPorts25[] =
{
    { 0x03C5, 0x00, 0x03 },
    { 0x03C5, 0x01, 0x21 },
    { 0x03C5, 0x02, 0x0F },
    { 0x03C5, 0x04, 0x06 },
    { 0x03D5, 0x00, 0x01 },
    { 0x03D5, 0x01, 0xC7 },
    { 0x03D5, 0x02, 0xC8 },
    { 0x03D5, 0x03, 0x81 },
    { 0x03D5, 0x04, 0xD3 },
    { 0x03D5, 0x05, 0x13 },
    { 0x03D5, 0x06, 0x74 },
    { 0x03D5, 0x07, 0xE0 },
    { 0x03D5, 0x09, 0x60 },
    { 0x03D5, 0x0A, 0x00 },
    { 0x03D5, 0x0B, 0x00 },
    { 0x03D5, 0x10, 0x58 },
    { 0x03D5, 0x11, 0x00 },
    { 0x03D5, 0x12, 0x57 },
    { 0x03D5, 0x13, 0x64 },
    { 0x03D5, 0x14, 0x00 },
    { 0x03D5, 0x15, 0x58 },
    { 0x03D5, 0x16, 0x00 },
    { 0x03C0, 0x00, 0x00 },
    { 0x03C0, 0x01, 0x01 },
    { 0x03C0, 0x02, 0x02 },
    { 0x03C0, 0x03, 0x03 },
    { 0x03C0, 0x04, 0x04 },
    { 0x03C0, 0x05, 0x05 },
    { 0x03C0, 0x06, 0x14 },
    { 0x03C0, 0x07, 0x07 },
    { 0x03C0, 0x08, 0x38 },
    { 0x03C0, 0x09, 0x39 },
    { 0x03C0, 0x0A, 0x3A },
    { 0x03C0, 0x0B, 0x3B },
    { 0x03C0, 0x0C, 0x3C },
    { 0x03C0, 0x0D, 0x3D },
    { 0x03C0, 0x0E, 0x3E },
    { 0x03C0, 0x0F, 0x3F },
    { 0x03C0, 0x10, 0x01 },
    { 0x03C0, 0x12, 0x0F },
    { 0x03C0, 0x13, 0x00 },
    { 0x03C0, 0x14, 0x00 },
    { 0x03C0, 0x15, 0x00 },
    { 0x03CF, 0x05, 0x00 },
    { 0x03CF, 0x06, 0x05 }
};

Hag::Testing::Mock::PortAndIndexAndValue* ApplyVideoParametersTest_modifiedIndexedPorts[] =
{
    ApplyVideoParametersTest_modifiedIndexedPorts0, //0
    ApplyVideoParametersTest_modifiedIndexedPorts1, //1
    ApplyVideoParametersTest_modifiedIndexedPorts2, //2
    ApplyVideoParametersTest_modifiedIndexedPorts2, //3
    ApplyVideoParametersTest_modifiedIndexedPorts3, //4
    ApplyVideoParametersTest_modifiedIndexedPorts3, //5
    ApplyVideoParametersTest_modifiedIndexedPorts4, //6
    ApplyVideoParametersTest_modifiedIndexedPorts5, //7
    ApplyVideoParametersTest_modifiedIndexedPorts6, //8
    ApplyVideoParametersTest_modifiedIndexedPorts7, //9
    ApplyVideoParametersTest_modifiedIndexedPorts8, //10
    ApplyVideoParametersTest_modifiedIndexedPorts9, //11
    ApplyVideoParametersTest_modifiedIndexedPorts9, //12
    ApplyVideoParametersTest_modifiedIndexedPorts10, //13
    ApplyVideoParametersTest_modifiedIndexedPorts11, //14
    ApplyVideoParametersTest_modifiedIndexedPorts12, //15
    ApplyVideoParametersTest_modifiedIndexedPorts13, //16
    ApplyVideoParametersTest_modifiedIndexedPorts14, //17
    ApplyVideoParametersTest_modifiedIndexedPorts15, //18
    ApplyVideoParametersTest_modifiedIndexedPorts16, //19
    ApplyVideoParametersTest_modifiedIndexedPorts17, //20
    ApplyVideoParametersTest_modifiedIndexedPorts18, //21
    ApplyVideoParametersTest_modifiedIndexedPorts18, //22
    ApplyVideoParametersTest_modifiedIndexedPorts19, //23
    ApplyVideoParametersTest_modifiedIndexedPorts19, //24
    ApplyVideoParametersTest_modifiedIndexedPorts20, //25
    ApplyVideoParametersTest_modifiedIndexedPorts21, //26
    ApplyVideoParametersTest_modifiedIndexedPorts22, //27
    ApplyVideoParametersTest_modifiedIndexedPorts23, //28
    ApplyVideoParametersTest_modifiedIndexedPorts24, //29
    ApplyVideoParametersTest_modifiedIndexedPorts22, //30
    ApplyVideoParametersTest_modifiedIndexedPorts17, //31
    ApplyVideoParametersTest_modifiedIndexedPorts18, //32
    ApplyVideoParametersTest_modifiedIndexedPorts18, //33
    ApplyVideoParametersTest_modifiedIndexedPorts19, //34
    ApplyVideoParametersTest_modifiedIndexedPorts19, //35
    ApplyVideoParametersTest_modifiedIndexedPorts21, //36
    ApplyVideoParametersTest_modifiedIndexedPorts21, //37
    ApplyVideoParametersTest_modifiedIndexedPorts17, //38
    ApplyVideoParametersTest_modifiedIndexedPorts17, //39
    ApplyVideoParametersTest_modifiedIndexedPorts17, //40
    ApplyVideoParametersTest_modifiedIndexedPorts18, //41
    ApplyVideoParametersTest_modifiedIndexedPorts18, //42
    ApplyVideoParametersTest_modifiedIndexedPorts18, //43
    ApplyVideoParametersTest_modifiedIndexedPorts19, //44
    ApplyVideoParametersTest_modifiedIndexedPorts19, //45
    ApplyVideoParametersTest_modifiedIndexedPorts19, //46
    ApplyVideoParametersTest_modifiedIndexedPorts21, //47
    ApplyVideoParametersTest_modifiedIndexedPorts21, //48
    ApplyVideoParametersTest_modifiedIndexedPorts25 //49
};

int ApplyVideoParametersTest_modifiedIndexedPortsCount[] =
{
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //0
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //1
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //2
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //3
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //4
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //5
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //6
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //7
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //8
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //9
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //10
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //11
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //12
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //13
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //14
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //15
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts13) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //16
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts14) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //17
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //18
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //19
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //20
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //21
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //22
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //23
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //24
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts20) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //25
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //26
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts22) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //27
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts23) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //28
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts24) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //29
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts22) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //30
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //31
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //32
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //33
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //34
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //35
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //36
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //37
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //38
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //39
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //40
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //41
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //42
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //43
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //44
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //45
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //46
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //47
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //48
    sizeof(ApplyVideoParametersTest_modifiedIndexedPorts25) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue) //49
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts0[] =
{
    { 0, 0 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts1[] =
{
    { 0x03C5, 0x02 },
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x05 },
    { 0x03CF, 0x06 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts2[] =
{
    { 0x03C5, 0x02 },
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x05 },
    { 0x03CF, 0x06 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts3[] =
{
    { 0x03C5, 0x02 },
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts4[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts5[] =
{
    { 0x03C5, 0x02 },
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03B5, 0x00 },
    { 0x03B5, 0x01 },
    { 0x03B5, 0x02 },
    { 0x03B5, 0x03 },
    { 0x03B5, 0x04 },
    { 0x03B5, 0x05 },
    { 0x03B5, 0x06 },
    { 0x03B5, 0x07 },
    { 0x03B5, 0x08 },
    { 0x03B5, 0x09 },
    { 0x03B5, 0x0A },
    { 0x03B5, 0x0B },
    { 0x03B5, 0x0C },
    { 0x03B5, 0x0D },
    { 0x03B5, 0x10 },
    { 0x03B5, 0x12 },
    { 0x03B5, 0x13 },
    { 0x03B5, 0x15 },
    { 0x03B5, 0x16 },
    { 0x03B5, 0x17 },
    { 0x03B5, 0x18 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x05 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts6[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts7[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts8[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x05 },
    { 0x03CF, 0x06 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts9[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts10[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts11[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03B5, 0x00 },
    { 0x03B5, 0x01 },
    { 0x03B5, 0x02 },
    { 0x03B5, 0x03 },
    { 0x03B5, 0x06 },
    { 0x03B5, 0x07 },
    { 0x03B5, 0x08 },
    { 0x03B5, 0x0C },
    { 0x03B5, 0x0D },
    { 0x03B5, 0x13 },
    { 0x03B5, 0x18 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts12[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts13[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts14[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts15[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts16[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts17[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts18[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts19[] =
{
    { 0x03C5, 0x02 },
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x06 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts20[] =
{
    { 0x03C5, 0x02 },
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x06 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts21[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x13 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 },
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts22[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x13 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts23[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex ApplyVideoParametersTest_readIndexedPorts24[] =
{
    { 0x03C5, 0x03 },
    { 0x03CF, 0x00 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03C0, 0x11 },
    { 0x03C0, 0x16 },
    { 0x03CF, 0x01 },
    { 0x03CF, 0x02 },
    { 0x03CF, 0x03 },
    { 0x03CF, 0x04 },
    { 0x03CF, 0x07 },
    { 0x03CF, 0x08 }
};

Hag::Testing::Mock::PortAndIndex* ApplyVideoParametersTest_readIndexedPorts[] =
{
    ApplyVideoParametersTest_readIndexedPorts0, //0
    ApplyVideoParametersTest_readIndexedPorts1, //1
    ApplyVideoParametersTest_readIndexedPorts2, //2
    ApplyVideoParametersTest_readIndexedPorts2, //3
    ApplyVideoParametersTest_readIndexedPorts3, //4
    ApplyVideoParametersTest_readIndexedPorts3, //5
    ApplyVideoParametersTest_readIndexedPorts4, //6
    ApplyVideoParametersTest_readIndexedPorts5, //7
    ApplyVideoParametersTest_readIndexedPorts6, //8
    ApplyVideoParametersTest_readIndexedPorts7, //9
    ApplyVideoParametersTest_readIndexedPorts8, //10
    ApplyVideoParametersTest_readIndexedPorts9, //11
    ApplyVideoParametersTest_readIndexedPorts9, //12
    ApplyVideoParametersTest_readIndexedPorts10, //13
    ApplyVideoParametersTest_readIndexedPorts24, //14
    ApplyVideoParametersTest_readIndexedPorts11, //15
    ApplyVideoParametersTest_readIndexedPorts12, //16
    ApplyVideoParametersTest_readIndexedPorts13, //17
    ApplyVideoParametersTest_readIndexedPorts23, //18
    ApplyVideoParametersTest_readIndexedPorts14, //19
    ApplyVideoParametersTest_readIndexedPorts15, //20
    ApplyVideoParametersTest_readIndexedPorts16, //21
    ApplyVideoParametersTest_readIndexedPorts16, //22
    ApplyVideoParametersTest_readIndexedPorts17, //23
    ApplyVideoParametersTest_readIndexedPorts17, //24
    ApplyVideoParametersTest_readIndexedPorts16, //25
    ApplyVideoParametersTest_readIndexedPorts16, //26
    ApplyVideoParametersTest_readIndexedPorts18, //27
    ApplyVideoParametersTest_readIndexedPorts19, //28
    ApplyVideoParametersTest_readIndexedPorts20, //29
    ApplyVideoParametersTest_readIndexedPorts18, //30
    ApplyVideoParametersTest_readIndexedPorts21, //31
    ApplyVideoParametersTest_readIndexedPorts16, //32
    ApplyVideoParametersTest_readIndexedPorts16, //33
    ApplyVideoParametersTest_readIndexedPorts17, //34
    ApplyVideoParametersTest_readIndexedPorts17, //35
    ApplyVideoParametersTest_readIndexedPorts16, //36
    ApplyVideoParametersTest_readIndexedPorts16, //37
    ApplyVideoParametersTest_readIndexedPorts21, //38
    ApplyVideoParametersTest_readIndexedPorts21, //39
    ApplyVideoParametersTest_readIndexedPorts21, //40
    ApplyVideoParametersTest_readIndexedPorts16, //41
    ApplyVideoParametersTest_readIndexedPorts16, //42
    ApplyVideoParametersTest_readIndexedPorts16, //43
    ApplyVideoParametersTest_readIndexedPorts17, //44
    ApplyVideoParametersTest_readIndexedPorts17, //45
    ApplyVideoParametersTest_readIndexedPorts17, //46
    ApplyVideoParametersTest_readIndexedPorts16, //47
    ApplyVideoParametersTest_readIndexedPorts16, //48
    ApplyVideoParametersTest_readIndexedPorts22 //49
};

int ApplyVideoParametersTest_readIndexedPortsCount[] =
{
    sizeof(ApplyVideoParametersTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //0
    sizeof(ApplyVideoParametersTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //1
    sizeof(ApplyVideoParametersTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //2
    sizeof(ApplyVideoParametersTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //3
    sizeof(ApplyVideoParametersTest_readIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndex), //4
    sizeof(ApplyVideoParametersTest_readIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndex), //5
    sizeof(ApplyVideoParametersTest_readIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndex), //6
    sizeof(ApplyVideoParametersTest_readIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndex), //7
    sizeof(ApplyVideoParametersTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //8
    sizeof(ApplyVideoParametersTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex), //9
    sizeof(ApplyVideoParametersTest_readIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndex), //10
    sizeof(ApplyVideoParametersTest_readIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndex), //11
    sizeof(ApplyVideoParametersTest_readIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndex), //12
    sizeof(ApplyVideoParametersTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //13
    sizeof(ApplyVideoParametersTest_readIndexedPorts24) / sizeof(Hag::Testing::Mock::PortAndIndex), //14
    sizeof(ApplyVideoParametersTest_readIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndex), //15
    sizeof(ApplyVideoParametersTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //16
    sizeof(ApplyVideoParametersTest_readIndexedPorts13) / sizeof(Hag::Testing::Mock::PortAndIndex), //17
    sizeof(ApplyVideoParametersTest_readIndexedPorts23) / sizeof(Hag::Testing::Mock::PortAndIndex), //18
    sizeof(ApplyVideoParametersTest_readIndexedPorts14) / sizeof(Hag::Testing::Mock::PortAndIndex), //19
    sizeof(ApplyVideoParametersTest_readIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndex), //20
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //21
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //22
    sizeof(ApplyVideoParametersTest_readIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndex), //23
    sizeof(ApplyVideoParametersTest_readIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndex), //24
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //25
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //26
    sizeof(ApplyVideoParametersTest_readIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndex), //27
    sizeof(ApplyVideoParametersTest_readIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndex), //28
    sizeof(ApplyVideoParametersTest_readIndexedPorts20) / sizeof(Hag::Testing::Mock::PortAndIndex), //29
    sizeof(ApplyVideoParametersTest_readIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndex), //30
    sizeof(ApplyVideoParametersTest_readIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndex), //31
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //32
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //33
    sizeof(ApplyVideoParametersTest_readIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndex), //34
    sizeof(ApplyVideoParametersTest_readIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndex), //35
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //36
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //37
    sizeof(ApplyVideoParametersTest_readIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndex), //38
    sizeof(ApplyVideoParametersTest_readIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndex), //39
    sizeof(ApplyVideoParametersTest_readIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndex), //40
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //41
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //42
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //43
    sizeof(ApplyVideoParametersTest_readIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndex), //44
    sizeof(ApplyVideoParametersTest_readIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndex), //45
    sizeof(ApplyVideoParametersTest_readIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndex), //46
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //47
    sizeof(ApplyVideoParametersTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex), //48
    sizeof(ApplyVideoParametersTest_readIndexedPorts22) / sizeof(Hag::Testing::Mock::PortAndIndex) //49

};

Hag::Testing::Mock::PortAndValue CRTControllerInitData_modifiedPorts[] =
{
    {0,0}
};

int CRTControllerInitData_modifiedPortsCount = sizeof(CRTControllerInitData_modifiedPorts) / sizeof(Hag::Testing::Mock::PortAndValue);

uint16_t CRTControllerInitData_readPorts[] =
{
    0
};

int CRTControllerInitData_readPortsCount = sizeof(CRTControllerInitData_readPorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndexAndValue CRTControllerInitData_modifiedIndexedPorts[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03D5, 0x32, 0x40 },
    { 0x03D5, 0x3B, 0x5A },
    { 0x03D5, 0x3C, 0x10 },
    { 0x03D5, 0x40, 0xD0 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0x38 },
    { 0x03D5, 0x60, 0x07 },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

int CRTControllerInitData_modifiedIndexedPortsCount = sizeof(CRTControllerInitData_modifiedIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue);

Hag::Testing::Mock::PortAndIndex CRTControllerInitData_readIndexedPorts[] =
{
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x34 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x42 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A }
};

int CRTControllerInitData_readIndexedPortsCount = sizeof(CRTControllerInitData_readIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndex);

uint16_t CRTControllerInitData_ignorePorts[] =
{
    0x03C4,
    0x03C5,
    0x03CC,
    0x03D4,
    0x03D5
};

int CRTControllerInitData_ignorePortsCount = sizeof(CRTControllerInitData_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts0[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts1[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x33 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts2[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x44 },
    { 0x03C5, 0x13, 0x51 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts3[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x22 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts4[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x24 },
    { 0x03C5, 0x13, 0x6F },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts5[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x00 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts6[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x20 },
    { 0x03C5, 0x13, 0x13 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x20 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts7[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x30 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x20 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts8[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x22 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x20 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetupClocksTest_modifiedIndexedPorts9[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x12, 0x24 },
    { 0x03C5, 0x13, 0x6B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03D5, 0x42, 0x20 }
};

Hag::Testing::Mock::PortAndIndexAndValue* SetupClocksTest_modifiedIndexedPorts[] =
{
    SetupClocksTest_modifiedIndexedPorts1, //20
    SetupClocksTest_modifiedIndexedPorts2, //21
    SetupClocksTest_modifiedIndexedPorts2, //22
    SetupClocksTest_modifiedIndexedPorts3, //23
    SetupClocksTest_modifiedIndexedPorts3, //24
    SetupClocksTest_modifiedIndexedPorts3, //25
    SetupClocksTest_modifiedIndexedPorts4, //26
    SetupClocksTest_modifiedIndexedPorts5, //27
    SetupClocksTest_modifiedIndexedPorts0, //28
    SetupClocksTest_modifiedIndexedPorts0, //29
    SetupClocksTest_modifiedIndexedPorts5, //30
    SetupClocksTest_modifiedIndexedPorts1, //31
    SetupClocksTest_modifiedIndexedPorts2, //32
    SetupClocksTest_modifiedIndexedPorts2, //33
    SetupClocksTest_modifiedIndexedPorts3, //34
    SetupClocksTest_modifiedIndexedPorts3, //35
    SetupClocksTest_modifiedIndexedPorts6, //36
    SetupClocksTest_modifiedIndexedPorts4, //37
    SetupClocksTest_modifiedIndexedPorts1, //38
    SetupClocksTest_modifiedIndexedPorts1, //39
    SetupClocksTest_modifiedIndexedPorts1, //40
    SetupClocksTest_modifiedIndexedPorts2, //41
    SetupClocksTest_modifiedIndexedPorts2, //42
    SetupClocksTest_modifiedIndexedPorts2, //43
    SetupClocksTest_modifiedIndexedPorts3, //44
    SetupClocksTest_modifiedIndexedPorts3, //45
    SetupClocksTest_modifiedIndexedPorts7, //46
    SetupClocksTest_modifiedIndexedPorts8, //47
    SetupClocksTest_modifiedIndexedPorts8, //48
    SetupClocksTest_modifiedIndexedPorts9 //49
};

int SetupClocksTest_modifiedIndexedPortsCount[] =
{
    sizeof(SetupClocksTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //20
    sizeof(SetupClocksTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //21
    sizeof(SetupClocksTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //22
    sizeof(SetupClocksTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //23
    sizeof(SetupClocksTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //24
    sizeof(SetupClocksTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //25
    sizeof(SetupClocksTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //26
    sizeof(SetupClocksTest_modifiedIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //27
    sizeof(SetupClocksTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //28
    sizeof(SetupClocksTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //29
    sizeof(SetupClocksTest_modifiedIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //30
    sizeof(SetupClocksTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //31
    sizeof(SetupClocksTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //32
    sizeof(SetupClocksTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //33
    sizeof(SetupClocksTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //34
    sizeof(SetupClocksTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //35
    sizeof(SetupClocksTest_modifiedIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //36
    sizeof(SetupClocksTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //37
    sizeof(SetupClocksTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //38
    sizeof(SetupClocksTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //39
    sizeof(SetupClocksTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //40
    sizeof(SetupClocksTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //41
    sizeof(SetupClocksTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //42
    sizeof(SetupClocksTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //43
    sizeof(SetupClocksTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //44
    sizeof(SetupClocksTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //45
    sizeof(SetupClocksTest_modifiedIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //46
    sizeof(SetupClocksTest_modifiedIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //47
    sizeof(SetupClocksTest_modifiedIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //48
    sizeof(SetupClocksTest_modifiedIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue) //49
};

uint16_t SetupClocksTest_ignorePorts[] =
{
    0x03C4,
    0x03C5,
    0x03CC,
    0x03D4,
    0x03D5
};

uint16_t SetupClocksTest_ignorePortsCount = sizeof(SetupClocksTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex SetupClocksTest_ignoreIndexedPorts[] =
{
    { 0x03C5, 0x18 },
    { 0x03D5, 0x2E },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 }
};

uint16_t SetupClocksTest_ignoreIndexedPortsCount = sizeof(SetupClocksTest_ignoreIndexedPorts) / sizeof (Hag::Testing::Mock::PortAndIndex);

uint16_t ConfigureExtraVESAModeSettingsTest_ignorePorts[] =
{
    0x03C4,
    0x03C5,
    0x03CC,
    0x03D4,
    0x03D5
};

uint16_t ConfigureExtraVESAModeSettingsTest_ignorePortsCount = sizeof(ConfigureExtraVESAModeSettingsTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_ignoreIndexedPorts[] =
{
    { 0x03D5, 0x2D },
    { 0x03D5, 0x2E }
};

uint16_t ConfigureExtraVESAModeSettingsTest_ignoreIndexedPortsCount = sizeof(ConfigureExtraVESAModeSettingsTest_ignoreIndexedPorts) / sizeof (Hag::Testing::Mock::PortAndIndex);


Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts1[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0x88 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts2[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x02 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts3[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x02 },
    { 0x03D5, 0x54, 0xC0 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts4[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xC8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts5[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xC0 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts6[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x02 },
    { 0x03D5, 0x54, 0x48 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts7[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0x48 },
    { 0x03D5, 0x60, 0x48 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts8[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x90 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x01 },
    { 0x03D5, 0x54, 0x40 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts9[] =
{
    { 0x03D5, 0x02, 0x4F },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x02 },
    { 0x03D5, 0x54, 0x80 },
    { 0x03D5, 0x5E, 0x15 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts10[] =
{
    { 0x03D5, 0x02, 0x4F },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0x80 },
    { 0x03D5, 0x5E, 0x55 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts11[] =
{
    { 0x03D5, 0x02, 0x4F },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xC0 },
    { 0x03D5, 0x5E, 0x55 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts12[] =
{
    { 0x03D5, 0x02, 0x4F },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x01 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts13[] =
{
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x70 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x08 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts14[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x42 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0x08 },
    { 0x03D5, 0x60, 0x38 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x50 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x40 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts16[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x32 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x02 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x5D, 0x08 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts17[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x64 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x82 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x5D, 0x08 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts18[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x64 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x80 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts19[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x02 },
    { 0x03D5, 0x54, 0xC0 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x01 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts20[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xC8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x01 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts21[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x02 },
    { 0x03D5, 0x54, 0x48 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x01 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts22[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0x48 },
    { 0x03D5, 0x60, 0x48 },
    { 0x03D5, 0x67, 0x01 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts23[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0xC2 },
    { 0x03D5, 0x54, 0x18 },
    { 0x03D5, 0x5E, 0x15 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts24[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0xC0 },
    { 0x03D5, 0x54, 0x20 },
    { 0x03D5, 0x5E, 0x55 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts25[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0xC0 },
    { 0x03D5, 0x54, 0x28 },
    { 0x03D5, 0x5E, 0x55 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts26[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0xC0 },
    { 0x03D5, 0x54, 0x50 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x01 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x50 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts28[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x50 },
    { 0x03D5, 0x54, 0x58 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts29[] =
{
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x70 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x30 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts30[] =
{
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x70 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x30 },
    { 0x03D5, 0x60, 0x19 },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts31[] =
{
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x70 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x38 },
    { 0x03D5, 0x60, 0x1C },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xC8 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0x92 },
    { 0x03D5, 0x54, 0x38 },
    { 0x03D5, 0x5D, 0x01 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts33[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xC8 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0x92 },
    { 0x03D5, 0x54, 0x48 },
    { 0x03D5, 0x5D, 0x01 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts34[] =
{
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x90 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0xB2 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x5D, 0x08 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts35[] =
{
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x90 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0xB2 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x10 },
    { 0x03D5, 0x5D, 0x08 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts36[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0x12 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x10 },
    { 0x03D5, 0x5D, 0x5D },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts37[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0x10 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x10 },
    { 0x03D5, 0x5D, 0x7D },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts38[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0x10 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x18 },
    { 0x03D5, 0x5D, 0x7D },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts39[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0x10 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x28 },
    { 0x03D5, 0x5D, 0x75 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts40[] =
{
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x30 },
    { 0x03D5, 0x51, 0x20 },
    { 0x03D5, 0x54, 0x38 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts41[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0xD0 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x10 },
    { 0x03D5, 0x5D, 0x7F },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts42[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0xC8 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0xAF },
    { 0x03D5, 0x50, 0x81 },
    { 0x03D5, 0x5D, 0x01 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts43[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x50, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts44[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x80 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x05 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts45[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x32 },
    { 0x03D5, 0x31, 0x05 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x05 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts46[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x05 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x05 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts47[] =
{
    { 0x03D5, 0x04, 0x57 },
    { 0x03D5, 0x05, 0x83 },
    { 0x03D5, 0x13, 0x50 },
    { 0x03D5, 0x31, 0x05 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x05 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF }
};

Hag::Testing::Mock::PortAndIndexAndValue* ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts[] =
{
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //0
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //1
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts1, //2
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts2, //3
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts2, //4
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts2, //5
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts43, //6
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //7
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //8
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //9
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //10
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts3, //11
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts4, //12
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts44, //13
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts5, //14
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts6, //15
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts7, //16
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //17
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //18
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts8, //19
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts9, //20
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts10, //21
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts11, //22
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts12, //23
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts13, //24
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts14, //25
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts14, //26
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15, //27
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15, //28
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15, //29
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15, //30
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts16, //31
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts16, //32
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts16, //33
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts45, //34
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts17, //35
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts17, //36
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts17, //37
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts18, //38
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts19, //39
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts20, //40
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts46, //41
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts46, //42
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts21, //43
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts22, //44
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //45
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0, //46
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts47, //47
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts23, //48
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts24, //49
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts25, //50
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts26, //51
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27, //52
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27, //53
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts28, //54
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27, //55
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27, //56
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts28, //57
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts29, //58
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts30, //59
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts31, //60
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32, //61
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32, //62
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts33, //63
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32, //64
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32, //65
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts33, //66
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts34, //67
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts34, //68
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts35, //69
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts36, //70
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts37, //71
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts38, //72
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts39, //73
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts36, //74
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts37, //75
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts38, //76
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts39, //77
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts40, //78
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts41, //79
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts41, //80
    ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts42 //81
};

int ConfigureExtraVESAModeSettingsTest_modifiedIndexedPortsCount[] =
{
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //0
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //1
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //2
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //3
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //4
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //5
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts43) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //6
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //7
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //8
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //9
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //10
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //11
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //12
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts44) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //13
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //14
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //15
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //16
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //17
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //18
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //19
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //20
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //21
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //22
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //23
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts13) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //24
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts14) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //25
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts14) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //26
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //27
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //28
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //29
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //30
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //31
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //32
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //33
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts45) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //34
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //35
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //36
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //37
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //38
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //39
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts20) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //40
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts46) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //41
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts46) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //42
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //43
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts22) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //44
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //45
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //46
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts47) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //47
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts23) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //48
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts24) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //49
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts25) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //50
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts26) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //51
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //52
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //53
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts28) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //54
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //55
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts27) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //56
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts28) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //57
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts29) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //58
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts30) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //59
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts31) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //60
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //61
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //62
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts33) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //63
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //64
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts32) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //65
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts33) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //66
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts34) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //67
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts34) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //68
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts35) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //69
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts36) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //70
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts37) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //71
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts38) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //72
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts39) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //73
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts36) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //74
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts37) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //75
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts38) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //76
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts39) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //77
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts40) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //78
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts41) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //79
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts41) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //80
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedIndexedPorts42) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue) //81
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts0[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts1[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts2[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts3[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts4[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts5[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts6[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts7[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts8[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts9[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5D }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts10[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5E }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts11[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x54 },
    { 0x03D5, 0x5E }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts12[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x5E }
};

Hag::Testing::Mock::PortAndIndex ConfigureExtraVESAModeSettingsTest_readIndexedPorts13[] =
{
    { 0x03D5, 0x00 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x54 },
    { 0x03D5, 0x5E }
};

Hag::Testing::Mock::PortAndIndex* ConfigureExtraVESAModeSettingsTest_readIndexedPorts[] =
{
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //0
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //1
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //2
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts1, //3
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts1, //4
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts1, //5
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //6
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //7
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //8
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //9
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //10
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts1, //11
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //12
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //13
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //14
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts1, //15
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //16
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //17
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //18
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts2, //19
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts3, //20
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts4, //21
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts4, //22
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts5, //23
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //24
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //25
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //26
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts2, //27
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts2, //28
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts2, //29
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts2, //30
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts7, //31
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts7, //32
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts7, //33
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //34
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts7, //35
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts7, //36
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts7, //37
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts2, //38
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts8, //39
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts5, //40
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //41
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //42
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts8, //43
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts5, //44
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //45
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //46
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts0, //47
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts3, //48
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts9, //49
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts9, //50
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //51
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //52
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //53
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //54
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //55
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //56
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //57
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //58
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //59
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //60
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //61
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //62
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //63
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //64
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //65
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //66
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts11, //67
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts11, //68
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //69
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //70
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //71
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //72
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //73
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts10, //74
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //75
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //76
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //77
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts6, //78
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //79
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts12, //80
    ConfigureExtraVESAModeSettingsTest_readIndexedPorts13 //81
};

int ConfigureExtraVESAModeSettingsTest_readIndexedPortsCount[] =
{
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //0
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //1
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //2
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //3
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //4
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //5
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //6
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //7
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //8
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //9
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //10
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //11
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //12
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //13
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //14
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //15
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //16
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //17
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //18
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //19
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndex), //20
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndex), //21
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndex), //22
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndex), //23
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //24
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //25
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //26
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //27
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //28
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //29
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //30
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex), //31
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex), //32
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex), //33
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //34
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex), //35
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex), //36
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex), //37
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //38
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndex), //39
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndex), //40
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //41
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //42
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndex), //43
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndex), //44
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //45
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //46
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //47
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndex), //48
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndex), //49
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndex), //50
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //51
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //52
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //53
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //54
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //55
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //56
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //57
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //58
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //59
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //60
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //61
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //62
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //63
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //64
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //65
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //66
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndex), //67
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndex), //68
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //69
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //70
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //71
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //72
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //73
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex), //74
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //75
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //76
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //77
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex), //78
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //79
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex), //80
    sizeof(ConfigureExtraVESAModeSettingsTest_readIndexedPorts13) / sizeof(Hag::Testing::Mock::PortAndIndex) //81
};

Hag::Testing::Mock::PortAndValue ConfigureExtraVESAModeSettingsTest_modifiedPorts0[] =
{
    { 0x0000, 0x00 }
};

Hag::Testing::Mock::PortAndValue ConfigureExtraVESAModeSettingsTest_modifiedPorts1[] =
{
    { 0x03C2, 0x27 }
};

Hag::Testing::Mock::PortAndValue* ConfigureExtraVESAModeSettingsTest_modifiedPorts[] =
{
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //0
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //1
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //2
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //3
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //4
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //5
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //6
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //7
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //8
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //9
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //10
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //11
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //12
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //13
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //14
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //15
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //16
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //17
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //18
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //19
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //20
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //21
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //22
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //23
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //24
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //25
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //26
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //27
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //28
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //29
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //30
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //31
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //32
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //33
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //34
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //35
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //36
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //37
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //38
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //39
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //40
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //41
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //42
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //43
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //44
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //45
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //46
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //47
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //48
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //49
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //50
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //51
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //52
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //53
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //54
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //55
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //56
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //57
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //58
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //59
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //60
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //61
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //62
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //63
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //64
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //65
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //66
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //67
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //68
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //69
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //70
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //71
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //72
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //73
    ConfigureExtraVESAModeSettingsTest_modifiedPorts1, //74
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //75
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //76
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //77
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //78
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //79
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0, //80
    ConfigureExtraVESAModeSettingsTest_modifiedPorts0 //81
};

int ConfigureExtraVESAModeSettingsTest_modifiedPortsCount[] =
{
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //0
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //1
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //2
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //3
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //4
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //5
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //6
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //7
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //8
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //9
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //10
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //11
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //12
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //13
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //14
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //15
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //16
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //17
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //18
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //19
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //20
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //21
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //22
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //23
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //24
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //25
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //26
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //27
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //28
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //29
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //30
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //31
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //32
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //33
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //34
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //35
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //36
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //37
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //38
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //39
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //40
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //41
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //42
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //43
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //44
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //45
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //46
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //47
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //48
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //49
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //50
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //51
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //52
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //53
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //54
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //55
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //56
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //57
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //58
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //59
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //60
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //61
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //62
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //63
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //64
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //65
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //66
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //67
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //68
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //69
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //70
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //71
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //72
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //73
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //74
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //75
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //76
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //77
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //78
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //79
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //80
    sizeof(ConfigureExtraVESAModeSettingsTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //81
};

uint16_t EnableOver256KAddressingAndSetAddressWindowTest_ignorePorts[] =
{
    0x03D4,
    0x03D5
};

int EnableOver256KAddressingAndSetAddressWindowTest_ignorePortsCount = sizeof(EnableOver256KAddressingAndSetAddressWindowTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0[] =
{
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1[] =
{
    { 0x03D5, 0x32 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex* EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts[] =
{
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //0
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //1
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //2
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //3
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //4
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //5
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //6
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //7
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //8
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //9
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //10
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //11
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //12
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //13
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //14
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //15
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //16
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //17
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //18
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0, //19
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //20
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //21
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //22
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //23
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //24
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //25
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //26
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //27
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //28
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //29
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //30
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //31
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //32
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //33
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //34
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //35
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //36
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //37
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //38
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //39
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //40
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //41
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //42
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //43
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //44
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //45
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //46
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //47
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1, //48
    EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1 //49
};

int EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPortsCount[] =
{
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //0
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //1
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //2
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //3
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //4
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //5
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //6
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //7
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //8
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //9
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //10
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //11
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //12
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //13
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //14
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //15
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //16
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //17
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //18
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //19
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //20
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //21
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //22
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //23
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //24
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //25
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //26
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //27
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //28
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //29
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //30
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //31
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //32
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //33
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //34
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //35
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //36
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //37
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //38
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //39
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //40
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //41
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //42
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //43
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //44
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //45
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //46
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //47
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //48
    sizeof(EnableOver256KAddressingAndSetAddressWindowTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex) //49
};

uint16_t SetColorModeTest_ignorePorts[] =
{
    0x03C4,
    0x03C5,
    0x03CC,
    0x03D4,
    0x03D5
};

int SetColorModeTest_ignorePortsCount = sizeof(SetColorModeTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex SetColorModeTest_readIndexedPorts0[] =
{
    { 0x0000, 0x00 }
};

Hag::Testing::Mock::PortAndIndex SetColorModeTest_readIndexedPorts1[] =
{
    { 0x03C5, 0x15 },
    { 0x03D5, 0x67 }
};

Hag::Testing::Mock::PortAndIndex SetColorModeTest_readIndexedPorts2[] =
{
    { 0x03C5, 0x15 }
};

Hag::Testing::Mock::PortAndIndex* SetColorModeTest_readIndexedPorts[] =
{
    SetColorModeTest_readIndexedPorts1, //0
    SetColorModeTest_readIndexedPorts1, //1
    SetColorModeTest_readIndexedPorts1, //2
    SetColorModeTest_readIndexedPorts1, //3
    SetColorModeTest_readIndexedPorts1, //4
    SetColorModeTest_readIndexedPorts1, //5
    SetColorModeTest_readIndexedPorts1, //6
    SetColorModeTest_readIndexedPorts1, //7
    SetColorModeTest_readIndexedPorts1, //8
    SetColorModeTest_readIndexedPorts1, //9
    SetColorModeTest_readIndexedPorts1, //10
    SetColorModeTest_readIndexedPorts1, //11
    SetColorModeTest_readIndexedPorts1, //12
    SetColorModeTest_readIndexedPorts1, //13
    SetColorModeTest_readIndexedPorts1, //14
    SetColorModeTest_readIndexedPorts1, //15
    SetColorModeTest_readIndexedPorts1, //16
    SetColorModeTest_readIndexedPorts1, //17
    SetColorModeTest_readIndexedPorts1, //18
    SetColorModeTest_readIndexedPorts1, //19
    SetColorModeTest_readIndexedPorts1, //20
    SetColorModeTest_readIndexedPorts1, //21
    SetColorModeTest_readIndexedPorts1, //22
    SetColorModeTest_readIndexedPorts1, //23
    SetColorModeTest_readIndexedPorts1, //24
    SetColorModeTest_readIndexedPorts1, //25
    SetColorModeTest_readIndexedPorts0, //26
    SetColorModeTest_readIndexedPorts2, //27
    SetColorModeTest_readIndexedPorts1, //28
    SetColorModeTest_readIndexedPorts1, //29
    SetColorModeTest_readIndexedPorts1, //30
    SetColorModeTest_readIndexedPorts1, //31
    SetColorModeTest_readIndexedPorts1, //32
    SetColorModeTest_readIndexedPorts1, //33
    SetColorModeTest_readIndexedPorts1, //34
    SetColorModeTest_readIndexedPorts1, //35
    SetColorModeTest_readIndexedPorts1, //36
    SetColorModeTest_readIndexedPorts0, //37
    SetColorModeTest_readIndexedPorts2, //38
    SetColorModeTest_readIndexedPorts2, //39
    SetColorModeTest_readIndexedPorts2, //40
    SetColorModeTest_readIndexedPorts2, //41
    SetColorModeTest_readIndexedPorts2, //42
    SetColorModeTest_readIndexedPorts2, //43
    SetColorModeTest_readIndexedPorts2, //44
    SetColorModeTest_readIndexedPorts2, //45
    SetColorModeTest_readIndexedPorts2, //46
    SetColorModeTest_readIndexedPorts2, //47
    SetColorModeTest_readIndexedPorts2, //48
    SetColorModeTest_readIndexedPorts0 //49
};

int SetColorModeTest_readIndexedPortsCount[] =
{
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //0
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //1
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //2
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //3
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //4
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //5
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //6
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //7
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //8
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //9
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //10
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //11
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //12
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //13
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //14
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //15
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //16
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //17
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //18
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //19
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //20
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //21
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //22
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //23
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //24
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //25
    sizeof(SetColorModeTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //26
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //27
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //28
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //29
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //30
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //31
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //32
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //33
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //34
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //35
    sizeof(SetColorModeTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex), //36
    sizeof(SetColorModeTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex), //37
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //38
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //39
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //40
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //41
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //42
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //43
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //44
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //45
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //46
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //47
    sizeof(SetColorModeTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex), //48
    sizeof(SetColorModeTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex) //49
};


Hag::Testing::Mock::PortAndIndexAndValue SetColorModeTest_modifiedIndexedPorts0[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x18, 0x40 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetColorModeTest_modifiedIndexedPorts1[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x15, 0x10 },
    { 0x03C5, 0x18, 0xC0 },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetColorModeTest_modifiedIndexedPorts2[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetColorModeTest_modifiedIndexedPorts3[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x67, 0x30 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetColorModeTest_modifiedIndexedPorts4[] =
{
    { 0x03C5, 0x08, 0x06 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue* SetColorModeTest_modifiedIndexedPorts[] =
{
    SetColorModeTest_modifiedIndexedPorts0, //0
    SetColorModeTest_modifiedIndexedPorts0, //1
    SetColorModeTest_modifiedIndexedPorts0, //2
    SetColorModeTest_modifiedIndexedPorts0, //3
    SetColorModeTest_modifiedIndexedPorts0, //4
    SetColorModeTest_modifiedIndexedPorts0, //5
    SetColorModeTest_modifiedIndexedPorts0, //6
    SetColorModeTest_modifiedIndexedPorts0, //7
    SetColorModeTest_modifiedIndexedPorts0, //8
    SetColorModeTest_modifiedIndexedPorts0, //9
    SetColorModeTest_modifiedIndexedPorts0, //10
    SetColorModeTest_modifiedIndexedPorts0, //11
    SetColorModeTest_modifiedIndexedPorts0, //12
    SetColorModeTest_modifiedIndexedPorts0, //13
    SetColorModeTest_modifiedIndexedPorts0, //14
    SetColorModeTest_modifiedIndexedPorts0, //15
    SetColorModeTest_modifiedIndexedPorts0, //16
    SetColorModeTest_modifiedIndexedPorts0, //17
    SetColorModeTest_modifiedIndexedPorts0, //18
    SetColorModeTest_modifiedIndexedPorts0, //19
    SetColorModeTest_modifiedIndexedPorts0, //20
    SetColorModeTest_modifiedIndexedPorts0, //21
    SetColorModeTest_modifiedIndexedPorts0, //22
    SetColorModeTest_modifiedIndexedPorts0, //23
    SetColorModeTest_modifiedIndexedPorts0, //24
    SetColorModeTest_modifiedIndexedPorts0, //25
    SetColorModeTest_modifiedIndexedPorts1, //26
    SetColorModeTest_modifiedIndexedPorts2, //27
    SetColorModeTest_modifiedIndexedPorts0, //28
    SetColorModeTest_modifiedIndexedPorts0, //29
    SetColorModeTest_modifiedIndexedPorts0, //30
    SetColorModeTest_modifiedIndexedPorts0, //31
    SetColorModeTest_modifiedIndexedPorts0, //32
    SetColorModeTest_modifiedIndexedPorts0, //33
    SetColorModeTest_modifiedIndexedPorts0, //34
    SetColorModeTest_modifiedIndexedPorts0, //35
    SetColorModeTest_modifiedIndexedPorts0, //36
    SetColorModeTest_modifiedIndexedPorts1, //37
    SetColorModeTest_modifiedIndexedPorts3, //38
    SetColorModeTest_modifiedIndexedPorts4, //39
    SetColorModeTest_modifiedIndexedPorts2, //40
    SetColorModeTest_modifiedIndexedPorts3, //41
    SetColorModeTest_modifiedIndexedPorts4, //42
    SetColorModeTest_modifiedIndexedPorts2, //43
    SetColorModeTest_modifiedIndexedPorts3, //44
    SetColorModeTest_modifiedIndexedPorts4, //45
    SetColorModeTest_modifiedIndexedPorts2, //46
    SetColorModeTest_modifiedIndexedPorts3, //47
    SetColorModeTest_modifiedIndexedPorts4, //48
    SetColorModeTest_modifiedIndexedPorts1 //49
};

int SetColorModeTest_modifiedIndexedPortsCount[] =
{
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //0
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //1
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //2
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //3
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //4
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //5
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //6
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //7
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //8
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //9
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //10
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //11
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //12
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //13
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //14
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //15
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //16
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //17
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //18
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //19
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //20
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //21
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //22
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //23
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //24
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //25
    sizeof(SetColorModeTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //26
    sizeof(SetColorModeTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //27
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //28
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //29
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //30
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //31
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //32
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //33
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //34
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //35
    sizeof(SetColorModeTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //36
    sizeof(SetColorModeTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //37
    sizeof(SetColorModeTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //38
    sizeof(SetColorModeTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //39
    sizeof(SetColorModeTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //40
    sizeof(SetColorModeTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //41
    sizeof(SetColorModeTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //42
    sizeof(SetColorModeTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //43
    sizeof(SetColorModeTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //44
    sizeof(SetColorModeTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //45
    sizeof(SetColorModeTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //46
    sizeof(SetColorModeTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //47
    sizeof(SetColorModeTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue), //48
    sizeof(SetColorModeTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue) //49
};

uint16_t ClearMemoryTest_ignorePorts[] =
{
    0x03C4,
    0x03C5,
    0x03CC,
    0x03D4,
    0x03D5
};

int ClearMemoryTest_ignorePortsCount = sizeof (ClearMemoryTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndValue ClearMemoryTest_modifiedPorts[] =
{
    { 0x4AE8, 0x07 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E8, 0xFF },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xA6E8, 0x00 },
    { 0xA6E9, 0x00 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE8, 0xFF },
    { 0xBEE9, 0x0F }
};

int ClearMemoryTest_modifiedPortsCount = sizeof (ClearMemoryTest_modifiedPorts) / sizeof(Hag::Testing::Mock::PortAndValue);

Hag::Testing::Mock::PortAndIndex ClearMemoryTest_readIndexedPorts[] =
{
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x40 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x58 }
};

int ClearMemoryTest_readIndexedPortsCount = sizeof (ClearMemoryTest_readIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndex);

Hag::Testing::Mock::PortAndIndexAndValue ClearMemoryTest_modifiedIndexedPorts[] =
{
    { 0x03D5, 0x50, 0x10 }
};

int ClearMemoryTest_modifiedIndexedPortsCount = sizeof(ClearMemoryTest_modifiedIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue);



uint16_t ApplyVESAOverrideDataTest_ignorePorts[] =
{ 
    Hag::VGA::Register::CRTControllerIndexB,
    Hag::VGA::Register::CRTControllerDataB,
    Hag::VGA::Register::InputStatus1B,
    Hag::VGA::Register::AttributeControllerIndex,
    Hag::VGA::Register::SequencerIndex,
    Hag::VGA::Register::SequencerData,
    Hag::VGA::Register::MiscellaneousR,
    Hag::VGA::Register::CRTControllerIndexD,
    Hag::VGA::Register::CRTControllerDataD,
    Hag::VGA::Register::InputStatus1D,
    Hag::VGA::Register::GraphicsControllerIndex,
    Hag::VGA::Register::GraphicsControllerData,
};

uint16_t ApplyVESAOverrideDataTest_ignorePortsCount = sizeof(ApplyVideoParametersTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_ignoreIndexedPorts[] =
{
    { 0x03D5, 0x0E },
    { 0x03D5, 0x0F },
    { 0x03D5, 0x2D },
    { 0x03D5, 0x2E }
};

uint16_t ApplyVESAOverrideDataTest_ignoreIndexedPortsCount = sizeof(ApplyVESAOverrideDataTest_ignoreIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndex);

uint16_t ApplyVESAOverrideDataTest_readPorts0[] = 
{
    0
};

uint16_t ApplyVESAOverrideDataTest_readPorts1[] = 
{
    0x96E8,
    0xA6E8,
    0xA6E9,
    0xBEE8
};

uint16_t ApplyVESAOverrideDataTest_readPorts2[] = 
{
    0x4AE8,
    0x96E8,
    0xA6E8,
    0xA6E9,
    0xBEE8
};

uint16_t* ApplyVESAOverrideDataTest_readPorts[] =
{
    ApplyVESAOverrideDataTest_readPorts0,    //0
    ApplyVESAOverrideDataTest_readPorts0,    //1
    ApplyVESAOverrideDataTest_readPorts0,    //2
    ApplyVESAOverrideDataTest_readPorts0,    //3
    ApplyVESAOverrideDataTest_readPorts0,    //4
    ApplyVESAOverrideDataTest_readPorts0,    //5
    ApplyVESAOverrideDataTest_readPorts0,    //6
    ApplyVESAOverrideDataTest_readPorts0,    //7
    ApplyVESAOverrideDataTest_readPorts0,    //8
    ApplyVESAOverrideDataTest_readPorts0,    //9
    ApplyVESAOverrideDataTest_readPorts0,    //10
    ApplyVESAOverrideDataTest_readPorts0,    //11
    ApplyVESAOverrideDataTest_readPorts0,    //12
    ApplyVESAOverrideDataTest_readPorts0,    //13
    ApplyVESAOverrideDataTest_readPorts0,    //14
    ApplyVESAOverrideDataTest_readPorts0,    //15
    ApplyVESAOverrideDataTest_readPorts0,    //16
    ApplyVESAOverrideDataTest_readPorts0,    //17
    ApplyVESAOverrideDataTest_readPorts0,    //18
    ApplyVESAOverrideDataTest_readPorts0,    //19
    ApplyVESAOverrideDataTest_readPorts1,    //20
    ApplyVESAOverrideDataTest_readPorts1,    //21
    ApplyVESAOverrideDataTest_readPorts1,    //22
    ApplyVESAOverrideDataTest_readPorts2,    //23
    ApplyVESAOverrideDataTest_readPorts2,    //24
    ApplyVESAOverrideDataTest_readPorts2,    //25
    ApplyVESAOverrideDataTest_readPorts1,    //26
    ApplyVESAOverrideDataTest_readPorts1,    //27
    ApplyVESAOverrideDataTest_readPorts1,    //28
    ApplyVESAOverrideDataTest_readPorts1,    //29
    ApplyVESAOverrideDataTest_readPorts1,    //30
    ApplyVESAOverrideDataTest_readPorts1,    //31
    ApplyVESAOverrideDataTest_readPorts1,    //32
    ApplyVESAOverrideDataTest_readPorts1,    //33
    ApplyVESAOverrideDataTest_readPorts2,    //34
    ApplyVESAOverrideDataTest_readPorts2,    //35
    ApplyVESAOverrideDataTest_readPorts1,    //36
    ApplyVESAOverrideDataTest_readPorts1,    //37
    ApplyVESAOverrideDataTest_readPorts1,    //38
    ApplyVESAOverrideDataTest_readPorts1,    //39
    ApplyVESAOverrideDataTest_readPorts1,    //40
    ApplyVESAOverrideDataTest_readPorts1,    //41
    ApplyVESAOverrideDataTest_readPorts1,    //42
    ApplyVESAOverrideDataTest_readPorts1,    //43
    ApplyVESAOverrideDataTest_readPorts2,    //44
    ApplyVESAOverrideDataTest_readPorts2,    //45
    ApplyVESAOverrideDataTest_readPorts2,    //46
    ApplyVESAOverrideDataTest_readPorts1,    //47
    ApplyVESAOverrideDataTest_readPorts1,    //48
    ApplyVESAOverrideDataTest_readPorts2     //49
};

int ApplyVESAOverrideDataTest_readPortsCount[] =
{
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //0
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //1
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //2
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //3
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //4
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //5
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //6
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //7
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //8
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //9
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //10
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //11
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //12
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //13
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //14
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //15
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //16
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //17
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //18
    sizeof(ApplyVESAOverrideDataTest_readPorts0) / sizeof(uint16_t),  //19
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //20
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //21
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //22
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //23
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //24
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //25
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //26
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //27
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //28
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //29
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //30
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //31
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //32
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //33
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //34
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //35
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //36
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //37
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //38
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //39
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //40
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //41
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //42
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //43
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //44
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //45
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //46
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //47
    sizeof(ApplyVESAOverrideDataTest_readPorts1) / sizeof(uint16_t),  //48
    sizeof(ApplyVESAOverrideDataTest_readPorts2) / sizeof(uint16_t),  //49
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts0[] =
{
    { 0x0000, 0x00 }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts1[] =
{
    { 0x4AE8, 0x02 }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts2[] =
{
    { 0x4AE8, 0x03 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts3[] =
{
    { 0x4AE8, 0x07 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts4[] =
{
    { 0x03C2, 0x27 },
    { 0x4AE8, 0x07 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts5[] =
{
    { 0x82E8, 0x00 },
    { 0x4AE8, 0x07 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts6[] =
{
    { 0x03C2, 0x27 },
    { 0x4AE8, 0x07 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts7[] =
{
    { 0x4AE8, 0x02 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts8[] =
{
    { 0x4AE8, 0x02 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts9[] =
{
    { 0x4AE8, 0x06 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts10[] =
{
    { 0x03C2, 0x27 },
    { 0x4AE8, 0x03 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts11[] =
{
    { 0x4AE8, 0x03 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts12[] =
{
    { 0x03C2, 0x27 },
    { 0x4AE8, 0x06 },
    { 0x82E8, 0x00 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue ApplyVESAOverrideDataTest_modifiedPorts13[] =
{
    { 0x82E8, 0x00 },
    { 0x4AE8, 0x03 },
    { 0x82E9, 0x00 },
    { 0x86E8, 0x00 },
    { 0x86E9, 0x00 },
    { 0x96E9, 0x0F },
    { 0x9AE8, 0xB3 },
    { 0x9AE9, 0x40 },
    { 0xAAE8, 0xFF },
    { 0xAAE9, 0xFF },
    { 0xBAE8, 0x27 },
    { 0xBAE9, 0x00 },
    { 0xBEE9, 0x0F }
};

Hag::Testing::Mock::PortAndValue* ApplyVESAOverrideDataTest_modifiedPorts[] =
{
    ApplyVESAOverrideDataTest_modifiedPorts0,    //0
    ApplyVESAOverrideDataTest_modifiedPorts1,    //1
    ApplyVESAOverrideDataTest_modifiedPorts1,    //2
    ApplyVESAOverrideDataTest_modifiedPorts1,    //3
    ApplyVESAOverrideDataTest_modifiedPorts1,    //4
    ApplyVESAOverrideDataTest_modifiedPorts1,    //5
    ApplyVESAOverrideDataTest_modifiedPorts1,    //6
    ApplyVESAOverrideDataTest_modifiedPorts1,    //7
    ApplyVESAOverrideDataTest_modifiedPorts1,    //8
    ApplyVESAOverrideDataTest_modifiedPorts1,    //9
    ApplyVESAOverrideDataTest_modifiedPorts1,    //10
    ApplyVESAOverrideDataTest_modifiedPorts1,    //11
    ApplyVESAOverrideDataTest_modifiedPorts1,    //12
    ApplyVESAOverrideDataTest_modifiedPorts1,    //13
    ApplyVESAOverrideDataTest_modifiedPorts1,    //14
    ApplyVESAOverrideDataTest_modifiedPorts1,    //15
    ApplyVESAOverrideDataTest_modifiedPorts1,    //16
    ApplyVESAOverrideDataTest_modifiedPorts1,    //17
    ApplyVESAOverrideDataTest_modifiedPorts1,    //18
    ApplyVESAOverrideDataTest_modifiedPorts1,    //19
    ApplyVESAOverrideDataTest_modifiedPorts2,    //20
    ApplyVESAOverrideDataTest_modifiedPorts3,    //21
    ApplyVESAOverrideDataTest_modifiedPorts3,    //22
    ApplyVESAOverrideDataTest_modifiedPorts4,    //23
    ApplyVESAOverrideDataTest_modifiedPorts4,    //24
    ApplyVESAOverrideDataTest_modifiedPorts5,    //25
    ApplyVESAOverrideDataTest_modifiedPorts6,    //26
    ApplyVESAOverrideDataTest_modifiedPorts2,    //27
    ApplyVESAOverrideDataTest_modifiedPorts7,    //28
    ApplyVESAOverrideDataTest_modifiedPorts8,    //29
    ApplyVESAOverrideDataTest_modifiedPorts2,    //30
    ApplyVESAOverrideDataTest_modifiedPorts2,    //31
    ApplyVESAOverrideDataTest_modifiedPorts9,    //32
    ApplyVESAOverrideDataTest_modifiedPorts11,    //33
    ApplyVESAOverrideDataTest_modifiedPorts12,    //34
    ApplyVESAOverrideDataTest_modifiedPorts4,    //35
    ApplyVESAOverrideDataTest_modifiedPorts9,    //36
    ApplyVESAOverrideDataTest_modifiedPorts10,    //37
    ApplyVESAOverrideDataTest_modifiedPorts2,    //38
    ApplyVESAOverrideDataTest_modifiedPorts2,    //39
    ApplyVESAOverrideDataTest_modifiedPorts2,    //40
    ApplyVESAOverrideDataTest_modifiedPorts10,   //41
    ApplyVESAOverrideDataTest_modifiedPorts10,   //42
    ApplyVESAOverrideDataTest_modifiedPorts10,   //43
    ApplyVESAOverrideDataTest_modifiedPorts10,    //44
    ApplyVESAOverrideDataTest_modifiedPorts10,    //45
    ApplyVESAOverrideDataTest_modifiedPorts13,    //46
    ApplyVESAOverrideDataTest_modifiedPorts2,    //47
    ApplyVESAOverrideDataTest_modifiedPorts2,    //48
    ApplyVESAOverrideDataTest_modifiedPorts13     //49
};

int ApplyVESAOverrideDataTest_modifiedPortsCount[] =
{
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts0) / sizeof(Hag::Testing::Mock::PortAndValue), //0
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //1
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //2
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //3
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //4
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //5
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //6
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //7
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //8
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //9
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //10
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //11
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //12
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //13
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //14
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //15
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //16
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //17
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //18
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts1) / sizeof(Hag::Testing::Mock::PortAndValue), //19
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //20
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts3) / sizeof(Hag::Testing::Mock::PortAndValue), //21
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts3) / sizeof(Hag::Testing::Mock::PortAndValue), //22
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts4) / sizeof(Hag::Testing::Mock::PortAndValue), //23
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts4) / sizeof(Hag::Testing::Mock::PortAndValue), //24
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts5) / sizeof(Hag::Testing::Mock::PortAndValue), //25
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts6) / sizeof(Hag::Testing::Mock::PortAndValue), //26
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //27
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts7) / sizeof(Hag::Testing::Mock::PortAndValue), //28
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts8) / sizeof(Hag::Testing::Mock::PortAndValue), //29
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //30
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //31
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts9) / sizeof(Hag::Testing::Mock::PortAndValue), //32
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts11) / sizeof(Hag::Testing::Mock::PortAndValue), //33
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts12) / sizeof(Hag::Testing::Mock::PortAndValue), //34
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts4) / sizeof(Hag::Testing::Mock::PortAndValue), //35
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts9) / sizeof(Hag::Testing::Mock::PortAndValue), //36
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //37
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //38
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //39
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //40
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue),//41
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue),//42
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue),//43
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //44
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts10) / sizeof(Hag::Testing::Mock::PortAndValue), //45
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts13) / sizeof(Hag::Testing::Mock::PortAndValue), //46
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //47
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts2) / sizeof(Hag::Testing::Mock::PortAndValue), //48
    sizeof(ApplyVESAOverrideDataTest_modifiedPorts13) / sizeof(Hag::Testing::Mock::PortAndValue)  //49
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts0[] =
{
    { 0, 0 }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts1[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03C5, 0x15 },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x34 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x42 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts2[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts3[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts4[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts5[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts6[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts7[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x13 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts8[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts9[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x31 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x3A },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x50 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x67 },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts10[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts11[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5D },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts12[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts13[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts14[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts15[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex ApplyVESAOverrideDataTest_readIndexedPorts16[] =
{
    { 0x03C5, 0x09 },
    { 0x03C5, 0x0B },
    { 0x03C5, 0x14 },
    { 0x03D5, 0x00 },
    { 0x03D5, 0x01 },
    { 0x03D5, 0x02 },
    { 0x03D5, 0x03 },
    { 0x03D5, 0x04 },
    { 0x03D5, 0x05 },
    { 0x03D5, 0x06 },
    { 0x03D5, 0x07 },
    { 0x03D5, 0x08 },
    { 0x03D5, 0x09 },
    { 0x03D5, 0x0A },
    { 0x03D5, 0x0B },
    { 0x03D5, 0x0C },
    { 0x03D5, 0x0D },
    { 0x03D5, 0x10 },
    { 0x03D5, 0x11 },
    { 0x03D5, 0x12 },
    { 0x03D5, 0x14 },
    { 0x03D5, 0x15 },
    { 0x03D5, 0x16 },
    { 0x03D5, 0x17 },
    { 0x03D5, 0x18 },
    { 0x03D5, 0x2F },
    { 0x03D5, 0x30 },
    { 0x03D5, 0x32 },
    { 0x03D5, 0x33 },
    { 0x03D5, 0x35 },
    { 0x03D5, 0x36 },
    { 0x03D5, 0x38 },
    { 0x03D5, 0x39 },
    { 0x03D5, 0x41 },
    { 0x03D5, 0x43 },
    { 0x03D5, 0x51 },
    { 0x03D5, 0x52 },
    { 0x03D5, 0x53 },
    { 0x03D5, 0x54 },
    { 0x03D5, 0x55 },
    { 0x03D5, 0x58 },
    { 0x03D5, 0x59 },
    { 0x03D5, 0x5A },
    { 0x03D5, 0x5E },
    { 0x03D5, 0x69 },
    { 0x03D5, 0x6A },
    { 0x03D5, 0x6B },
    { 0x03D5, 0x6C }
};

Hag::Testing::Mock::PortAndIndex* ApplyVESAOverrideDataTest_readIndexedPorts[] =
{
    ApplyVESAOverrideDataTest_readIndexedPorts0, //0
    ApplyVESAOverrideDataTest_readIndexedPorts1, //1
    ApplyVESAOverrideDataTest_readIndexedPorts1, //2
    ApplyVESAOverrideDataTest_readIndexedPorts1, //3
    ApplyVESAOverrideDataTest_readIndexedPorts1, //4
    ApplyVESAOverrideDataTest_readIndexedPorts1, //5
    ApplyVESAOverrideDataTest_readIndexedPorts1, //6
    ApplyVESAOverrideDataTest_readIndexedPorts1, //7
    ApplyVESAOverrideDataTest_readIndexedPorts1, //8
    ApplyVESAOverrideDataTest_readIndexedPorts1, //9
    ApplyVESAOverrideDataTest_readIndexedPorts1, //10
    ApplyVESAOverrideDataTest_readIndexedPorts1, //11
    ApplyVESAOverrideDataTest_readIndexedPorts1, //12
    ApplyVESAOverrideDataTest_readIndexedPorts1, //13
    ApplyVESAOverrideDataTest_readIndexedPorts1, //14
    ApplyVESAOverrideDataTest_readIndexedPorts1, //15
    ApplyVESAOverrideDataTest_readIndexedPorts1, //16
    ApplyVESAOverrideDataTest_readIndexedPorts1, //17
    ApplyVESAOverrideDataTest_readIndexedPorts1, //18
    ApplyVESAOverrideDataTest_readIndexedPorts1, //19
    ApplyVESAOverrideDataTest_readIndexedPorts2, //20
    ApplyVESAOverrideDataTest_readIndexedPorts3, //21
    ApplyVESAOverrideDataTest_readIndexedPorts2, //22
    ApplyVESAOverrideDataTest_readIndexedPorts3, //23
    ApplyVESAOverrideDataTest_readIndexedPorts2, //24
    ApplyVESAOverrideDataTest_readIndexedPorts4, //25
    ApplyVESAOverrideDataTest_readIndexedPorts5, //26
    ApplyVESAOverrideDataTest_readIndexedPorts6, //27
    ApplyVESAOverrideDataTest_readIndexedPorts7, //28
    ApplyVESAOverrideDataTest_readIndexedPorts7, //29
    ApplyVESAOverrideDataTest_readIndexedPorts4, //30
    ApplyVESAOverrideDataTest_readIndexedPorts8, //31
    ApplyVESAOverrideDataTest_readIndexedPorts9, //32
    ApplyVESAOverrideDataTest_readIndexedPorts8, //33
    ApplyVESAOverrideDataTest_readIndexedPorts9, //34
    ApplyVESAOverrideDataTest_readIndexedPorts2, //35
    ApplyVESAOverrideDataTest_readIndexedPorts9, //36
    ApplyVESAOverrideDataTest_readIndexedPorts10, //37
    ApplyVESAOverrideDataTest_readIndexedPorts11, //38
    ApplyVESAOverrideDataTest_readIndexedPorts11, //39
    ApplyVESAOverrideDataTest_readIndexedPorts6, //40
    ApplyVESAOverrideDataTest_readIndexedPorts12, //41
    ApplyVESAOverrideDataTest_readIndexedPorts12, //42
    ApplyVESAOverrideDataTest_readIndexedPorts13, //43
    ApplyVESAOverrideDataTest_readIndexedPorts14, //44
    ApplyVESAOverrideDataTest_readIndexedPorts14, //45
    ApplyVESAOverrideDataTest_readIndexedPorts6, //46
    ApplyVESAOverrideDataTest_readIndexedPorts15, //47
    ApplyVESAOverrideDataTest_readIndexedPorts15, //48
    ApplyVESAOverrideDataTest_readIndexedPorts16 //49
};

int ApplyVESAOverrideDataTest_readIndexedPortsCount[] =
{
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex),  //0
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //1
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //2
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //3
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //4
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //5
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //6
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //7
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //8
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //9
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //10
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //11
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //12
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //13
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //14
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //15
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //16
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //17
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //18
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),  //19
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex),  //20
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndex),  //21
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex),  //22
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndex),  //23
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex),  //24
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndex),  //25
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndex),  //26
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex),  //27
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex),  //28
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndex),  //29
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndex),  //30
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndex),  //31
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndex),  //32
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndex),  //33
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndex),  //34
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex),  //35
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndex),  //36
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndex),  //37
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndex),  //38
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndex),  //39
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex),  //40
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex),  //41
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndex),  //42
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts13) / sizeof(Hag::Testing::Mock::PortAndIndex),  //43
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts14) / sizeof(Hag::Testing::Mock::PortAndIndex),  //44
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts14) / sizeof(Hag::Testing::Mock::PortAndIndex),  //45
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndex),  //46
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndex),  //47
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndex),  //48
    sizeof(ApplyVESAOverrideDataTest_readIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndex)  //49
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts0[] =
{
    {0, 0, 0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts1[] =
{
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x32, 0x40 },
    { 0x03D5, 0x3B, 0x5A },
    { 0x03D5, 0x3C, 0x10 },
    { 0x03D5, 0x40, 0xD0 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0x38 },
    { 0x03D5, 0x60, 0x07 },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts2[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0x88 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts3[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x48 },
    { 0x03C5, 0x13, 0x63 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x04, 0x69 },
    { 0x03D5, 0x05, 0x12 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x74 },
    { 0x03D5, 0x3C, 0x3D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts4[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x48 },
    { 0x03C5, 0x13, 0x63 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x74 },
    { 0x03D5, 0x3C, 0x3D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts5[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x30 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x04, 0x83 },
    { 0x03D5, 0x05, 0x19 },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x93 },
    { 0x03D5, 0x3C, 0x4D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xC0 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts6[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x30 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x93 },
    { 0x03D5, 0x3C, 0x4D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts7[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x22 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0xAA },
    { 0x03D5, 0x3C, 0x58 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x01 },
    { 0x03D5, 0x54, 0x40 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts8[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x20 },
    { 0x03C5, 0x13, 0x13 },
    { 0x03C5, 0x15, 0x12 },
    { 0x03C5, 0x18, 0xC0 },
    { 0x03D5, 0x02, 0x9F },
    { 0x03D5, 0x04, 0xA6 },
    { 0x03D5, 0x05, 0x1B },
    { 0x03D5, 0x31, 0x0F },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0xB9 },
    { 0x03D5, 0x3C, 0x60 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x11 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts9[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x70 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x08 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts10[] =
{
    { 0x03C5, 0x04, 0x02 },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x93 },
    { 0x03D5, 0x3C, 0x4D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0x08 },
    { 0x03D5, 0x60, 0x38 },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts11[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x40 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts12[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x13, 0x50 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x40 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts13[] =
{
    { 0x03C5, 0x04, 0x06 },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x48 },
    { 0x03C5, 0x13, 0x63 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x04, 0x69 },
    { 0x03D5, 0x05, 0x12 },
    { 0x03D5, 0x13, 0x32 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x74 },
    { 0x03D5, 0x3C, 0x3D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts14[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x48 },
    { 0x03C5, 0x13, 0x63 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x13, 0x64 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x74 },
    { 0x03D5, 0x3C, 0x3D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x80 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts15[] =
{
    { 0x03C5, 0x04, 0x06 },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x30 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x04, 0x83 },
    { 0x03D5, 0x05, 0x19 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0x93 },
    { 0x03D5, 0x3C, 0x4D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts16[] =
{
    { 0x03C5, 0x04, 0x06 },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x20 },
    { 0x03C5, 0x13, 0x13 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x04, 0xA6 },
    { 0x03D5, 0x05, 0x1B },
    { 0x03D5, 0x13, 0x50 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3B, 0xB9 },
    { 0x03D5, 0x3C, 0x60 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x54, 0xF8 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts17[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x20 },
    { 0x03C5, 0x13, 0x13 },
    { 0x03C5, 0x15, 0x12 },
    { 0x03C5, 0x18, 0xC0 },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0xB9 },
    { 0x03D5, 0x3C, 0x60 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0xC0 },
    { 0x03D5, 0x54, 0x50 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x11 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts18[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0xC2 },
    { 0x03D5, 0x01, 0x9F },
    { 0x03D5, 0x02, 0xA0 },
    { 0x03D5, 0x03, 0x84 },
    { 0x03D5, 0x04, 0xA3 },
    { 0x03D5, 0x05, 0x1B },
    { 0x03D5, 0x06, 0x0C },
    { 0x03D5, 0x10, 0xE9 },
    { 0x03D5, 0x11, 0x8B },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0xBB },
    { 0x03D5, 0x3C, 0x61 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x50 },
    { 0x03D5, 0x54, 0x58 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x30 },
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts19[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0xC2 },
    { 0x03D5, 0x01, 0x9F },
    { 0x03D5, 0x02, 0xA0 },
    { 0x03D5, 0x03, 0x84 },
    { 0x03D5, 0x04, 0xA3 },
    { 0x03D5, 0x05, 0x1B },
    { 0x03D5, 0x06, 0x0C },
    { 0x03D5, 0x10, 0xE9 },
    { 0x03D5, 0x11, 0x8B },
    { 0x03D5, 0x13, 0xA0 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0xBB },
    { 0x03D5, 0x3C, 0x61 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x50 },
    { 0x03D5, 0x54, 0x58 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts20[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x61 },
    { 0x03C5, 0x13, 0x28 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x02, 0x51 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x58 },
    { 0x03D5, 0x3C, 0x2F },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x70 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x38 },
    { 0x03D5, 0x60, 0x1C },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts21[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0x03 },
    { 0x03D5, 0x01, 0xC7 },
    { 0x03D5, 0x02, 0xC8 },
    { 0x03D5, 0x03, 0x06 },
    { 0x03D5, 0x04, 0xD3 },
    { 0x03D5, 0x05, 0x13 },
    { 0x03D5, 0x06, 0x72 },
    { 0x03D5, 0x11, 0x8C },
    { 0x03D5, 0x13, 0xC8 },
    { 0x03D5, 0x17, 0xA3 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0xFC },
    { 0x03D5, 0x3C, 0x81 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x92 },
    { 0x03D5, 0x54, 0x48 },
    { 0x03D5, 0x5D, 0x01 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x30 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts22[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0x03 },
    { 0x03D5, 0x01, 0xC7 },
    { 0x03D5, 0x02, 0xC8 },
    { 0x03D5, 0x03, 0x06 },
    { 0x03D5, 0x04, 0xD3 },
    { 0x03D5, 0x05, 0x13 },
    { 0x03D5, 0x06, 0x72 },
    { 0x03D5, 0x11, 0x8C },
    { 0x03D5, 0x13, 0xC8 },
    { 0x03D5, 0x17, 0xA3 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0xFC },
    { 0x03D5, 0x3C, 0x81 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x92 },
    { 0x03D5, 0x54, 0x48 },
    { 0x03D5, 0x5D, 0x01 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts23[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0x7F },
    { 0x03D5, 0x02, 0x64 },
    { 0x03D5, 0x04, 0x69 },
    { 0x03D5, 0x05, 0x19 },
    { 0x03D5, 0x06, 0x72 },
    { 0x03D5, 0x11, 0x8C },
    { 0x03D5, 0x13, 0x90 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x78 },
    { 0x03D5, 0x3C, 0x3F },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x00 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0xB2 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x10 },
    { 0x03D5, 0x5D, 0x08 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts24[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x30 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0x38 },
    { 0x03D5, 0x01, 0xFF },
    { 0x03D5, 0x02, 0x00 },
    { 0x03D5, 0x03, 0x00 },
    { 0x03D5, 0x04, 0x03 },
    { 0x03D5, 0x05, 0x0F },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x17, 0xA3 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x31 },
    { 0x03D5, 0x3C, 0x9C },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x10 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x28 },
    { 0x03D5, 0x5D, 0x75 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x30 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts25[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x30 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0x38 },
    { 0x03D5, 0x01, 0xFF },
    { 0x03D5, 0x02, 0x00 },
    { 0x03D5, 0x03, 0x00 },
    { 0x03D5, 0x04, 0x03 },
    { 0x03D5, 0x05, 0x0F },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x17, 0xA3 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x31 },
    { 0x03D5, 0x3C, 0x9C },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x10 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x28 },
    { 0x03D5, 0x5D, 0x75 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts26[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x42 },
    { 0x03C5, 0x13, 0x30 },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x02, 0x80 },
    { 0x03D5, 0x13, 0x00 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x93 },
    { 0x03D5, 0x3C, 0x4D },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x30 },
    { 0x03D5, 0x51, 0x20 },
    { 0x03D5, 0x54, 0x38 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0xD0 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts27[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x22 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0xA1 },
    { 0x03D5, 0x01, 0x3F },
    { 0x03D5, 0x02, 0x40 },
    { 0x03D5, 0x03, 0x0D },
    { 0x03D5, 0x04, 0x49 },
    { 0x03D5, 0x05, 0x03 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x9A },
    { 0x03D5, 0x3C, 0xD0 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0xD0 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x10 },
    { 0x03D5, 0x5D, 0x7F },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x30 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts28[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x22 },
    { 0x03C5, 0x13, 0x2B },
    { 0x03C5, 0x15, 0x02 },
    { 0x03C5, 0x18, 0x40 },
    { 0x03D5, 0x00, 0xA1 },
    { 0x03D5, 0x01, 0x3F },
    { 0x03D5, 0x02, 0x40 },
    { 0x03D5, 0x03, 0x0D },
    { 0x03D5, 0x04, 0x49 },
    { 0x03D5, 0x05, 0x03 },
    { 0x03D5, 0x13, 0x40 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0x9A },
    { 0x03D5, 0x3C, 0xD0 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0xD0 },
    { 0x03D5, 0x51, 0x10 },
    { 0x03D5, 0x54, 0x10 },
    { 0x03D5, 0x5D, 0x7F },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x50 }
};

Hag::Testing::Mock::PortAndIndexAndValue ApplyVESAOverrideDataTest_modifiedIndexedPorts29[] =
{
    { 0x03C5, 0x04, 0x0E },
    { 0x03C5, 0x08, 0x00 },
    { 0x03C5, 0x12, 0x24 },
    { 0x03C5, 0x13, 0x6B },
    { 0x03C5, 0x15, 0x12 },
    { 0x03C5, 0x18, 0xC0 },
    { 0x03D5, 0x13, 0xC8 },
    { 0x03D5, 0x31, 0x09 },
    { 0x03D5, 0x34, 0x10 },
    { 0x03D5, 0x3A, 0x15 },
    { 0x03D5, 0x3B, 0xFA },
    { 0x03D5, 0x3C, 0x80 },
    { 0x03D5, 0x40, 0xD1 },
    { 0x03D5, 0x42, 0x20 },
    { 0x03D5, 0x45, 0x00 },
    { 0x03D5, 0x50, 0x81 },
    { 0x03D5, 0x5D, 0x01 },
    { 0x03D5, 0x60, 0xFF },
    { 0x03D5, 0x61, 0x80 },
    { 0x03D5, 0x62, 0xA1 },
    { 0x03D5, 0x67, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue* ApplyVESAOverrideDataTest_modifiedIndexedPorts[] =
{
    ApplyVESAOverrideDataTest_modifiedIndexedPorts0, //0
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //1
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //2
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //3
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //4
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //5
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //6
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //7
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //8
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //9
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //10
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //11
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //12
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //13
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //14
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //15
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //16
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //17
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //18
    ApplyVESAOverrideDataTest_modifiedIndexedPorts1, //19
    ApplyVESAOverrideDataTest_modifiedIndexedPorts2, //20
    ApplyVESAOverrideDataTest_modifiedIndexedPorts3, //21
    ApplyVESAOverrideDataTest_modifiedIndexedPorts4, //22
    ApplyVESAOverrideDataTest_modifiedIndexedPorts5, //23
    ApplyVESAOverrideDataTest_modifiedIndexedPorts6, //24
    ApplyVESAOverrideDataTest_modifiedIndexedPorts7, //25
    ApplyVESAOverrideDataTest_modifiedIndexedPorts8, //26
    ApplyVESAOverrideDataTest_modifiedIndexedPorts9, //27
    ApplyVESAOverrideDataTest_modifiedIndexedPorts10, //28
    ApplyVESAOverrideDataTest_modifiedIndexedPorts10, //29
    ApplyVESAOverrideDataTest_modifiedIndexedPorts11, //30
    ApplyVESAOverrideDataTest_modifiedIndexedPorts12, //31
    ApplyVESAOverrideDataTest_modifiedIndexedPorts13, //32
    ApplyVESAOverrideDataTest_modifiedIndexedPorts14, //33
    ApplyVESAOverrideDataTest_modifiedIndexedPorts15, //34
    ApplyVESAOverrideDataTest_modifiedIndexedPorts6, //35
    ApplyVESAOverrideDataTest_modifiedIndexedPorts16, //36
    ApplyVESAOverrideDataTest_modifiedIndexedPorts17, //37
    ApplyVESAOverrideDataTest_modifiedIndexedPorts18, //38
    ApplyVESAOverrideDataTest_modifiedIndexedPorts19, //39
    ApplyVESAOverrideDataTest_modifiedIndexedPorts20, //40
    ApplyVESAOverrideDataTest_modifiedIndexedPorts21, //41
    ApplyVESAOverrideDataTest_modifiedIndexedPorts22, //42
    ApplyVESAOverrideDataTest_modifiedIndexedPorts23, //43
    ApplyVESAOverrideDataTest_modifiedIndexedPorts24, //44
    ApplyVESAOverrideDataTest_modifiedIndexedPorts25, //45
    ApplyVESAOverrideDataTest_modifiedIndexedPorts26, //46
    ApplyVESAOverrideDataTest_modifiedIndexedPorts27, //47
    ApplyVESAOverrideDataTest_modifiedIndexedPorts28, //48
    ApplyVESAOverrideDataTest_modifiedIndexedPorts29  //49
};

int ApplyVESAOverrideDataTest_modifiedIndexedPortsCount[] =
{
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //0
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //1
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //2
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //3
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //4
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //5
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //6
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //7
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //8
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //9
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //10
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //11
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //12
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //13
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //14
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //15
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //16
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //17
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //18
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //19
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //20
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //21
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //22
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts5) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //23
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //24
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts7) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //25
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts8) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //26
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts9) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //27
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //28
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts10) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //29
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts11) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //30
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts12) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //31
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts13) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //32
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts14) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //33
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts15) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //34
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts6) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //35
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts16) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //36
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts17) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //37
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts18) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //38
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts19) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //39
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts20) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //40
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts21) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //41
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts22) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //42
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts23) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //43
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts24) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //44
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts25) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //45
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts26) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //46
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts27) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //47
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts28) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //48
    sizeof(ApplyVESAOverrideDataTest_modifiedIndexedPorts29) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue)   //49
};


uint16_t SetPaletteTest_ignorePorts[] =
{ 
    Hag::VGA::Register::CRTControllerIndexB,
    Hag::VGA::Register::CRTControllerDataB,
    Hag::VGA::Register::InputStatus1B,
    Hag::VGA::Register::AttributeControllerIndex,
    Hag::VGA::Register::SequencerIndex,
    Hag::VGA::Register::SequencerData,
    Hag::VGA::Register::MiscellaneousR,
    Hag::VGA::Register::CRTControllerIndexD,
    Hag::VGA::Register::CRTControllerDataD,
    Hag::VGA::Register::InputStatus1D,
    Hag::VGA::Register::GraphicsControllerIndex,
    Hag::VGA::Register::GraphicsControllerData,
    Hag::VGA::Register::DACReadIndex,
    Hag::VGA::Register::DACWriteIndex,
    Hag::VGA::Register::RAMDACData,
};

uint16_t SetPaletteTest_ignorePortsCount = sizeof(SetPaletteTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex SetPaletteTest_ignoreIndexedPorts[] =
{
    { 0x03D5, 0x0E },
    { 0x03D5, 0x0F }
};

uint16_t SetPaletteTest_ignoreIndexedPortsCount = sizeof(SetPaletteTest_ignoreIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndex);

uint16_t SetPaletteTest_readPorts0[] =
{
    0x4AE8
};

uint16_t SetPaletteTest_readPorts1[] =
{
    0x03C6
};

uint16_t* SetPaletteTest_readPorts[] =
{
    SetPaletteTest_readPorts0,    //0
    SetPaletteTest_readPorts1,    //1
    SetPaletteTest_readPorts1,    //2
    SetPaletteTest_readPorts1,    //3
    SetPaletteTest_readPorts1,    //4
    SetPaletteTest_readPorts1,    //5
    SetPaletteTest_readPorts1,    //6
    SetPaletteTest_readPorts1,    //7
    SetPaletteTest_readPorts1,    //8
    SetPaletteTest_readPorts1,    //9
    SetPaletteTest_readPorts1,    //10
    SetPaletteTest_readPorts1,    //11
    SetPaletteTest_readPorts1,    //12
    SetPaletteTest_readPorts1,    //13
    SetPaletteTest_readPorts1,    //14
    SetPaletteTest_readPorts1,    //15
    SetPaletteTest_readPorts1,    //16
    SetPaletteTest_readPorts1,    //17
    SetPaletteTest_readPorts1,    //18
    SetPaletteTest_readPorts1,    //19
    SetPaletteTest_readPorts1,    //20
    SetPaletteTest_readPorts1,    //21
    SetPaletteTest_readPorts1,    //22
    SetPaletteTest_readPorts1,    //23
    SetPaletteTest_readPorts1,    //24
    SetPaletteTest_readPorts1,    //25
    SetPaletteTest_readPorts1,    //26
    SetPaletteTest_readPorts1,    //27
    SetPaletteTest_readPorts1,    //28
    SetPaletteTest_readPorts1,    //29
    SetPaletteTest_readPorts1,    //30
    SetPaletteTest_readPorts1,    //31
    SetPaletteTest_readPorts1,    //32
    SetPaletteTest_readPorts1,    //33
    SetPaletteTest_readPorts1,    //34
    SetPaletteTest_readPorts1,    //35
    SetPaletteTest_readPorts1,    //36
    SetPaletteTest_readPorts1,    //37
    SetPaletteTest_readPorts1,    //38
    SetPaletteTest_readPorts1,    //39
    SetPaletteTest_readPorts1,    //40
    SetPaletteTest_readPorts1,    //41
    SetPaletteTest_readPorts1,    //42
    SetPaletteTest_readPorts1,    //43
    SetPaletteTest_readPorts1,    //44
    SetPaletteTest_readPorts1,    //45
    SetPaletteTest_readPorts1,    //46
    SetPaletteTest_readPorts1,    //47
    SetPaletteTest_readPorts1,    //48
    SetPaletteTest_readPorts1     //49
};

int SetPaletteTest_readPortsCount[] =
{
    sizeof(SetPaletteTest_readPorts0) / sizeof(uint16_t),  //0
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //1
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //2
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //3
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //4
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //5
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //6
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //7
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //8
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //9
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //10
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //11
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //12
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //13
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //14
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //15
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //16
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //17
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //18
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //19
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //20
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //21
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //22
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //23
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //24
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //25
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //26
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //27
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //28
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //29
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //30
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //31
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //32
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //33
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //34
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //35
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //36
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //37
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //38
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //39
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //40
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //41
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //42
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //43
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //44
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //45
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //46
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //47
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //48
    sizeof(SetPaletteTest_readPorts1) / sizeof(uint16_t),  //49
};

Hag::Testing::Mock::PortAndIndexAndValue SetPaletteTest_modifiedIndexedPorts0[] =
{
    { 0, 0, 0 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetPaletteTest_modifiedIndexedPorts1[] =
{
    { 0x03C7, 0x00, 0x00 },
    { 0x03C7, 0x01, 0x00 },
    { 0x03C7, 0x02, 0x00 },
    { 0x03C7, 0x03, 0x00 },
    { 0x03C7, 0x04, 0x00 },
    { 0x03C7, 0x05, 0x2A },
    { 0x03C7, 0x06, 0x00 },
    { 0x03C7, 0x07, 0x2A },
    { 0x03C7, 0x08, 0x00 },
    { 0x03C7, 0x09, 0x00 },
    { 0x03C7, 0x0A, 0x2A },
    { 0x03C7, 0x0B, 0x2A },
    { 0x03C7, 0x0C, 0x2A },
    { 0x03C7, 0x0D, 0x00 },
    { 0x03C7, 0x0E, 0x00 },
    { 0x03C7, 0x0F, 0x2A },
    { 0x03C7, 0x10, 0x00 },
    { 0x03C7, 0x11, 0x2A },
    { 0x03C7, 0x12, 0x2A },
    { 0x03C7, 0x13, 0x2A },
    { 0x03C7, 0x14, 0x00 },
    { 0x03C7, 0x15, 0x2A },
    { 0x03C7, 0x16, 0x2A },
    { 0x03C7, 0x17, 0x2A },
    { 0x03C7, 0x18, 0x00 },
    { 0x03C7, 0x19, 0x00 },
    { 0x03C7, 0x1A, 0x15 },
    { 0x03C7, 0x1B, 0x00 },
    { 0x03C7, 0x1C, 0x00 },
    { 0x03C7, 0x1D, 0x3F },
    { 0x03C7, 0x1E, 0x00 },
    { 0x03C7, 0x1F, 0x2A },
    { 0x03C7, 0x20, 0x15 },
    { 0x03C7, 0x21, 0x00 },
    { 0x03C7, 0x22, 0x2A },
    { 0x03C7, 0x23, 0x3F },
    { 0x03C7, 0x24, 0x2A },
    { 0x03C7, 0x25, 0x00 },
    { 0x03C7, 0x26, 0x15 },
    { 0x03C7, 0x27, 0x2A },
    { 0x03C7, 0x28, 0x00 },
    { 0x03C7, 0x29, 0x3F },
    { 0x03C7, 0x2A, 0x2A },
    { 0x03C7, 0x2B, 0x2A },
    { 0x03C7, 0x2C, 0x15 },
    { 0x03C7, 0x2D, 0x2A },
    { 0x03C7, 0x2E, 0x2A },
    { 0x03C7, 0x2F, 0x3F },
    { 0x03C7, 0x30, 0x00 },
    { 0x03C7, 0x31, 0x15 },
    { 0x03C7, 0x32, 0x00 },
    { 0x03C7, 0x33, 0x00 },
    { 0x03C7, 0x34, 0x15 },
    { 0x03C7, 0x35, 0x2A },
    { 0x03C7, 0x36, 0x00 },
    { 0x03C7, 0x37, 0x3F },
    { 0x03C7, 0x38, 0x00 },
    { 0x03C7, 0x39, 0x00 },
    { 0x03C7, 0x3A, 0x3F },
    { 0x03C7, 0x3B, 0x2A },
    { 0x03C7, 0x3C, 0x2A },
    { 0x03C7, 0x3D, 0x15 },
    { 0x03C7, 0x3E, 0x00 },
    { 0x03C7, 0x3F, 0x2A },
    { 0x03C7, 0x40, 0x15 },
    { 0x03C7, 0x41, 0x2A },
    { 0x03C7, 0x42, 0x2A },
    { 0x03C7, 0x43, 0x3F },
    { 0x03C7, 0x44, 0x00 },
    { 0x03C7, 0x45, 0x2A },
    { 0x03C7, 0x46, 0x3F },
    { 0x03C7, 0x47, 0x2A },
    { 0x03C7, 0x48, 0x00 },
    { 0x03C7, 0x49, 0x15 },
    { 0x03C7, 0x4A, 0x15 },
    { 0x03C7, 0x4B, 0x00 },
    { 0x03C7, 0x4C, 0x15 },
    { 0x03C7, 0x4D, 0x3F },
    { 0x03C7, 0x4E, 0x00 },
    { 0x03C7, 0x4F, 0x3F },
    { 0x03C7, 0x50, 0x15 },
    { 0x03C7, 0x51, 0x00 },
    { 0x03C7, 0x52, 0x3F },
    { 0x03C7, 0x53, 0x3F },
    { 0x03C7, 0x54, 0x2A },
    { 0x03C7, 0x55, 0x15 },
    { 0x03C7, 0x56, 0x15 },
    { 0x03C7, 0x57, 0x2A },
    { 0x03C7, 0x58, 0x15 },
    { 0x03C7, 0x59, 0x3F },
    { 0x03C7, 0x5A, 0x2A },
    { 0x03C7, 0x5B, 0x3F },
    { 0x03C7, 0x5C, 0x15 },
    { 0x03C7, 0x5D, 0x2A },
    { 0x03C7, 0x5E, 0x3F },
    { 0x03C7, 0x5F, 0x3F },
    { 0x03C7, 0x60, 0x15 },
    { 0x03C7, 0x61, 0x00 },
    { 0x03C7, 0x62, 0x00 },
    { 0x03C7, 0x63, 0x15 },
    { 0x03C7, 0x64, 0x00 },
    { 0x03C7, 0x65, 0x2A },
    { 0x03C7, 0x66, 0x15 },
    { 0x03C7, 0x67, 0x2A },
    { 0x03C7, 0x68, 0x00 },
    { 0x03C7, 0x69, 0x15 },
    { 0x03C7, 0x6A, 0x2A },
    { 0x03C7, 0x6B, 0x2A },
    { 0x03C7, 0x6C, 0x3F },
    { 0x03C7, 0x6D, 0x00 },
    { 0x03C7, 0x6E, 0x00 },
    { 0x03C7, 0x6F, 0x3F },
    { 0x03C7, 0x70, 0x00 },
    { 0x03C7, 0x71, 0x2A },
    { 0x03C7, 0x72, 0x3F },
    { 0x03C7, 0x73, 0x2A },
    { 0x03C7, 0x74, 0x00 },
    { 0x03C7, 0x75, 0x3F },
    { 0x03C7, 0x76, 0x2A },
    { 0x03C7, 0x77, 0x2A },
    { 0x03C7, 0x78, 0x15 },
    { 0x03C7, 0x79, 0x00 },
    { 0x03C7, 0x7A, 0x15 },
    { 0x03C7, 0x7B, 0x15 },
    { 0x03C7, 0x7C, 0x00 },
    { 0x03C7, 0x7D, 0x3F },
    { 0x03C7, 0x7E, 0x15 },
    { 0x03C7, 0x7F, 0x2A },
    { 0x03C7, 0x80, 0x15 },
    { 0x03C7, 0x81, 0x15 },
    { 0x03C7, 0x82, 0x2A },
    { 0x03C7, 0x83, 0x3F },
    { 0x03C7, 0x84, 0x3F },
    { 0x03C7, 0x85, 0x00 },
    { 0x03C7, 0x86, 0x15 },
    { 0x03C7, 0x87, 0x3F },
    { 0x03C7, 0x88, 0x00 },
    { 0x03C7, 0x89, 0x3F },
    { 0x03C7, 0x8A, 0x3F },
    { 0x03C7, 0x8B, 0x2A },
    { 0x03C7, 0x8C, 0x15 },
    { 0x03C7, 0x8D, 0x3F },
    { 0x03C7, 0x8E, 0x2A },
    { 0x03C7, 0x8F, 0x3F },
    { 0x03C7, 0x90, 0x15 },
    { 0x03C7, 0x91, 0x15 },
    { 0x03C7, 0x92, 0x00 },
    { 0x03C7, 0x93, 0x15 },
    { 0x03C7, 0x94, 0x15 },
    { 0x03C7, 0x95, 0x2A },
    { 0x03C7, 0x96, 0x15 },
    { 0x03C7, 0x97, 0x3F },
    { 0x03C7, 0x98, 0x00 },
    { 0x03C7, 0x99, 0x15 },
    { 0x03C7, 0x9A, 0x3F },
    { 0x03C7, 0x9B, 0x2A },
    { 0x03C7, 0x9C, 0x3F },
    { 0x03C7, 0x9D, 0x15 },
    { 0x03C7, 0x9E, 0x00 },
    { 0x03C7, 0x9F, 0x3F },
    { 0x03C7, 0xA0, 0x15 },
    { 0x03C7, 0xA1, 0x2A },
    { 0x03C7, 0xA2, 0x3F },
    { 0x03C7, 0xA3, 0x3F },
    { 0x03C7, 0xA4, 0x00 },
    { 0x03C7, 0xA5, 0x3F },
    { 0x03C7, 0xA6, 0x3F },
    { 0x03C7, 0xA7, 0x2A },
    { 0x03C7, 0xA8, 0x15 },
    { 0x03C7, 0xA9, 0x15 },
    { 0x03C7, 0xAA, 0x15 },
    { 0x03C7, 0xAB, 0x15 },
    { 0x03C7, 0xAC, 0x15 },
    { 0x03C7, 0xAD, 0x3F },
    { 0x03C7, 0xAE, 0x15 },
    { 0x03C7, 0xAF, 0x3F },
    { 0x03C7, 0xB0, 0x15 },
    { 0x03C7, 0xB1, 0x15 },
    { 0x03C7, 0xB2, 0x3F },
    { 0x03C7, 0xB3, 0x3F },
    { 0x03C7, 0xB4, 0x3F },
    { 0x03C7, 0xB5, 0x15 },
    { 0x03C7, 0xB6, 0x15 },
    { 0x03C7, 0xB7, 0x3F },
    { 0x03C7, 0xB8, 0x15 },
    { 0x03C7, 0xB9, 0x3F },
    { 0x03C7, 0xBA, 0x3F },
    { 0x03C7, 0xBB, 0x3F },
    { 0x03C7, 0xBC, 0x15 },
    { 0x03C7, 0xBD, 0x3F },
    { 0x03C7, 0xBE, 0x3F },
    { 0x03C7, 0xBF, 0x3F }
};

Hag::Testing::Mock::PortAndIndexAndValue SetPaletteTest_modifiedIndexedPorts2[] =
{
    { 0x03C7, 0x00, 0x00 },
    { 0x03C7, 0x01, 0x00 },
    { 0x03C7, 0x02, 0x00 },
    { 0x03C7, 0x03, 0x00 },
    { 0x03C7, 0x04, 0x00 },
    { 0x03C7, 0x05, 0x2A },
    { 0x03C7, 0x06, 0x00 },
    { 0x03C7, 0x07, 0x2A },
    { 0x03C7, 0x08, 0x00 },
    { 0x03C7, 0x09, 0x00 },
    { 0x03C7, 0x0A, 0x2A },
    { 0x03C7, 0x0B, 0x2A },
    { 0x03C7, 0x0C, 0x2A },
    { 0x03C7, 0x0D, 0x00 },
    { 0x03C7, 0x0E, 0x00 },
    { 0x03C7, 0x0F, 0x2A },
    { 0x03C7, 0x10, 0x00 },
    { 0x03C7, 0x11, 0x2A },
    { 0x03C7, 0x12, 0x2A },
    { 0x03C7, 0x13, 0x15 },
    { 0x03C7, 0x14, 0x00 },
    { 0x03C7, 0x15, 0x2A },
    { 0x03C7, 0x16, 0x2A },
    { 0x03C7, 0x17, 0x2A },
    { 0x03C7, 0x18, 0x00 },
    { 0x03C7, 0x19, 0x00 },
    { 0x03C7, 0x1A, 0x00 },
    { 0x03C7, 0x1B, 0x00 },
    { 0x03C7, 0x1C, 0x00 },
    { 0x03C7, 0x1D, 0x2A },
    { 0x03C7, 0x1E, 0x00 },
    { 0x03C7, 0x1F, 0x2A },
    { 0x03C7, 0x20, 0x00 },
    { 0x03C7, 0x21, 0x00 },
    { 0x03C7, 0x22, 0x2A },
    { 0x03C7, 0x23, 0x2A },
    { 0x03C7, 0x24, 0x2A },
    { 0x03C7, 0x25, 0x00 },
    { 0x03C7, 0x26, 0x00 },
    { 0x03C7, 0x27, 0x2A },
    { 0x03C7, 0x28, 0x00 },
    { 0x03C7, 0x29, 0x2A },
    { 0x03C7, 0x2A, 0x2A },
    { 0x03C7, 0x2B, 0x15 },
    { 0x03C7, 0x2C, 0x00 },
    { 0x03C7, 0x2D, 0x2A },
    { 0x03C7, 0x2E, 0x2A },
    { 0x03C7, 0x2F, 0x2A },
    { 0x03C7, 0x30, 0x15 },
    { 0x03C7, 0x31, 0x15 },
    { 0x03C7, 0x32, 0x15 },
    { 0x03C7, 0x33, 0x15 },
    { 0x03C7, 0x34, 0x15 },
    { 0x03C7, 0x35, 0x3F },
    { 0x03C7, 0x36, 0x15 },
    { 0x03C7, 0x37, 0x3F },
    { 0x03C7, 0x38, 0x15 },
    { 0x03C7, 0x39, 0x15 },
    { 0x03C7, 0x3A, 0x3F },
    { 0x03C7, 0x3B, 0x3F },
    { 0x03C7, 0x3C, 0x3F },
    { 0x03C7, 0x3D, 0x15 },
    { 0x03C7, 0x3E, 0x15 },
    { 0x03C7, 0x3F, 0x3F },
    { 0x03C7, 0x40, 0x15 },
    { 0x03C7, 0x41, 0x3F },
    { 0x03C7, 0x42, 0x3F },
    { 0x03C7, 0x43, 0x3F },
    { 0x03C7, 0x44, 0x15 },
    { 0x03C7, 0x45, 0x3F },
    { 0x03C7, 0x46, 0x3F },
    { 0x03C7, 0x47, 0x3F },
    { 0x03C7, 0x48, 0x15 },
    { 0x03C7, 0x49, 0x15 },
    { 0x03C7, 0x4A, 0x15 },
    { 0x03C7, 0x4B, 0x15 },
    { 0x03C7, 0x4C, 0x15 },
    { 0x03C7, 0x4D, 0x3F },
    { 0x03C7, 0x4E, 0x15 },
    { 0x03C7, 0x4F, 0x3F },
    { 0x03C7, 0x50, 0x15 },
    { 0x03C7, 0x51, 0x15 },
    { 0x03C7, 0x52, 0x3F },
    { 0x03C7, 0x53, 0x3F },
    { 0x03C7, 0x54, 0x3F },
    { 0x03C7, 0x55, 0x15 },
    { 0x03C7, 0x56, 0x15 },
    { 0x03C7, 0x57, 0x3F },
    { 0x03C7, 0x58, 0x15 },
    { 0x03C7, 0x59, 0x3F },
    { 0x03C7, 0x5A, 0x3F },
    { 0x03C7, 0x5B, 0x3F },
    { 0x03C7, 0x5C, 0x15 },
    { 0x03C7, 0x5D, 0x3F },
    { 0x03C7, 0x5E, 0x3F },
    { 0x03C7, 0x5F, 0x3F },
    { 0x03C7, 0x60, 0x00 },
    { 0x03C7, 0x61, 0x00 },
    { 0x03C7, 0x62, 0x00 },
    { 0x03C7, 0x63, 0x00 },
    { 0x03C7, 0x64, 0x00 },
    { 0x03C7, 0x65, 0x2A },
    { 0x03C7, 0x66, 0x00 },
    { 0x03C7, 0x67, 0x2A },
    { 0x03C7, 0x68, 0x00 },
    { 0x03C7, 0x69, 0x00 },
    { 0x03C7, 0x6A, 0x2A },
    { 0x03C7, 0x6B, 0x2A },
    { 0x03C7, 0x6C, 0x2A },
    { 0x03C7, 0x6D, 0x00 },
    { 0x03C7, 0x6E, 0x00 },
    { 0x03C7, 0x6F, 0x2A },
    { 0x03C7, 0x70, 0x00 },
    { 0x03C7, 0x71, 0x2A },
    { 0x03C7, 0x72, 0x2A },
    { 0x03C7, 0x73, 0x15 },
    { 0x03C7, 0x74, 0x00 },
    { 0x03C7, 0x75, 0x2A },
    { 0x03C7, 0x76, 0x2A },
    { 0x03C7, 0x77, 0x2A },
    { 0x03C7, 0x78, 0x00 },
    { 0x03C7, 0x79, 0x00 },
    { 0x03C7, 0x7A, 0x00 },
    { 0x03C7, 0x7B, 0x00 },
    { 0x03C7, 0x7C, 0x00 },
    { 0x03C7, 0x7D, 0x2A },
    { 0x03C7, 0x7E, 0x00 },
    { 0x03C7, 0x7F, 0x2A },
    { 0x03C7, 0x80, 0x00 },
    { 0x03C7, 0x81, 0x00 },
    { 0x03C7, 0x82, 0x2A },
    { 0x03C7, 0x83, 0x2A },
    { 0x03C7, 0x84, 0x2A },
    { 0x03C7, 0x85, 0x00 },
    { 0x03C7, 0x86, 0x00 },
    { 0x03C7, 0x87, 0x2A },
    { 0x03C7, 0x88, 0x00 },
    { 0x03C7, 0x89, 0x2A },
    { 0x03C7, 0x8A, 0x2A },
    { 0x03C7, 0x8B, 0x15 },
    { 0x03C7, 0x8C, 0x00 },
    { 0x03C7, 0x8D, 0x2A },
    { 0x03C7, 0x8E, 0x2A },
    { 0x03C7, 0x8F, 0x2A },
    { 0x03C7, 0x90, 0x15 },
    { 0x03C7, 0x91, 0x15 },
    { 0x03C7, 0x92, 0x15 },
    { 0x03C7, 0x93, 0x15 },
    { 0x03C7, 0x94, 0x15 },
    { 0x03C7, 0x95, 0x3F },
    { 0x03C7, 0x96, 0x15 },
    { 0x03C7, 0x97, 0x3F },
    { 0x03C7, 0x98, 0x15 },
    { 0x03C7, 0x99, 0x15 },
    { 0x03C7, 0x9A, 0x3F },
    { 0x03C7, 0x9B, 0x3F },
    { 0x03C7, 0x9C, 0x3F },
    { 0x03C7, 0x9D, 0x15 },
    { 0x03C7, 0x9E, 0x15 },
    { 0x03C7, 0x9F, 0x3F },
    { 0x03C7, 0xA0, 0x15 },
    { 0x03C7, 0xA1, 0x3F },
    { 0x03C7, 0xA2, 0x3F },
    { 0x03C7, 0xA3, 0x3F },
    { 0x03C7, 0xA4, 0x15 },
    { 0x03C7, 0xA5, 0x3F },
    { 0x03C7, 0xA6, 0x3F },
    { 0x03C7, 0xA7, 0x3F },
    { 0x03C7, 0xA8, 0x15 },
    { 0x03C7, 0xA9, 0x15 },
    { 0x03C7, 0xAA, 0x15 },
    { 0x03C7, 0xAB, 0x15 },
    { 0x03C7, 0xAC, 0x15 },
    { 0x03C7, 0xAD, 0x3F },
    { 0x03C7, 0xAE, 0x15 },
    { 0x03C7, 0xAF, 0x3F },
    { 0x03C7, 0xB0, 0x15 },
    { 0x03C7, 0xB1, 0x15 },
    { 0x03C7, 0xB2, 0x3F },
    { 0x03C7, 0xB3, 0x3F },
    { 0x03C7, 0xB4, 0x3F },
    { 0x03C7, 0xB5, 0x15 },
    { 0x03C7, 0xB6, 0x15 },
    { 0x03C7, 0xB7, 0x3F },
    { 0x03C7, 0xB8, 0x15 },
    { 0x03C7, 0xB9, 0x3F },
    { 0x03C7, 0xBA, 0x3F },
    { 0x03C7, 0xBB, 0x3F },
    { 0x03C7, 0xBC, 0x15 },
    { 0x03C7, 0xBD, 0x3F },
    { 0x03C7, 0xBE, 0x3F },
    { 0x03C7, 0xBF, 0x3F }
};

Hag::Testing::Mock::PortAndIndexAndValue SetPaletteTest_modifiedIndexedPorts3[] =
{
    { 0x03C7, 0x00, 0x00 },
    { 0x03C7, 0x01, 0x00 },
    { 0x03C7, 0x02, 0x00 },
    { 0x03C7, 0x03, 0x00 },
    { 0x03C7, 0x04, 0x00 },
    { 0x03C7, 0x05, 0x00 },
    { 0x03C7, 0x06, 0x00 },
    { 0x03C7, 0x07, 0x00 },
    { 0x03C7, 0x08, 0x00 },
    { 0x03C7, 0x09, 0x00 },
    { 0x03C7, 0x0A, 0x00 },
    { 0x03C7, 0x0B, 0x00 },
    { 0x03C7, 0x0C, 0x00 },
    { 0x03C7, 0x0D, 0x00 },
    { 0x03C7, 0x0E, 0x00 },
    { 0x03C7, 0x0F, 0x00 },
    { 0x03C7, 0x10, 0x00 },
    { 0x03C7, 0x11, 0x00 },
    { 0x03C7, 0x12, 0x00 },
    { 0x03C7, 0x13, 0x00 },
    { 0x03C7, 0x14, 0x00 },
    { 0x03C7, 0x15, 0x00 },
    { 0x03C7, 0x16, 0x00 },
    { 0x03C7, 0x17, 0x00 },
    { 0x03C7, 0x18, 0x2A },
    { 0x03C7, 0x19, 0x2A },
    { 0x03C7, 0x1A, 0x2A },
    { 0x03C7, 0x1B, 0x2A },
    { 0x03C7, 0x1C, 0x2A },
    { 0x03C7, 0x1D, 0x2A },
    { 0x03C7, 0x1E, 0x2A },
    { 0x03C7, 0x1F, 0x2A },
    { 0x03C7, 0x20, 0x2A },
    { 0x03C7, 0x21, 0x2A },
    { 0x03C7, 0x22, 0x2A },
    { 0x03C7, 0x23, 0x2A },
    { 0x03C7, 0x24, 0x2A },
    { 0x03C7, 0x25, 0x2A },
    { 0x03C7, 0x26, 0x2A },
    { 0x03C7, 0x27, 0x2A },
    { 0x03C7, 0x28, 0x2A },
    { 0x03C7, 0x29, 0x2A },
    { 0x03C7, 0x2A, 0x2A },
    { 0x03C7, 0x2B, 0x2A },
    { 0x03C7, 0x2C, 0x2A },
    { 0x03C7, 0x2D, 0x2A },
    { 0x03C7, 0x2E, 0x2A },
    { 0x03C7, 0x2F, 0x2A },
    { 0x03C7, 0x30, 0x2A },
    { 0x03C7, 0x31, 0x2A },
    { 0x03C7, 0x32, 0x2A },
    { 0x03C7, 0x33, 0x2A },
    { 0x03C7, 0x34, 0x2A },
    { 0x03C7, 0x35, 0x2A },
    { 0x03C7, 0x36, 0x2A },
    { 0x03C7, 0x37, 0x2A },
    { 0x03C7, 0x38, 0x2A },
    { 0x03C7, 0x39, 0x2A },
    { 0x03C7, 0x3A, 0x2A },
    { 0x03C7, 0x3B, 0x2A },
    { 0x03C7, 0x3C, 0x2A },
    { 0x03C7, 0x3D, 0x2A },
    { 0x03C7, 0x3E, 0x2A },
    { 0x03C7, 0x3F, 0x2A },
    { 0x03C7, 0x40, 0x2A },
    { 0x03C7, 0x41, 0x2A },
    { 0x03C7, 0x42, 0x2A },
    { 0x03C7, 0x43, 0x2A },
    { 0x03C7, 0x44, 0x2A },
    { 0x03C7, 0x45, 0x2A },
    { 0x03C7, 0x46, 0x2A },
    { 0x03C7, 0x47, 0x2A },
    { 0x03C7, 0x48, 0x3F },
    { 0x03C7, 0x49, 0x3F },
    { 0x03C7, 0x4A, 0x3F },
    { 0x03C7, 0x4B, 0x3F },
    { 0x03C7, 0x4C, 0x3F },
    { 0x03C7, 0x4D, 0x3F },
    { 0x03C7, 0x4E, 0x3F },
    { 0x03C7, 0x4F, 0x3F },
    { 0x03C7, 0x50, 0x3F },
    { 0x03C7, 0x51, 0x3F },
    { 0x03C7, 0x52, 0x3F },
    { 0x03C7, 0x53, 0x3F },
    { 0x03C7, 0x54, 0x3F },
    { 0x03C7, 0x55, 0x3F },
    { 0x03C7, 0x56, 0x3F },
    { 0x03C7, 0x57, 0x3F },
    { 0x03C7, 0x58, 0x3F },
    { 0x03C7, 0x59, 0x3F },
    { 0x03C7, 0x5A, 0x3F },
    { 0x03C7, 0x5B, 0x3F },
    { 0x03C7, 0x5C, 0x3F },
    { 0x03C7, 0x5D, 0x3F },
    { 0x03C7, 0x5E, 0x3F },
    { 0x03C7, 0x5F, 0x3F },
    { 0x03C7, 0x60, 0x00 },
    { 0x03C7, 0x61, 0x00 },
    { 0x03C7, 0x62, 0x00 },
    { 0x03C7, 0x63, 0x00 },
    { 0x03C7, 0x64, 0x00 },
    { 0x03C7, 0x65, 0x00 },
    { 0x03C7, 0x66, 0x00 },
    { 0x03C7, 0x67, 0x00 },
    { 0x03C7, 0x68, 0x00 },
    { 0x03C7, 0x69, 0x00 },
    { 0x03C7, 0x6A, 0x00 },
    { 0x03C7, 0x6B, 0x00 },
    { 0x03C7, 0x6C, 0x00 },
    { 0x03C7, 0x6D, 0x00 },
    { 0x03C7, 0x6E, 0x00 },
    { 0x03C7, 0x6F, 0x00 },
    { 0x03C7, 0x70, 0x00 },
    { 0x03C7, 0x71, 0x00 },
    { 0x03C7, 0x72, 0x00 },
    { 0x03C7, 0x73, 0x00 },
    { 0x03C7, 0x74, 0x00 },
    { 0x03C7, 0x75, 0x00 },
    { 0x03C7, 0x76, 0x00 },
    { 0x03C7, 0x77, 0x00 },
    { 0x03C7, 0x78, 0x2A },
    { 0x03C7, 0x79, 0x2A },
    { 0x03C7, 0x7A, 0x2A },
    { 0x03C7, 0x7B, 0x2A },
    { 0x03C7, 0x7C, 0x2A },
    { 0x03C7, 0x7D, 0x2A },
    { 0x03C7, 0x7E, 0x2A },
    { 0x03C7, 0x7F, 0x2A },
    { 0x03C7, 0x80, 0x2A },
    { 0x03C7, 0x81, 0x2A },
    { 0x03C7, 0x82, 0x2A },
    { 0x03C7, 0x83, 0x2A },
    { 0x03C7, 0x84, 0x2A },
    { 0x03C7, 0x85, 0x2A },
    { 0x03C7, 0x86, 0x2A },
    { 0x03C7, 0x87, 0x2A },
    { 0x03C7, 0x88, 0x2A },
    { 0x03C7, 0x89, 0x2A },
    { 0x03C7, 0x8A, 0x2A },
    { 0x03C7, 0x8B, 0x2A },
    { 0x03C7, 0x8C, 0x2A },
    { 0x03C7, 0x8D, 0x2A },
    { 0x03C7, 0x8E, 0x2A },
    { 0x03C7, 0x8F, 0x2A },
    { 0x03C7, 0x90, 0x2A },
    { 0x03C7, 0x91, 0x2A },
    { 0x03C7, 0x92, 0x2A },
    { 0x03C7, 0x93, 0x2A },
    { 0x03C7, 0x94, 0x2A },
    { 0x03C7, 0x95, 0x2A },
    { 0x03C7, 0x96, 0x2A },
    { 0x03C7, 0x97, 0x2A },
    { 0x03C7, 0x98, 0x2A },
    { 0x03C7, 0x99, 0x2A },
    { 0x03C7, 0x9A, 0x2A },
    { 0x03C7, 0x9B, 0x2A },
    { 0x03C7, 0x9C, 0x2A },
    { 0x03C7, 0x9D, 0x2A },
    { 0x03C7, 0x9E, 0x2A },
    { 0x03C7, 0x9F, 0x2A },
    { 0x03C7, 0xA0, 0x2A },
    { 0x03C7, 0xA1, 0x2A },
    { 0x03C7, 0xA2, 0x2A },
    { 0x03C7, 0xA3, 0x2A },
    { 0x03C7, 0xA4, 0x2A },
    { 0x03C7, 0xA5, 0x2A },
    { 0x03C7, 0xA6, 0x2A },
    { 0x03C7, 0xA7, 0x2A },
    { 0x03C7, 0xA8, 0x3F },
    { 0x03C7, 0xA9, 0x3F },
    { 0x03C7, 0xAA, 0x3F },
    { 0x03C7, 0xAB, 0x3F },
    { 0x03C7, 0xAC, 0x3F },
    { 0x03C7, 0xAD, 0x3F },
    { 0x03C7, 0xAE, 0x3F },
    { 0x03C7, 0xAF, 0x3F },
    { 0x03C7, 0xB0, 0x3F },
    { 0x03C7, 0xB1, 0x3F },
    { 0x03C7, 0xB2, 0x3F },
    { 0x03C7, 0xB3, 0x3F },
    { 0x03C7, 0xB4, 0x3F },
    { 0x03C7, 0xB5, 0x3F },
    { 0x03C7, 0xB6, 0x3F },
    { 0x03C7, 0xB7, 0x3F },
    { 0x03C7, 0xB8, 0x3F },
    { 0x03C7, 0xB9, 0x3F },
    { 0x03C7, 0xBA, 0x3F },
    { 0x03C7, 0xBB, 0x3F },
    { 0x03C7, 0xBC, 0x3F },
    { 0x03C7, 0xBD, 0x3F },
    { 0x03C7, 0xBE, 0x3F },
    { 0x03C7, 0xBF, 0x3F }
};

Hag::Testing::Mock::PortAndIndexAndValue SetPaletteTest_modifiedIndexedPorts4[] =
{
    { 0x03C7, 0x0000, 0x00 },
    { 0x03C7, 0x0001, 0x00 },
    { 0x03C7, 0x0002, 0x00 },
    { 0x03C7, 0x0003, 0x00 },
    { 0x03C7, 0x0004, 0x00 },
    { 0x03C7, 0x0005, 0x2A },
    { 0x03C7, 0x0006, 0x00 },
    { 0x03C7, 0x0007, 0x2A },
    { 0x03C7, 0x0008, 0x00 },
    { 0x03C7, 0x0009, 0x00 },
    { 0x03C7, 0x000A, 0x2A },
    { 0x03C7, 0x000B, 0x2A },
    { 0x03C7, 0x000C, 0x2A },
    { 0x03C7, 0x000D, 0x00 },
    { 0x03C7, 0x000E, 0x00 },
    { 0x03C7, 0x000F, 0x2A },
    { 0x03C7, 0x0010, 0x00 },
    { 0x03C7, 0x0011, 0x2A },
    { 0x03C7, 0x0012, 0x2A },
    { 0x03C7, 0x0013, 0x15 },
    { 0x03C7, 0x0014, 0x00 },
    { 0x03C7, 0x0015, 0x2A },
    { 0x03C7, 0x0016, 0x2A },
    { 0x03C7, 0x0017, 0x2A },
    { 0x03C7, 0x0018, 0x15 },
    { 0x03C7, 0x0019, 0x15 },
    { 0x03C7, 0x001A, 0x15 },
    { 0x03C7, 0x001B, 0x15 },
    { 0x03C7, 0x001C, 0x15 },
    { 0x03C7, 0x001D, 0x3F },
    { 0x03C7, 0x001E, 0x15 },
    { 0x03C7, 0x001F, 0x3F },
    { 0x03C7, 0x0020, 0x15 },
    { 0x03C7, 0x0021, 0x15 },
    { 0x03C7, 0x0022, 0x3F },
    { 0x03C7, 0x0023, 0x3F },
    { 0x03C7, 0x0024, 0x3F },
    { 0x03C7, 0x0025, 0x15 },
    { 0x03C7, 0x0026, 0x15 },
    { 0x03C7, 0x0027, 0x3F },
    { 0x03C7, 0x0028, 0x15 },
    { 0x03C7, 0x0029, 0x3F },
    { 0x03C7, 0x002A, 0x3F },
    { 0x03C7, 0x002B, 0x3F },
    { 0x03C7, 0x002C, 0x15 },
    { 0x03C7, 0x002D, 0x3F },
    { 0x03C7, 0x002E, 0x3F },
    { 0x03C7, 0x002F, 0x3F },
    { 0x03C7, 0x0030, 0x00 },
    { 0x03C7, 0x0031, 0x00 },
    { 0x03C7, 0x0032, 0x00 },
    { 0x03C7, 0x0033, 0x05 },
    { 0x03C7, 0x0034, 0x05 },
    { 0x03C7, 0x0035, 0x05 },
    { 0x03C7, 0x0036, 0x08 },
    { 0x03C7, 0x0037, 0x08 },
    { 0x03C7, 0x0038, 0x08 },
    { 0x03C7, 0x0039, 0x0B },
    { 0x03C7, 0x003A, 0x0B },
    { 0x03C7, 0x003B, 0x0B },
    { 0x03C7, 0x003C, 0x0E },
    { 0x03C7, 0x003D, 0x0E },
    { 0x03C7, 0x003E, 0x0E },
    { 0x03C7, 0x003F, 0x11 },
    { 0x03C7, 0x0040, 0x11 },
    { 0x03C7, 0x0041, 0x11 },
    { 0x03C7, 0x0042, 0x14 },
    { 0x03C7, 0x0043, 0x14 },
    { 0x03C7, 0x0044, 0x14 },
    { 0x03C7, 0x0045, 0x18 },
    { 0x03C7, 0x0046, 0x18 },
    { 0x03C7, 0x0047, 0x18 },
    { 0x03C7, 0x0048, 0x1C },
    { 0x03C7, 0x0049, 0x1C },
    { 0x03C7, 0x004A, 0x1C },
    { 0x03C7, 0x004B, 0x20 },
    { 0x03C7, 0x004C, 0x20 },
    { 0x03C7, 0x004D, 0x20 },
    { 0x03C7, 0x004E, 0x24 },
    { 0x03C7, 0x004F, 0x24 },
    { 0x03C7, 0x0050, 0x24 },
    { 0x03C7, 0x0051, 0x28 },
    { 0x03C7, 0x0052, 0x28 },
    { 0x03C7, 0x0053, 0x28 },
    { 0x03C7, 0x0054, 0x2D },
    { 0x03C7, 0x0055, 0x2D },
    { 0x03C7, 0x0056, 0x2D },
    { 0x03C7, 0x0057, 0x32 },
    { 0x03C7, 0x0058, 0x32 },
    { 0x03C7, 0x0059, 0x32 },
    { 0x03C7, 0x005A, 0x38 },
    { 0x03C7, 0x005B, 0x38 },
    { 0x03C7, 0x005C, 0x38 },
    { 0x03C7, 0x005D, 0x3F },
    { 0x03C7, 0x005E, 0x3F },
    { 0x03C7, 0x005F, 0x3F },
    { 0x03C7, 0x0060, 0x00 },
    { 0x03C7, 0x0061, 0x00 },
    { 0x03C7, 0x0062, 0x3F },
    { 0x03C7, 0x0063, 0x10 },
    { 0x03C7, 0x0064, 0x00 },
    { 0x03C7, 0x0065, 0x3F },
    { 0x03C7, 0x0066, 0x1F },
    { 0x03C7, 0x0067, 0x00 },
    { 0x03C7, 0x0068, 0x3F },
    { 0x03C7, 0x0069, 0x2F },
    { 0x03C7, 0x006A, 0x00 },
    { 0x03C7, 0x006B, 0x3F },
    { 0x03C7, 0x006C, 0x3F },
    { 0x03C7, 0x006D, 0x00 },
    { 0x03C7, 0x006E, 0x3F },
    { 0x03C7, 0x006F, 0x3F },
    { 0x03C7, 0x0070, 0x00 },
    { 0x03C7, 0x0071, 0x2F },
    { 0x03C7, 0x0072, 0x3F },
    { 0x03C7, 0x0073, 0x00 },
    { 0x03C7, 0x0074, 0x1F },
    { 0x03C7, 0x0075, 0x3F },
    { 0x03C7, 0x0076, 0x00 },
    { 0x03C7, 0x0077, 0x10 },
    { 0x03C7, 0x0078, 0x3F },
    { 0x03C7, 0x0079, 0x00 },
    { 0x03C7, 0x007A, 0x00 },
    { 0x03C7, 0x007B, 0x3F },
    { 0x03C7, 0x007C, 0x10 },
    { 0x03C7, 0x007D, 0x00 },
    { 0x03C7, 0x007E, 0x3F },
    { 0x03C7, 0x007F, 0x1F },
    { 0x03C7, 0x0080, 0x00 },
    { 0x03C7, 0x0081, 0x3F },
    { 0x03C7, 0x0082, 0x2F },
    { 0x03C7, 0x0083, 0x00 },
    { 0x03C7, 0x0084, 0x3F },
    { 0x03C7, 0x0085, 0x3F },
    { 0x03C7, 0x0086, 0x00 },
    { 0x03C7, 0x0087, 0x2F },
    { 0x03C7, 0x0088, 0x3F },
    { 0x03C7, 0x0089, 0x00 },
    { 0x03C7, 0x008A, 0x1F },
    { 0x03C7, 0x008B, 0x3F },
    { 0x03C7, 0x008C, 0x00 },
    { 0x03C7, 0x008D, 0x10 },
    { 0x03C7, 0x008E, 0x3F },
    { 0x03C7, 0x008F, 0x00 },
    { 0x03C7, 0x0090, 0x00 },
    { 0x03C7, 0x0091, 0x3F },
    { 0x03C7, 0x0092, 0x00 },
    { 0x03C7, 0x0093, 0x00 },
    { 0x03C7, 0x0094, 0x3F },
    { 0x03C7, 0x0095, 0x10 },
    { 0x03C7, 0x0096, 0x00 },
    { 0x03C7, 0x0097, 0x3F },
    { 0x03C7, 0x0098, 0x1F },
    { 0x03C7, 0x0099, 0x00 },
    { 0x03C7, 0x009A, 0x3F },
    { 0x03C7, 0x009B, 0x2F },
    { 0x03C7, 0x009C, 0x00 },
    { 0x03C7, 0x009D, 0x3F },
    { 0x03C7, 0x009E, 0x3F },
    { 0x03C7, 0x009F, 0x00 },
    { 0x03C7, 0x00A0, 0x2F },
    { 0x03C7, 0x00A1, 0x3F },
    { 0x03C7, 0x00A2, 0x00 },
    { 0x03C7, 0x00A3, 0x1F },
    { 0x03C7, 0x00A4, 0x3F },
    { 0x03C7, 0x00A5, 0x00 },
    { 0x03C7, 0x00A6, 0x10 },
    { 0x03C7, 0x00A7, 0x3F },
    { 0x03C7, 0x00A8, 0x1F },
    { 0x03C7, 0x00A9, 0x1F },
    { 0x03C7, 0x00AA, 0x3F },
    { 0x03C7, 0x00AB, 0x27 },
    { 0x03C7, 0x00AC, 0x1F },
    { 0x03C7, 0x00AD, 0x3F },
    { 0x03C7, 0x00AE, 0x2F },
    { 0x03C7, 0x00AF, 0x1F },
    { 0x03C7, 0x00B0, 0x3F },
    { 0x03C7, 0x00B1, 0x37 },
    { 0x03C7, 0x00B2, 0x1F },
    { 0x03C7, 0x00B3, 0x3F },
    { 0x03C7, 0x00B4, 0x3F },
    { 0x03C7, 0x00B5, 0x1F },
    { 0x03C7, 0x00B6, 0x3F },
    { 0x03C7, 0x00B7, 0x3F },
    { 0x03C7, 0x00B8, 0x1F },
    { 0x03C7, 0x00B9, 0x37 },
    { 0x03C7, 0x00BA, 0x3F },
    { 0x03C7, 0x00BB, 0x1F },
    { 0x03C7, 0x00BC, 0x2F },
    { 0x03C7, 0x00BD, 0x3F },
    { 0x03C7, 0x00BE, 0x1F },
    { 0x03C7, 0x00BF, 0x27 },
    { 0x03C7, 0x00C0, 0x3F },
    { 0x03C7, 0x00C1, 0x1F },
    { 0x03C7, 0x00C2, 0x1F },
    { 0x03C7, 0x00C3, 0x3F },
    { 0x03C7, 0x00C4, 0x27 },
    { 0x03C7, 0x00C5, 0x1F },
    { 0x03C7, 0x00C6, 0x3F },
    { 0x03C7, 0x00C7, 0x2F },
    { 0x03C7, 0x00C8, 0x1F },
    { 0x03C7, 0x00C9, 0x3F },
    { 0x03C7, 0x00CA, 0x37 },
    { 0x03C7, 0x00CB, 0x1F },
    { 0x03C7, 0x00CC, 0x3F },
    { 0x03C7, 0x00CD, 0x3F },
    { 0x03C7, 0x00CE, 0x1F },
    { 0x03C7, 0x00CF, 0x37 },
    { 0x03C7, 0x00D0, 0x3F },
    { 0x03C7, 0x00D1, 0x1F },
    { 0x03C7, 0x00D2, 0x2F },
    { 0x03C7, 0x00D3, 0x3F },
    { 0x03C7, 0x00D4, 0x1F },
    { 0x03C7, 0x00D5, 0x27 },
    { 0x03C7, 0x00D6, 0x3F },
    { 0x03C7, 0x00D7, 0x1F },
    { 0x03C7, 0x00D8, 0x1F },
    { 0x03C7, 0x00D9, 0x3F },
    { 0x03C7, 0x00DA, 0x1F },
    { 0x03C7, 0x00DB, 0x1F },
    { 0x03C7, 0x00DC, 0x3F },
    { 0x03C7, 0x00DD, 0x27 },
    { 0x03C7, 0x00DE, 0x1F },
    { 0x03C7, 0x00DF, 0x3F },
    { 0x03C7, 0x00E0, 0x2F },
    { 0x03C7, 0x00E1, 0x1F },
    { 0x03C7, 0x00E2, 0x3F },
    { 0x03C7, 0x00E3, 0x37 },
    { 0x03C7, 0x00E4, 0x1F },
    { 0x03C7, 0x00E5, 0x3F },
    { 0x03C7, 0x00E6, 0x3F },
    { 0x03C7, 0x00E7, 0x1F },
    { 0x03C7, 0x00E8, 0x37 },
    { 0x03C7, 0x00E9, 0x3F },
    { 0x03C7, 0x00EA, 0x1F },
    { 0x03C7, 0x00EB, 0x2F },
    { 0x03C7, 0x00EC, 0x3F },
    { 0x03C7, 0x00ED, 0x1F },
    { 0x03C7, 0x00EE, 0x27 },
    { 0x03C7, 0x00EF, 0x3F },
    { 0x03C7, 0x00F0, 0x2D },
    { 0x03C7, 0x00F1, 0x2D },
    { 0x03C7, 0x00F2, 0x3F },
    { 0x03C7, 0x00F3, 0x31 },
    { 0x03C7, 0x00F4, 0x2D },
    { 0x03C7, 0x00F5, 0x3F },
    { 0x03C7, 0x00F6, 0x36 },
    { 0x03C7, 0x00F7, 0x2D },
    { 0x03C7, 0x00F8, 0x3F },
    { 0x03C7, 0x00F9, 0x3A },
    { 0x03C7, 0x00FA, 0x2D },
    { 0x03C7, 0x00FB, 0x3F },
    { 0x03C7, 0x00FC, 0x3F },
    { 0x03C7, 0x00FD, 0x2D },
    { 0x03C7, 0x00FE, 0x3F },
    { 0x03C7, 0x00FF, 0x3F },
    { 0x03C7, 0x0100, 0x2D },
    { 0x03C7, 0x0101, 0x3A },
    { 0x03C7, 0x0102, 0x3F },
    { 0x03C7, 0x0103, 0x2D },
    { 0x03C7, 0x0104, 0x36 },
    { 0x03C7, 0x0105, 0x3F },
    { 0x03C7, 0x0106, 0x2D },
    { 0x03C7, 0x0107, 0x31 },
    { 0x03C7, 0x0108, 0x3F },
    { 0x03C7, 0x0109, 0x2D },
    { 0x03C7, 0x010A, 0x2D },
    { 0x03C7, 0x010B, 0x3F },
    { 0x03C7, 0x010C, 0x31 },
    { 0x03C7, 0x010D, 0x2D },
    { 0x03C7, 0x010E, 0x3F },
    { 0x03C7, 0x010F, 0x36 },
    { 0x03C7, 0x0110, 0x2D },
    { 0x03C7, 0x0111, 0x3F },
    { 0x03C7, 0x0112, 0x3A },
    { 0x03C7, 0x0113, 0x2D },
    { 0x03C7, 0x0114, 0x3F },
    { 0x03C7, 0x0115, 0x3F },
    { 0x03C7, 0x0116, 0x2D },
    { 0x03C7, 0x0117, 0x3A },
    { 0x03C7, 0x0118, 0x3F },
    { 0x03C7, 0x0119, 0x2D },
    { 0x03C7, 0x011A, 0x36 },
    { 0x03C7, 0x011B, 0x3F },
    { 0x03C7, 0x011C, 0x2D },
    { 0x03C7, 0x011D, 0x31 },
    { 0x03C7, 0x011E, 0x3F },
    { 0x03C7, 0x011F, 0x2D },
    { 0x03C7, 0x0120, 0x2D },
    { 0x03C7, 0x0121, 0x3F },
    { 0x03C7, 0x0122, 0x2D },
    { 0x03C7, 0x0123, 0x2D },
    { 0x03C7, 0x0124, 0x3F },
    { 0x03C7, 0x0125, 0x31 },
    { 0x03C7, 0x0126, 0x2D },
    { 0x03C7, 0x0127, 0x3F },
    { 0x03C7, 0x0128, 0x36 },
    { 0x03C7, 0x0129, 0x2D },
    { 0x03C7, 0x012A, 0x3F },
    { 0x03C7, 0x012B, 0x3A },
    { 0x03C7, 0x012C, 0x2D },
    { 0x03C7, 0x012D, 0x3F },
    { 0x03C7, 0x012E, 0x3F },
    { 0x03C7, 0x012F, 0x2D },
    { 0x03C7, 0x0130, 0x3A },
    { 0x03C7, 0x0131, 0x3F },
    { 0x03C7, 0x0132, 0x2D },
    { 0x03C7, 0x0133, 0x36 },
    { 0x03C7, 0x0134, 0x3F },
    { 0x03C7, 0x0135, 0x2D },
    { 0x03C7, 0x0136, 0x31 },
    { 0x03C7, 0x0137, 0x3F },
    { 0x03C7, 0x0138, 0x00 },
    { 0x03C7, 0x0139, 0x00 },
    { 0x03C7, 0x013A, 0x1C },
    { 0x03C7, 0x013B, 0x07 },
    { 0x03C7, 0x013C, 0x00 },
    { 0x03C7, 0x013D, 0x1C },
    { 0x03C7, 0x013E, 0x0E },
    { 0x03C7, 0x013F, 0x00 },
    { 0x03C7, 0x0140, 0x1C },
    { 0x03C7, 0x0141, 0x15 },
    { 0x03C7, 0x0142, 0x00 },
    { 0x03C7, 0x0143, 0x1C },
    { 0x03C7, 0x0144, 0x1C },
    { 0x03C7, 0x0145, 0x00 },
    { 0x03C7, 0x0146, 0x1C },
    { 0x03C7, 0x0147, 0x1C },
    { 0x03C7, 0x0148, 0x00 },
    { 0x03C7, 0x0149, 0x15 },
    { 0x03C7, 0x014A, 0x1C },
    { 0x03C7, 0x014B, 0x00 },
    { 0x03C7, 0x014C, 0x0E },
    { 0x03C7, 0x014D, 0x1C },
    { 0x03C7, 0x014E, 0x00 },
    { 0x03C7, 0x014F, 0x07 },
    { 0x03C7, 0x0150, 0x1C },
    { 0x03C7, 0x0151, 0x00 },
    { 0x03C7, 0x0152, 0x00 },
    { 0x03C7, 0x0153, 0x1C },
    { 0x03C7, 0x0154, 0x07 },
    { 0x03C7, 0x0155, 0x00 },
    { 0x03C7, 0x0156, 0x1C },
    { 0x03C7, 0x0157, 0x0E },
    { 0x03C7, 0x0158, 0x00 },
    { 0x03C7, 0x0159, 0x1C },
    { 0x03C7, 0x015A, 0x15 },
    { 0x03C7, 0x015B, 0x00 },
    { 0x03C7, 0x015C, 0x1C },
    { 0x03C7, 0x015D, 0x1C },
    { 0x03C7, 0x015E, 0x00 },
    { 0x03C7, 0x015F, 0x15 },
    { 0x03C7, 0x0160, 0x1C },
    { 0x03C7, 0x0161, 0x00 },
    { 0x03C7, 0x0162, 0x0E },
    { 0x03C7, 0x0163, 0x1C },
    { 0x03C7, 0x0164, 0x00 },
    { 0x03C7, 0x0165, 0x07 },
    { 0x03C7, 0x0166, 0x1C },
    { 0x03C7, 0x0167, 0x00 },
    { 0x03C7, 0x0168, 0x00 },
    { 0x03C7, 0x0169, 0x1C },
    { 0x03C7, 0x016A, 0x00 },
    { 0x03C7, 0x016B, 0x00 },
    { 0x03C7, 0x016C, 0x1C },
    { 0x03C7, 0x016D, 0x07 },
    { 0x03C7, 0x016E, 0x00 },
    { 0x03C7, 0x016F, 0x1C },
    { 0x03C7, 0x0170, 0x0E },
    { 0x03C7, 0x0171, 0x00 },
    { 0x03C7, 0x0172, 0x1C },
    { 0x03C7, 0x0173, 0x15 },
    { 0x03C7, 0x0174, 0x00 },
    { 0x03C7, 0x0175, 0x1C },
    { 0x03C7, 0x0176, 0x1C },
    { 0x03C7, 0x0177, 0x00 },
    { 0x03C7, 0x0178, 0x15 },
    { 0x03C7, 0x0179, 0x1C },
    { 0x03C7, 0x017A, 0x00 },
    { 0x03C7, 0x017B, 0x0E },
    { 0x03C7, 0x017C, 0x1C },
    { 0x03C7, 0x017D, 0x00 },
    { 0x03C7, 0x017E, 0x07 },
    { 0x03C7, 0x017F, 0x1C },
    { 0x03C7, 0x0180, 0x0E },
    { 0x03C7, 0x0181, 0x0E },
    { 0x03C7, 0x0182, 0x1C },
    { 0x03C7, 0x0183, 0x11 },
    { 0x03C7, 0x0184, 0x0E },
    { 0x03C7, 0x0185, 0x1C },
    { 0x03C7, 0x0186, 0x15 },
    { 0x03C7, 0x0187, 0x0E },
    { 0x03C7, 0x0188, 0x1C },
    { 0x03C7, 0x0189, 0x18 },
    { 0x03C7, 0x018A, 0x0E },
    { 0x03C7, 0x018B, 0x1C },
    { 0x03C7, 0x018C, 0x1C },
    { 0x03C7, 0x018D, 0x0E },
    { 0x03C7, 0x018E, 0x1C },
    { 0x03C7, 0x018F, 0x1C },
    { 0x03C7, 0x0190, 0x0E },
    { 0x03C7, 0x0191, 0x18 },
    { 0x03C7, 0x0192, 0x1C },
    { 0x03C7, 0x0193, 0x0E },
    { 0x03C7, 0x0194, 0x15 },
    { 0x03C7, 0x0195, 0x1C },
    { 0x03C7, 0x0196, 0x0E },
    { 0x03C7, 0x0197, 0x11 },
    { 0x03C7, 0x0198, 0x1C },
    { 0x03C7, 0x0199, 0x0E },
    { 0x03C7, 0x019A, 0x0E },
    { 0x03C7, 0x019B, 0x1C },
    { 0x03C7, 0x019C, 0x11 },
    { 0x03C7, 0x019D, 0x0E },
    { 0x03C7, 0x019E, 0x1C },
    { 0x03C7, 0x019F, 0x15 },
    { 0x03C7, 0x01A0, 0x0E },
    { 0x03C7, 0x01A1, 0x1C },
    { 0x03C7, 0x01A2, 0x18 },
    { 0x03C7, 0x01A3, 0x0E },
    { 0x03C7, 0x01A4, 0x1C },
    { 0x03C7, 0x01A5, 0x1C },
    { 0x03C7, 0x01A6, 0x0E },
    { 0x03C7, 0x01A7, 0x18 },
    { 0x03C7, 0x01A8, 0x1C },
    { 0x03C7, 0x01A9, 0x0E },
    { 0x03C7, 0x01AA, 0x15 },
    { 0x03C7, 0x01AB, 0x1C },
    { 0x03C7, 0x01AC, 0x0E },
    { 0x03C7, 0x01AD, 0x11 },
    { 0x03C7, 0x01AE, 0x1C },
    { 0x03C7, 0x01AF, 0x0E },
    { 0x03C7, 0x01B0, 0x0E },
    { 0x03C7, 0x01B1, 0x1C },
    { 0x03C7, 0x01B2, 0x0E },
    { 0x03C7, 0x01B3, 0x0E },
    { 0x03C7, 0x01B4, 0x1C },
    { 0x03C7, 0x01B5, 0x11 },
    { 0x03C7, 0x01B6, 0x0E },
    { 0x03C7, 0x01B7, 0x1C },
    { 0x03C7, 0x01B8, 0x15 },
    { 0x03C7, 0x01B9, 0x0E },
    { 0x03C7, 0x01BA, 0x1C },
    { 0x03C7, 0x01BB, 0x18 },
    { 0x03C7, 0x01BC, 0x0E },
    { 0x03C7, 0x01BD, 0x1C },
    { 0x03C7, 0x01BE, 0x1C },
    { 0x03C7, 0x01BF, 0x0E },
    { 0x03C7, 0x01C0, 0x18 },
    { 0x03C7, 0x01C1, 0x1C },
    { 0x03C7, 0x01C2, 0x0E },
    { 0x03C7, 0x01C3, 0x15 },
    { 0x03C7, 0x01C4, 0x1C },
    { 0x03C7, 0x01C5, 0x0E },
    { 0x03C7, 0x01C6, 0x11 },
    { 0x03C7, 0x01C7, 0x1C },
    { 0x03C7, 0x01C8, 0x14 },
    { 0x03C7, 0x01C9, 0x14 },
    { 0x03C7, 0x01CA, 0x1C },
    { 0x03C7, 0x01CB, 0x16 },
    { 0x03C7, 0x01CC, 0x14 },
    { 0x03C7, 0x01CD, 0x1C },
    { 0x03C7, 0x01CE, 0x18 },
    { 0x03C7, 0x01CF, 0x14 },
    { 0x03C7, 0x01D0, 0x1C },
    { 0x03C7, 0x01D1, 0x1A },
    { 0x03C7, 0x01D2, 0x14 },
    { 0x03C7, 0x01D3, 0x1C },
    { 0x03C7, 0x01D4, 0x1C },
    { 0x03C7, 0x01D5, 0x14 },
    { 0x03C7, 0x01D6, 0x1C },
    { 0x03C7, 0x01D7, 0x1C },
    { 0x03C7, 0x01D8, 0x14 },
    { 0x03C7, 0x01D9, 0x1A },
    { 0x03C7, 0x01DA, 0x1C },
    { 0x03C7, 0x01DB, 0x14 },
    { 0x03C7, 0x01DC, 0x18 },
    { 0x03C7, 0x01DD, 0x1C },
    { 0x03C7, 0x01DE, 0x14 },
    { 0x03C7, 0x01DF, 0x16 },
    { 0x03C7, 0x01E0, 0x1C },
    { 0x03C7, 0x01E1, 0x14 },
    { 0x03C7, 0x01E2, 0x14 },
    { 0x03C7, 0x01E3, 0x1C },
    { 0x03C7, 0x01E4, 0x16 },
    { 0x03C7, 0x01E5, 0x14 },
    { 0x03C7, 0x01E6, 0x1C },
    { 0x03C7, 0x01E7, 0x18 },
    { 0x03C7, 0x01E8, 0x14 },
    { 0x03C7, 0x01E9, 0x1C },
    { 0x03C7, 0x01EA, 0x1A },
    { 0x03C7, 0x01EB, 0x14 },
    { 0x03C7, 0x01EC, 0x1C },
    { 0x03C7, 0x01ED, 0x1C },
    { 0x03C7, 0x01EE, 0x14 },
    { 0x03C7, 0x01EF, 0x1A },
    { 0x03C7, 0x01F0, 0x1C },
    { 0x03C7, 0x01F1, 0x14 },
    { 0x03C7, 0x01F2, 0x18 },
    { 0x03C7, 0x01F3, 0x1C },
    { 0x03C7, 0x01F4, 0x14 },
    { 0x03C7, 0x01F5, 0x16 },
    { 0x03C7, 0x01F6, 0x1C },
    { 0x03C7, 0x01F7, 0x14 },
    { 0x03C7, 0x01F8, 0x14 },
    { 0x03C7, 0x01F9, 0x1C },
    { 0x03C7, 0x01FA, 0x14 },
    { 0x03C7, 0x01FB, 0x14 },
    { 0x03C7, 0x01FC, 0x1C },
    { 0x03C7, 0x01FD, 0x16 },
    { 0x03C7, 0x01FE, 0x14 },
    { 0x03C7, 0x01FF, 0x1C },
    { 0x03C7, 0x0200, 0x18 },
    { 0x03C7, 0x0201, 0x14 },
    { 0x03C7, 0x0202, 0x1C },
    { 0x03C7, 0x0203, 0x1A },
    { 0x03C7, 0x0204, 0x14 },
    { 0x03C7, 0x0205, 0x1C },
    { 0x03C7, 0x0206, 0x1C },
    { 0x03C7, 0x0207, 0x14 },
    { 0x03C7, 0x0208, 0x1A },
    { 0x03C7, 0x0209, 0x1C },
    { 0x03C7, 0x020A, 0x14 },
    { 0x03C7, 0x020B, 0x18 },
    { 0x03C7, 0x020C, 0x1C },
    { 0x03C7, 0x020D, 0x14 },
    { 0x03C7, 0x020E, 0x16 },
    { 0x03C7, 0x020F, 0x1C },
    { 0x03C7, 0x0210, 0x00 },
    { 0x03C7, 0x0211, 0x00 },
    { 0x03C7, 0x0212, 0x10 },
    { 0x03C7, 0x0213, 0x04 },
    { 0x03C7, 0x0214, 0x00 },
    { 0x03C7, 0x0215, 0x10 },
    { 0x03C7, 0x0216, 0x08 },
    { 0x03C7, 0x0217, 0x00 },
    { 0x03C7, 0x0218, 0x10 },
    { 0x03C7, 0x0219, 0x0C },
    { 0x03C7, 0x021A, 0x00 },
    { 0x03C7, 0x021B, 0x10 },
    { 0x03C7, 0x021C, 0x10 },
    { 0x03C7, 0x021D, 0x00 },
    { 0x03C7, 0x021E, 0x10 },
    { 0x03C7, 0x021F, 0x10 },
    { 0x03C7, 0x0220, 0x00 },
    { 0x03C7, 0x0221, 0x0C },
    { 0x03C7, 0x0222, 0x10 },
    { 0x03C7, 0x0223, 0x00 },
    { 0x03C7, 0x0224, 0x08 },
    { 0x03C7, 0x0225, 0x10 },
    { 0x03C7, 0x0226, 0x00 },
    { 0x03C7, 0x0227, 0x04 },
    { 0x03C7, 0x0228, 0x10 },
    { 0x03C7, 0x0229, 0x00 },
    { 0x03C7, 0x022A, 0x00 },
    { 0x03C7, 0x022B, 0x10 },
    { 0x03C7, 0x022C, 0x04 },
    { 0x03C7, 0x022D, 0x00 },
    { 0x03C7, 0x022E, 0x10 },
    { 0x03C7, 0x022F, 0x08 },
    { 0x03C7, 0x0230, 0x00 },
    { 0x03C7, 0x0231, 0x10 },
    { 0x03C7, 0x0232, 0x0C },
    { 0x03C7, 0x0233, 0x00 },
    { 0x03C7, 0x0234, 0x10 },
    { 0x03C7, 0x0235, 0x10 },
    { 0x03C7, 0x0236, 0x00 },
    { 0x03C7, 0x0237, 0x0C },
    { 0x03C7, 0x0238, 0x10 },
    { 0x03C7, 0x0239, 0x00 },
    { 0x03C7, 0x023A, 0x08 },
    { 0x03C7, 0x023B, 0x10 },
    { 0x03C7, 0x023C, 0x00 },
    { 0x03C7, 0x023D, 0x04 },
    { 0x03C7, 0x023E, 0x10 },
    { 0x03C7, 0x023F, 0x00 },
    { 0x03C7, 0x0240, 0x00 },
    { 0x03C7, 0x0241, 0x10 },
    { 0x03C7, 0x0242, 0x00 },
    { 0x03C7, 0x0243, 0x00 },
    { 0x03C7, 0x0244, 0x10 },
    { 0x03C7, 0x0245, 0x04 },
    { 0x03C7, 0x0246, 0x00 },
    { 0x03C7, 0x0247, 0x10 },
    { 0x03C7, 0x0248, 0x08 },
    { 0x03C7, 0x0249, 0x00 },
    { 0x03C7, 0x024A, 0x10 },
    { 0x03C7, 0x024B, 0x0C },
    { 0x03C7, 0x024C, 0x00 },
    { 0x03C7, 0x024D, 0x10 },
    { 0x03C7, 0x024E, 0x10 },
    { 0x03C7, 0x024F, 0x00 },
    { 0x03C7, 0x0250, 0x0C },
    { 0x03C7, 0x0251, 0x10 },
    { 0x03C7, 0x0252, 0x00 },
    { 0x03C7, 0x0253, 0x08 },
    { 0x03C7, 0x0254, 0x10 },
    { 0x03C7, 0x0255, 0x00 },
    { 0x03C7, 0x0256, 0x04 },
    { 0x03C7, 0x0257, 0x10 },
    { 0x03C7, 0x0258, 0x08 },
    { 0x03C7, 0x0259, 0x08 },
    { 0x03C7, 0x025A, 0x10 },
    { 0x03C7, 0x025B, 0x0A },
    { 0x03C7, 0x025C, 0x08 },
    { 0x03C7, 0x025D, 0x10 },
    { 0x03C7, 0x025E, 0x0C },
    { 0x03C7, 0x025F, 0x08 },
    { 0x03C7, 0x0260, 0x10 },
    { 0x03C7, 0x0261, 0x0E },
    { 0x03C7, 0x0262, 0x08 },
    { 0x03C7, 0x0263, 0x10 },
    { 0x03C7, 0x0264, 0x10 },
    { 0x03C7, 0x0265, 0x08 },
    { 0x03C7, 0x0266, 0x10 },
    { 0x03C7, 0x0267, 0x10 },
    { 0x03C7, 0x0268, 0x08 },
    { 0x03C7, 0x0269, 0x0E },
    { 0x03C7, 0x026A, 0x10 },
    { 0x03C7, 0x026B, 0x08 },
    { 0x03C7, 0x026C, 0x0C },
    { 0x03C7, 0x026D, 0x10 },
    { 0x03C7, 0x026E, 0x08 },
    { 0x03C7, 0x026F, 0x0A },
    { 0x03C7, 0x0270, 0x10 },
    { 0x03C7, 0x0271, 0x08 },
    { 0x03C7, 0x0272, 0x08 },
    { 0x03C7, 0x0273, 0x10 },
    { 0x03C7, 0x0274, 0x0A },
    { 0x03C7, 0x0275, 0x08 },
    { 0x03C7, 0x0276, 0x10 },
    { 0x03C7, 0x0277, 0x0C },
    { 0x03C7, 0x0278, 0x08 },
    { 0x03C7, 0x0279, 0x10 },
    { 0x03C7, 0x027A, 0x0E },
    { 0x03C7, 0x027B, 0x08 },
    { 0x03C7, 0x027C, 0x10 },
    { 0x03C7, 0x027D, 0x10 },
    { 0x03C7, 0x027E, 0x08 },
    { 0x03C7, 0x027F, 0x0E },
    { 0x03C7, 0x0280, 0x10 },
    { 0x03C7, 0x0281, 0x08 },
    { 0x03C7, 0x0282, 0x0C },
    { 0x03C7, 0x0283, 0x10 },
    { 0x03C7, 0x0284, 0x08 },
    { 0x03C7, 0x0285, 0x0A },
    { 0x03C7, 0x0286, 0x10 },
    { 0x03C7, 0x0287, 0x08 },
    { 0x03C7, 0x0288, 0x08 },
    { 0x03C7, 0x0289, 0x10 },
    { 0x03C7, 0x028A, 0x08 },
    { 0x03C7, 0x028B, 0x08 },
    { 0x03C7, 0x028C, 0x10 },
    { 0x03C7, 0x028D, 0x0A },
    { 0x03C7, 0x028E, 0x08 },
    { 0x03C7, 0x028F, 0x10 },
    { 0x03C7, 0x0290, 0x0C },
    { 0x03C7, 0x0291, 0x08 },
    { 0x03C7, 0x0292, 0x10 },
    { 0x03C7, 0x0293, 0x0E },
    { 0x03C7, 0x0294, 0x08 },
    { 0x03C7, 0x0295, 0x10 },
    { 0x03C7, 0x0296, 0x10 },
    { 0x03C7, 0x0297, 0x08 },
    { 0x03C7, 0x0298, 0x0E },
    { 0x03C7, 0x0299, 0x10 },
    { 0x03C7, 0x029A, 0x08 },
    { 0x03C7, 0x029B, 0x0C },
    { 0x03C7, 0x029C, 0x10 },
    { 0x03C7, 0x029D, 0x08 },
    { 0x03C7, 0x029E, 0x0A },
    { 0x03C7, 0x029F, 0x10 },
    { 0x03C7, 0x02A0, 0x0B },
    { 0x03C7, 0x02A1, 0x0B },
    { 0x03C7, 0x02A2, 0x10 },
    { 0x03C7, 0x02A3, 0x0C },
    { 0x03C7, 0x02A4, 0x0B },
    { 0x03C7, 0x02A5, 0x10 },
    { 0x03C7, 0x02A6, 0x0D },
    { 0x03C7, 0x02A7, 0x0B },
    { 0x03C7, 0x02A8, 0x10 },
    { 0x03C7, 0x02A9, 0x0F },
    { 0x03C7, 0x02AA, 0x0B },
    { 0x03C7, 0x02AB, 0x10 },
    { 0x03C7, 0x02AC, 0x10 },
    { 0x03C7, 0x02AD, 0x0B },
    { 0x03C7, 0x02AE, 0x10 },
    { 0x03C7, 0x02AF, 0x10 },
    { 0x03C7, 0x02B0, 0x0B },
    { 0x03C7, 0x02B1, 0x0F },
    { 0x03C7, 0x02B2, 0x10 },
    { 0x03C7, 0x02B3, 0x0B },
    { 0x03C7, 0x02B4, 0x0D },
    { 0x03C7, 0x02B5, 0x10 },
    { 0x03C7, 0x02B6, 0x0B },
    { 0x03C7, 0x02B7, 0x0C },
    { 0x03C7, 0x02B8, 0x10 },
    { 0x03C7, 0x02B9, 0x0B },
    { 0x03C7, 0x02BA, 0x0B },
    { 0x03C7, 0x02BB, 0x10 },
    { 0x03C7, 0x02BC, 0x0C },
    { 0x03C7, 0x02BD, 0x0B },
    { 0x03C7, 0x02BE, 0x10 },
    { 0x03C7, 0x02BF, 0x0D },
    { 0x03C7, 0x02C0, 0x0B },
    { 0x03C7, 0x02C1, 0x10 },
    { 0x03C7, 0x02C2, 0x0F },
    { 0x03C7, 0x02C3, 0x0B },
    { 0x03C7, 0x02C4, 0x10 },
    { 0x03C7, 0x02C5, 0x10 },
    { 0x03C7, 0x02C6, 0x0B },
    { 0x03C7, 0x02C7, 0x0F },
    { 0x03C7, 0x02C8, 0x10 },
    { 0x03C7, 0x02C9, 0x0B },
    { 0x03C7, 0x02CA, 0x0D },
    { 0x03C7, 0x02CB, 0x10 },
    { 0x03C7, 0x02CC, 0x0B },
    { 0x03C7, 0x02CD, 0x0C },
    { 0x03C7, 0x02CE, 0x10 },
    { 0x03C7, 0x02CF, 0x0B },
    { 0x03C7, 0x02D0, 0x0B },
    { 0x03C7, 0x02D1, 0x10 },
    { 0x03C7, 0x02D2, 0x0B },
    { 0x03C7, 0x02D3, 0x0B },
    { 0x03C7, 0x02D4, 0x10 },
    { 0x03C7, 0x02D5, 0x0C },
    { 0x03C7, 0x02D6, 0x0B },
    { 0x03C7, 0x02D7, 0x10 },
    { 0x03C7, 0x02D8, 0x0D },
    { 0x03C7, 0x02D9, 0x0B },
    { 0x03C7, 0x02DA, 0x10 },
    { 0x03C7, 0x02DB, 0x0F },
    { 0x03C7, 0x02DC, 0x0B },
    { 0x03C7, 0x02DD, 0x10 },
    { 0x03C7, 0x02DE, 0x10 },
    { 0x03C7, 0x02DF, 0x0B },
    { 0x03C7, 0x02E0, 0x0F },
    { 0x03C7, 0x02E1, 0x10 },
    { 0x03C7, 0x02E2, 0x0B },
    { 0x03C7, 0x02E3, 0x0D },
    { 0x03C7, 0x02E4, 0x10 },
    { 0x03C7, 0x02E5, 0x0B },
    { 0x03C7, 0x02E6, 0x0C },
    { 0x03C7, 0x02E7, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue* SetPaletteTest_modifiedIndexedPorts[] =
{
    SetPaletteTest_modifiedIndexedPorts0, //0
    SetPaletteTest_modifiedIndexedPorts1, //1
    SetPaletteTest_modifiedIndexedPorts1, //2
    SetPaletteTest_modifiedIndexedPorts1, //3
    SetPaletteTest_modifiedIndexedPorts2, //4
    SetPaletteTest_modifiedIndexedPorts2, //5
    SetPaletteTest_modifiedIndexedPorts2, //6
    SetPaletteTest_modifiedIndexedPorts3, //7
    SetPaletteTest_modifiedIndexedPorts1, //8
    SetPaletteTest_modifiedIndexedPorts2, //9
    SetPaletteTest_modifiedIndexedPorts2, //10
    SetPaletteTest_modifiedIndexedPorts2, //11
    SetPaletteTest_modifiedIndexedPorts2, //12
    SetPaletteTest_modifiedIndexedPorts2, //13
    SetPaletteTest_modifiedIndexedPorts2, //14
    SetPaletteTest_modifiedIndexedPorts3, //15
    SetPaletteTest_modifiedIndexedPorts1, //16
    SetPaletteTest_modifiedIndexedPorts1, //17
    SetPaletteTest_modifiedIndexedPorts1, //18
    SetPaletteTest_modifiedIndexedPorts4, //19
    SetPaletteTest_modifiedIndexedPorts4, //20
    SetPaletteTest_modifiedIndexedPorts1, //21
    SetPaletteTest_modifiedIndexedPorts4, //22
    SetPaletteTest_modifiedIndexedPorts1, //23
    SetPaletteTest_modifiedIndexedPorts4, //24
    SetPaletteTest_modifiedIndexedPorts4, //25
    SetPaletteTest_modifiedIndexedPorts1, //26
    SetPaletteTest_modifiedIndexedPorts4, //27
    SetPaletteTest_modifiedIndexedPorts1, //28
    SetPaletteTest_modifiedIndexedPorts1, //29
    SetPaletteTest_modifiedIndexedPorts4, //30
    SetPaletteTest_modifiedIndexedPorts4, //31
    SetPaletteTest_modifiedIndexedPorts1, //32
    SetPaletteTest_modifiedIndexedPorts4, //33
    SetPaletteTest_modifiedIndexedPorts1, //34
    SetPaletteTest_modifiedIndexedPorts4, //35
    SetPaletteTest_modifiedIndexedPorts1, //36
    SetPaletteTest_modifiedIndexedPorts4, //37
    SetPaletteTest_modifiedIndexedPorts4, //38
    SetPaletteTest_modifiedIndexedPorts4, //39
    SetPaletteTest_modifiedIndexedPorts4, //40
    SetPaletteTest_modifiedIndexedPorts4, //41
    SetPaletteTest_modifiedIndexedPorts4, //42
    SetPaletteTest_modifiedIndexedPorts4, //43
    SetPaletteTest_modifiedIndexedPorts4, //44
    SetPaletteTest_modifiedIndexedPorts4, //45
    SetPaletteTest_modifiedIndexedPorts4, //46
    SetPaletteTest_modifiedIndexedPorts4, //47
    SetPaletteTest_modifiedIndexedPorts4, //48
    SetPaletteTest_modifiedIndexedPorts4  //49
};

int SetPaletteTest_modifiedIndexedPortsCount[] =
{
    sizeof(SetPaletteTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //0
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //1
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //2
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //3
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //4
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //5
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //6
    sizeof(SetPaletteTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //7
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //8
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //9
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //10
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //11
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //12
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //13
    sizeof(SetPaletteTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //14
    sizeof(SetPaletteTest_modifiedIndexedPorts3) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //15
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //16
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //17
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //18
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //19
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //20
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //21
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //22
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //23
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //24
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //25
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //26
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //27
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //28
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //29
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //30
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //31
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //32
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //33
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //34
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //35
    sizeof(SetPaletteTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //36
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //37
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //38
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //39
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //40
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //41
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //42
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //43
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //44
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //45
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //46
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //47
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),  //48
    sizeof(SetPaletteTest_modifiedIndexedPorts4) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue)   //49
};

uint8_t SetPaletteTest_RAMDACRegisters[] =
{
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFF
};


Hag::Testing::Mock::MemoryAccess SetFontTest_memoryAccess0[] =
{
    { 0x000A0000, 8192 },
    { 0x000A03A0, 16 },
    { 0x000A0440, 16 },
    { 0x000A0560, 16 },
    { 0x000A05A0, 16 },
    { 0x000A09A0, 16 },
    { 0x000A0A80, 16 },
    { 0x000A0AE0, 16 },
    { 0x000A0B40, 16 },
    { 0x000A0B60, 16 },
    { 0x000A0BA0, 16 },
    { 0x000A0DA0, 16 },
    { 0x000A0EE0, 16 },
    { 0x000A1220, 16 },
    { 0x000A13A0, 16 },
    { 0x000A13C0, 16 },
    { 0x000A1E20, 16 },
    { 0x000A1EC0, 16 }
};

int SetFontTest_memoryAccessCount0 = sizeof(SetFontTest_memoryAccess0) / sizeof(Hag::Testing::Mock::MemoryAccess);

Hag::Testing::Mock::MemoryAccess SetFontTest_memoryAccess1[] =
{
    { 0x000A0000, 8192 }
};

int SetFontTest_memoryAccessCount1 = sizeof(SetFontTest_memoryAccess1) / sizeof(Hag::Testing::Mock::MemoryAccess);

Hag::Testing::Mock::PortAndIndex SetFontTest_readIndexedPorts0[] =
{
    { 0x03C5, 0x0002 },
    { 0x03CF, 0x0004 },
    { 0x03CF, 0x0005 },
    { 0x03CF, 0x0006 }
};

Hag::Testing::Mock::PortAndIndex SetFontTest_readIndexedPorts1[] =
{
    { 0x03C5, 0x0002 },
    { 0x03CF, 0x0004 },
    { 0x03CF, 0x0005 }
};

Hag::Testing::Mock::PortAndIndex SetFontTest_readIndexedPorts2[] =
{
    { 0x03C5, 0x0002 },
    { 0x03CF, 0x0004 },
    { 0x03CF, 0x0006 }
};

Hag::Testing::Mock::PortAndIndex* SetFontTest_readIndexedPorts[] =
{
    SetFontTest_readIndexedPorts0,      //0x01
    SetFontTest_readIndexedPorts0,      //0x02
    SetFontTest_readIndexedPorts0,      //0x03
    SetFontTest_readIndexedPorts1,      //0x07
    SetFontTest_readIndexedPorts2,      //0x54
    SetFontTest_readIndexedPorts2,      //0x55
};

int SetFontTest_readIndexedPortsCount[] =
{
    sizeof(SetFontTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex),      //0x01
    sizeof(SetFontTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex),      //0x02
    sizeof(SetFontTest_readIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndex),      //0x03
    sizeof(SetFontTest_readIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndex),      //0x07
    sizeof(SetFontTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex),      //0x54
    sizeof(SetFontTest_readIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndex)       //0x55
};

Hag::Testing::Mock::PortAndIndexAndValue SetFontTest_modifiedIndexedPorts0[] =
{
    { 0x03C5, 0x0004, 0x03 },
    { 0x03CF, 0x0005, 0x10 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetFontTest_modifiedIndexedPorts1[] =
{
    { 0x03C5, 0x0004, 0x03 }
};

Hag::Testing::Mock::PortAndIndexAndValue SetFontTest_modifiedIndexedPorts2[] =
{
    { 0x03C5, 0x0004, 0x03 },
    { 0x03CF, 0x0006, 0x0A }
};

Hag::Testing::Mock::PortAndIndexAndValue* SetFontTest_modifiedIndexedPorts[] =
{
    SetFontTest_modifiedIndexedPorts1,      //0x01
    SetFontTest_modifiedIndexedPorts1,      //0x02
    SetFontTest_modifiedIndexedPorts1,      //0x03
    SetFontTest_modifiedIndexedPorts2,      //0x07
    SetFontTest_modifiedIndexedPorts0,      //0x54
    SetFontTest_modifiedIndexedPorts0       //0x55
};

int SetFontTest_modifiedIndexedPortsCount[] =
{
    sizeof(SetFontTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),    //0x01
    sizeof(SetFontTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),    //0x02
    sizeof(SetFontTest_modifiedIndexedPorts1) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),    //0x03
    sizeof(SetFontTest_modifiedIndexedPorts2) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),    //0x07
    sizeof(SetFontTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue),    //0x54
    sizeof(SetFontTest_modifiedIndexedPorts0) / sizeof(Hag::Testing::Mock::PortAndIndexAndValue)     //0x55
};

uint16_t SetFontTest_ignorePorts[] =
{ 
    Hag::VGA::Register::CRTControllerIndexB,
    Hag::VGA::Register::CRTControllerDataB,
    Hag::VGA::Register::InputStatus1B,
    Hag::VGA::Register::AttributeControllerIndex,
    Hag::VGA::Register::SequencerIndex,
    Hag::VGA::Register::SequencerData,
    Hag::VGA::Register::MiscellaneousR,
    Hag::VGA::Register::CRTControllerIndexD,
    Hag::VGA::Register::CRTControllerDataD,
    Hag::VGA::Register::InputStatus1D,
    Hag::VGA::Register::GraphicsControllerIndex,
    Hag::VGA::Register::GraphicsControllerData,
    Hag::VGA::Register::DACReadIndex,
    Hag::VGA::Register::DACWriteIndex,
    Hag::VGA::Register::RAMDACData,
};

uint16_t SetFontTest_ignorePortsCount = sizeof(SetFontTest_ignorePorts) / sizeof(uint16_t);

Hag::Testing::Mock::PortAndIndex SetFontTest_ignoreIndexedPorts[] =
{
    { 0x03D5, 0x0E },
    { 0x03D5, 0x0F }
};

uint16_t SetFontTest_ignoreIndexedPortsCount = sizeof(SetFontTest_ignoreIndexedPorts) / sizeof(Hag::Testing::Mock::PortAndIndex);

Hag::Testing::Mock::MemoryAccess SetVideoModeInternalsTest_memoryAccess0[] =
{
    { 0, 0 }
};

Hag::Testing::Mock::MemoryAccess SetVideoModeInternalsTest_memoryAccess1[] =
{
    { 0x000A0000, 0x00002000 },
    { 0x000A03A0, 0x00000010 },
    { 0x000A0440, 0x00000010 },
    { 0x000A0560, 0x00000010 },
    { 0x000A05A0, 0x00000010 },
    { 0x000A09A0, 0x00000010 },
    { 0x000A0A80, 0x00000010 },
    { 0x000A0AE0, 0x00000010 },
    { 0x000A0B40, 0x00000010 },
    { 0x000A0B60, 0x00000010 },
    { 0x000A0BA0, 0x00000010 },
    { 0x000A0DA0, 0x00000010 },
    { 0x000A0EE0, 0x00000010 },
    { 0x000A1220, 0x00000010 },
    { 0x000A13A0, 0x00000010 },
    { 0x000A13C0, 0x00000010 },
    { 0x000A1E20, 0x00000010 },
    { 0x000A1EC0, 0x00000010 },
    { 0x000B8000, 0x00008000 },
    { 0x000C3A09, 0x0000001C },
    { 0x000C3A41, 0x00000020 }
};

Hag::Testing::Mock::MemoryAccess SetVideoModeInternalsTest_memoryAccess2[] =
{
    { 0x000B8000, 0x00008000 },
    { 0x000C3A09, 0x0000001C },
    { 0x000C3A41, 0x00000020 }
};

Hag::Testing::Mock::MemoryAccess SetVideoModeInternalsTest_memoryAccess3[] =
{
    { 0x000A0000, 0x00002000 },
    { 0x000A03A0, 0x00000010 },
    { 0x000A0440, 0x00000010 },
    { 0x000A0560, 0x00000010 },
    { 0x000A05A0, 0x00000010 },
    { 0x000A09A0, 0x00000010 },
    { 0x000A0A80, 0x00000010 },
    { 0x000A0AE0, 0x00000010 },
    { 0x000A0B40, 0x00000010 },
    { 0x000A0B60, 0x00000010 },
    { 0x000A0BA0, 0x00000010 },
    { 0x000A0DA0, 0x00000010 },
    { 0x000A0EE0, 0x00000010 },
    { 0x000A1220, 0x00000010 },
    { 0x000A13A0, 0x00000010 },
    { 0x000A13C0, 0x00000010 },
    { 0x000A1E20, 0x00000010 },
    { 0x000A1EC0, 0x00000010 },
    { 0x000B0000, 0x00008000 },
    { 0x000C3A09, 0x0000001C },
    { 0x000C3A41, 0x00000020 }
};

Hag::Testing::Mock::MemoryAccess SetVideoModeInternalsTest_memoryAccess4[] =
{
    { 0x000A0000, 0x00010000 },
    { 0x000C3A09, 0x0000001C },
    { 0x000C3A41, 0x00000020 }
};

Hag::Testing::Mock::MemoryAccess SetVideoModeInternalsTest_memoryAccess5[] =
{
    { 0x000C3A09, 0x0000001C },
    { 0x000C3A41, 0x00000020 }
};

Hag::Testing::Mock::MemoryAccess SetVideoModeInternalsTest_memoryAccess6[] =
{
    { 0x000A0000, 0x00002000 },
    { 0x000B8000, 0x00008000 },
    { 0x000C3A09, 0x0000001C },
    { 0x000C3A41, 0x00000020 }
};

Hag::Testing::Mock::MemoryAccess* SetVideoModeInternalsTest_memoryAccess[] =
{
    SetVideoModeInternalsTest_memoryAccess0,     //0
    SetVideoModeInternalsTest_memoryAccess1,     //1
    SetVideoModeInternalsTest_memoryAccess1,     //2
    SetVideoModeInternalsTest_memoryAccess1,     //3
    SetVideoModeInternalsTest_memoryAccess2,     //4
    SetVideoModeInternalsTest_memoryAccess2,     //5
    SetVideoModeInternalsTest_memoryAccess2,     //6
    SetVideoModeInternalsTest_memoryAccess3,     //7
    SetVideoModeInternalsTest_memoryAccess4,     //8
    SetVideoModeInternalsTest_memoryAccess5,     //9
    SetVideoModeInternalsTest_memoryAccess4,     //10
    SetVideoModeInternalsTest_memoryAccess5,     //11
    SetVideoModeInternalsTest_memoryAccess5,     //12
    SetVideoModeInternalsTest_memoryAccess4,     //13
    SetVideoModeInternalsTest_memoryAccess4,     //14
    SetVideoModeInternalsTest_memoryAccess4,     //15
    SetVideoModeInternalsTest_memoryAccess4,     //16
    SetVideoModeInternalsTest_memoryAccess4,     //17
    SetVideoModeInternalsTest_memoryAccess4,     //18
    SetVideoModeInternalsTest_memoryAccess4,     //19
    SetVideoModeInternalsTest_memoryAccess5,     //20
    SetVideoModeInternalsTest_memoryAccess5,     //21
    SetVideoModeInternalsTest_memoryAccess5,     //22
    SetVideoModeInternalsTest_memoryAccess5,     //23
    SetVideoModeInternalsTest_memoryAccess5,     //24
    SetVideoModeInternalsTest_memoryAccess5,     //25
    SetVideoModeInternalsTest_memoryAccess5,     //26
    SetVideoModeInternalsTest_memoryAccess5,     //27
    SetVideoModeInternalsTest_memoryAccess6,     //28
    SetVideoModeInternalsTest_memoryAccess1,     //29
    SetVideoModeInternalsTest_memoryAccess5,     //30
    SetVideoModeInternalsTest_memoryAccess5,     //31
    SetVideoModeInternalsTest_memoryAccess5,     //32
    SetVideoModeInternalsTest_memoryAccess5,     //33
    SetVideoModeInternalsTest_memoryAccess5,     //34
    SetVideoModeInternalsTest_memoryAccess5,     //35
    SetVideoModeInternalsTest_memoryAccess5,     //36
    SetVideoModeInternalsTest_memoryAccess5,     //37
    SetVideoModeInternalsTest_memoryAccess5,     //38
    SetVideoModeInternalsTest_memoryAccess5,     //39
    SetVideoModeInternalsTest_memoryAccess5,     //40
    SetVideoModeInternalsTest_memoryAccess5,     //41
    SetVideoModeInternalsTest_memoryAccess5,     //42
    SetVideoModeInternalsTest_memoryAccess5,     //43
    SetVideoModeInternalsTest_memoryAccess5,     //44
    SetVideoModeInternalsTest_memoryAccess5,     //45
    SetVideoModeInternalsTest_memoryAccess5,     //46
    SetVideoModeInternalsTest_memoryAccess5,     //47
    SetVideoModeInternalsTest_memoryAccess5,     //48
    SetVideoModeInternalsTest_memoryAccess5,     //49
};

int SetVideoModeInternalsTest_memoryAccessCount[] =
{
    sizeof(SetVideoModeInternalsTest_memoryAccess0) / sizeof(Hag::Testing::Mock::MemoryAccess),  //0
    sizeof(SetVideoModeInternalsTest_memoryAccess1) / sizeof(Hag::Testing::Mock::MemoryAccess),  //1
    sizeof(SetVideoModeInternalsTest_memoryAccess1) / sizeof(Hag::Testing::Mock::MemoryAccess),  //2
    sizeof(SetVideoModeInternalsTest_memoryAccess1) / sizeof(Hag::Testing::Mock::MemoryAccess),  //3
    sizeof(SetVideoModeInternalsTest_memoryAccess2) / sizeof(Hag::Testing::Mock::MemoryAccess),  //4
    sizeof(SetVideoModeInternalsTest_memoryAccess2) / sizeof(Hag::Testing::Mock::MemoryAccess),  //5
    sizeof(SetVideoModeInternalsTest_memoryAccess2) / sizeof(Hag::Testing::Mock::MemoryAccess),  //6
    sizeof(SetVideoModeInternalsTest_memoryAccess3) / sizeof(Hag::Testing::Mock::MemoryAccess),  //7
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //8
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //9
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //10
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //11
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //12
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //13
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //14
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //15
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //16
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //17
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //18
    sizeof(SetVideoModeInternalsTest_memoryAccess4) / sizeof(Hag::Testing::Mock::MemoryAccess),  //19
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //20
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //21
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //22
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //23
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //24
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //25
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //26
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //27
    sizeof(SetVideoModeInternalsTest_memoryAccess6) / sizeof(Hag::Testing::Mock::MemoryAccess),  //28
    sizeof(SetVideoModeInternalsTest_memoryAccess1) / sizeof(Hag::Testing::Mock::MemoryAccess),  //29
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //30
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //31
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //32
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //33
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //34
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //35
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //36
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //37
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //38
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //39
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //40
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //41
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //42
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //43
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //44
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //45
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //46
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //47
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //48
    sizeof(SetVideoModeInternalsTest_memoryAccess5) / sizeof(Hag::Testing::Mock::MemoryAccess),  //49
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                            S3 Trio64 86C764X rev 20                                        //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Hag::Testing::Mock::PortAndValue S3_86C764x20_DefaultPortValues[] =
{
    { 0x03C2, 0x70 },
    { 0x03C4, 0xFF },
    { 0x03C5, 0xFF },
    { 0x03CA, 0x00 },
    { 0x03CC, 0x67 },
    { 0x03BA, 0xFF },
    { 0x03DA, 0x01 },
    { 0x03C3, 0xFF },
    { 0x03C6, 0xFF },
    { 0x03C7, 0x03 },
    { 0x03C8, 0x00 },
    { 0x03C9, 0x00 },
    { 0x03D4, 0xFF },
    { 0x03D5, 0xFF },
    { 0x0102, 0xFF },
    { 0x46E8, 0xFF },
    { 0x42E8, 0xFF },
    { 0x4AE8, 0xFF },
    { 0x82E8, 0xFF },
    { 0x82E9, 0xFF },
    { 0x82EA, 0xFF },
    { 0x86E8, 0xFF },
    { 0x86E9, 0xFF },
    { 0x86EA, 0xFF },
    { 0x8AE8, 0xFF },
    { 0x8AEA, 0xFF },
    { 0x8EE8, 0xFF },
    { 0x8EEA, 0xFF },
    { 0x92E8, 0xFF },
    { 0x92EA, 0xFF },
    { 0x6EA8, 0xFF },
    { 0x96E8, 0xFF },
    { 0x96E9, 0xFF },
    { 0x96EA, 0xFF },
    { 0x9AE8, 0x00 },
    { 0x9AE9, 0x00 },
    { 0x9AE8, 0x00 },
    { 0x9AEA, 0xFF },
    { 0x9EE8, 0xFF },
    { 0xA2E8, 0x00 },
    { 0xA6E8, 0x00 },
    { 0xA6E9, 0x00 },
    { 0xAAE8, 0x00 },
    { 0xAAE9, 0x00 },
    { 0xAEE8, 0x00 },
    { 0xB2E8, 0xFF },
    { 0xB6E8, 0xFF },
    { 0xBAE8, 0xFF },
    { 0xBAE9, 0xFF },
    { 0xBEE8, 0x00 },
    { 0xBEE9, 0x00 },
    { 0xBEE8, 0xFF },
    { 0xE2E8, 0xFF },
    { 0xE2EA, 0xFF },
    { 0xEAE8, 0xFF },
    { 0xEAEA, 0xFF }
};

uint16_t S3_86C764x20_DefaultPortValuesCount = sizeof(S3_86C764x20_DefaultPortValues) / sizeof(Hag::Testing::Mock::PortAndValue);

uint8_t S3_86C764x20_AttributeControllerRegisters[] =
{
    0x00,
    0x01,
    0x02,
    0x03,
    0x04,
    0x05,
    0x14,
    0x07,
    0x38,
    0x39,
    0x3A,
    0x3B,
    0x3C,
    0x3D,
    0x3E,
    0x3F,
    0x0C,
    0x00,
    0x0F,
    0x08,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00
};

uint8_t S3_86C764x20_RAMDACRegisters[] =
{
    0x00, 0x00, 0x00, //0
    0x00, 0x00, 0x2A, //1
    0x00, 0x2A, 0x00, //2
    0x00, 0x2A, 0x2A, //3
    0x2A, 0x00, 0x00, //4
    0x2A, 0x00, 0x2A, //5
    0x2A, 0x2A, 0x00, //6
    0x2A, 0x2A, 0x2A, //7
    0x00, 0x00, 0x15, //8
    0x00, 0x00, 0x3F, //9
    0x00, 0x2A, 0x15, //10
    0x00, 0x2A, 0x3F, //11
    0x2A, 0x00, 0x15, //12
    0x2A, 0x00, 0x3F, //13
    0x2A, 0x2A, 0x15, //14
    0x2A, 0x2A, 0x3F, //15
    0x00, 0x15, 0x00, //16
    0x00, 0x15, 0x2A, //17
    0x00, 0x3F, 0x00, //18
    0x00, 0x3F, 0x2A, //19
    0x2A, 0x15, 0x00, //20
    0x2A, 0x15, 0x2A, //21
    0x2A, 0x3F, 0x00, //22
    0x2A, 0x3F, 0x2A, //23
    0x00, 0x15, 0x15, //24
    0x00, 0x15, 0x3F, //25
    0x00, 0x3F, 0x15, //26
    0x00, 0x3F, 0x3F, //27
    0x2A, 0x15, 0x15, //28
    0x2A, 0x15, 0x3F, //29
    0x2A, 0x3F, 0x15, //30
    0x2A, 0x3F, 0x3F, //31
    0x15, 0x00, 0x00, //32
    0x15, 0x00, 0x2A, //33
    0x15, 0x2A, 0x00, //34
    0x15, 0x2A, 0x2A, //35
    0x3F, 0x00, 0x00, //36
    0x3F, 0x00, 0x2A, //37
    0x3F, 0x2A, 0x00, //38
    0x3F, 0x2A, 0x2A, //39
    0x15, 0x00, 0x15, //40
    0x15, 0x00, 0x3F, //41
    0x15, 0x2A, 0x15, //42
    0x15, 0x2A, 0x3F, //43
    0x3F, 0x00, 0x15, //44
    0x3F, 0x00, 0x3F, //45
    0x3F, 0x2A, 0x15, //46
    0x3F, 0x2A, 0x3F, //47
    0x15, 0x15, 0x00, //48
    0x15, 0x15, 0x2A, //49
    0x15, 0x3F, 0x00, //50
    0x15, 0x3F, 0x2A, //51
    0x3F, 0x15, 0x00, //52
    0x3F, 0x15, 0x2A, //53
    0x3F, 0x3F, 0x00, //54
    0x3F, 0x3F, 0x2A, //55
    0x15, 0x15, 0x15, //56
    0x15, 0x15, 0x3F, //57
    0x15, 0x3F, 0x15, //58
    0x15, 0x3F, 0x3F, //59
    0x3F, 0x15, 0x15, //60
    0x3F, 0x15, 0x3F, //61
    0x3F, 0x3F, 0x15, //62
    0x3F, 0x3F, 0x3F, //63
    0x00, 0x00, 0x00, //64
    0x00, 0x00, 0x00, //65
    0x00, 0x00, 0x00, //66
    0x00, 0x00, 0x00, //67
    0x00, 0x00, 0x00, //68
    0x00, 0x00, 0x00, //69
    0x00, 0x00, 0x00, //70
    0x00, 0x00, 0x00, //71
    0x00, 0x00, 0x00, //72
    0x00, 0x00, 0x00, //73
    0x00, 0x00, 0x00, //74
    0x00, 0x00, 0x00, //75
    0x00, 0x00, 0x00, //76
    0x00, 0x00, 0x00, //77
    0x00, 0x00, 0x00, //78
    0x00, 0x00, 0x00, //79
    0x00, 0x00, 0x00, //80
    0x00, 0x00, 0x00, //81
    0x00, 0x00, 0x00, //82
    0x00, 0x00, 0x00, //83
    0x00, 0x00, 0x00, //84
    0x00, 0x00, 0x00, //85
    0x00, 0x00, 0x00, //86
    0x00, 0x00, 0x00, //87
    0x00, 0x00, 0x00, //88
    0x00, 0x00, 0x00, //89
    0x00, 0x00, 0x00, //90
    0x00, 0x00, 0x00, //91
    0x00, 0x00, 0x00, //92
    0x00, 0x00, 0x00, //93
    0x00, 0x00, 0x00, //94
    0x00, 0x00, 0x00, //95
    0x00, 0x00, 0x00, //96
    0x00, 0x00, 0x00, //97
    0x00, 0x00, 0x00, //98
    0x00, 0x00, 0x00, //99
    0x00, 0x00, 0x00, //100
    0x00, 0x00, 0x00, //101
    0x00, 0x00, 0x00, //102
    0x00, 0x00, 0x00, //103
    0x00, 0x00, 0x00, //104
    0x00, 0x00, 0x00, //105
    0x00, 0x00, 0x00, //106
    0x00, 0x00, 0x00, //107
    0x00, 0x00, 0x00, //108
    0x00, 0x00, 0x00, //109
    0x00, 0x00, 0x00, //110
    0x00, 0x00, 0x00, //111
    0x00, 0x00, 0x00, //112
    0x00, 0x00, 0x00, //113
    0x00, 0x00, 0x00, //114
    0x00, 0x00, 0x00, //115
    0x00, 0x00, 0x00, //116
    0x00, 0x00, 0x00, //117
    0x00, 0x00, 0x00, //118
    0x00, 0x00, 0x00, //119
    0x00, 0x00, 0x00, //120
    0x00, 0x00, 0x00, //121
    0x00, 0x00, 0x00, //122
    0x00, 0x00, 0x00, //123
    0x00, 0x00, 0x00, //124
    0x00, 0x00, 0x00, //125
    0x00, 0x00, 0x00, //126
    0x00, 0x00, 0x00, //127
    0x00, 0x00, 0x00, //128
    0x00, 0x00, 0x00, //129
    0x00, 0x00, 0x00, //130
    0x00, 0x00, 0x00, //131
    0x00, 0x00, 0x00, //132
    0x00, 0x00, 0x00, //133
    0x00, 0x00, 0x00, //134
    0x00, 0x00, 0x00, //135
    0x00, 0x00, 0x00, //136
    0x00, 0x00, 0x00, //137
    0x00, 0x00, 0x00, //138
    0x00, 0x00, 0x00, //139
    0x00, 0x00, 0x00, //140
    0x00, 0x00, 0x00, //141
    0x00, 0x00, 0x00, //142
    0x00, 0x00, 0x00, //143
    0x00, 0x00, 0x00, //144
    0x00, 0x00, 0x00, //145
    0x00, 0x00, 0x00, //146
    0x00, 0x00, 0x00, //147
    0x00, 0x00, 0x00, //148
    0x00, 0x00, 0x00, //149
    0x00, 0x00, 0x00, //150
    0x00, 0x00, 0x00, //151
    0x00, 0x00, 0x00, //152
    0x00, 0x00, 0x00, //153
    0x00, 0x00, 0x00, //154
    0x00, 0x00, 0x00, //155
    0x00, 0x00, 0x00, //156
    0x00, 0x00, 0x00, //157
    0x00, 0x00, 0x00, //158
    0x00, 0x00, 0x00, //159
    0x00, 0x00, 0x00, //160
    0x00, 0x00, 0x00, //161
    0x00, 0x00, 0x00, //162
    0x00, 0x00, 0x00, //163
    0x00, 0x00, 0x00, //164
    0x00, 0x00, 0x00, //165
    0x00, 0x00, 0x00, //166
    0x00, 0x00, 0x00, //167
    0x00, 0x00, 0x00, //168
    0x00, 0x00, 0x00, //169
    0x00, 0x00, 0x00, //170
    0x00, 0x00, 0x00, //171
    0x00, 0x00, 0x00, //172
    0x00, 0x00, 0x00, //173
    0x00, 0x00, 0x00, //174
    0x00, 0x00, 0x00, //175
    0x00, 0x00, 0x00, //176
    0x00, 0x00, 0x00, //177
    0x00, 0x00, 0x00, //178
    0x00, 0x00, 0x00, //179
    0x00, 0x00, 0x00, //180
    0x00, 0x00, 0x00, //181
    0x00, 0x00, 0x00, //182
    0x00, 0x00, 0x00, //183
    0x00, 0x00, 0x00, //184
    0x00, 0x00, 0x00, //185
    0x00, 0x00, 0x00, //186
    0x00, 0x00, 0x00, //187
    0x00, 0x00, 0x00, //188
    0x00, 0x00, 0x00, //189
    0x00, 0x00, 0x00, //190
    0x00, 0x00, 0x00, //191
    0x00, 0x00, 0x00, //192
    0x00, 0x00, 0x00, //193
    0x00, 0x00, 0x00, //194
    0x00, 0x00, 0x00, //195
    0x00, 0x00, 0x00, //196
    0x00, 0x00, 0x00, //197
    0x00, 0x00, 0x00, //198
    0x00, 0x00, 0x00, //199
    0x00, 0x00, 0x00, //200
    0x00, 0x00, 0x00, //201
    0x00, 0x00, 0x00, //202
    0x00, 0x00, 0x00, //203
    0x00, 0x00, 0x00, //204
    0x00, 0x00, 0x00, //205
    0x00, 0x00, 0x00, //206
    0x00, 0x00, 0x00, //207
    0x00, 0x00, 0x00, //208
    0x00, 0x00, 0x00, //209
    0x00, 0x00, 0x00, //210
    0x00, 0x00, 0x00, //211
    0x00, 0x00, 0x00, //212
    0x00, 0x00, 0x00, //213
    0x00, 0x00, 0x00, //214
    0x00, 0x00, 0x00, //215
    0x00, 0x00, 0x00, //216
    0x00, 0x00, 0x00, //217
    0x00, 0x00, 0x00, //218
    0x00, 0x00, 0x00, //219
    0x00, 0x00, 0x00, //220
    0x00, 0x00, 0x00, //221
    0x00, 0x00, 0x00, //222
    0x00, 0x00, 0x00, //223
    0x00, 0x00, 0x00, //224
    0x00, 0x00, 0x00, //225
    0x00, 0x00, 0x00, //226
    0x00, 0x00, 0x00, //227
    0x00, 0x00, 0x00, //228
    0x00, 0x00, 0x00, //229
    0x00, 0x00, 0x00, //230
    0x00, 0x00, 0x00, //231
    0x00, 0x00, 0x00, //232
    0x00, 0x00, 0x00, //233
    0x00, 0x00, 0x00, //234
    0x00, 0x00, 0x00, //235
    0x00, 0x00, 0x00, //236
    0x00, 0x00, 0x00, //237
    0x00, 0x00, 0x00, //238
    0x00, 0x00, 0x00, //239
    0x00, 0x00, 0x00, //240
    0x00, 0x00, 0x00, //241
    0x00, 0x00, 0x00, //242
    0x00, 0x00, 0x00, //243
    0x00, 0x00, 0x00, //244
    0x00, 0x00, 0x00, //245
    0x00, 0x00, 0x00, //246
    0x00, 0x00, 0x00, //247
    0x00, 0x00, 0x00, //248
    0x00, 0x00, 0x00, //249
    0x00, 0x00, 0x00, //250
    0x00, 0x00, 0x00, //251
    0x00, 0x00, 0x00, //252
    0x00, 0x00, 0x00, //253
    0x00, 0x00, 0x00, //254
    0x00, 0x00, 0x00 //255
};

uint8_t S3_86C764x20_SequencerControllerRegisters[] =
{
    0x00,
    0x00,
    0x03,
    0x00,
    0x07,
    0x00,
    0x00,
    0x00,
    0x06,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00
};

uint8_t S3_86C764x20_GraphicsControllerRegisters[] =
{
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x10,
    0x0E,
    0x0F,
    0xFF,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00
};

uint8_t S3_86C764x20_CRTControllerRegisters[] =
{
    0x5F,   //0
    0x4F,   //1
    0x50,   //2
    0x82,   //3
    0x55,   //4
    0x81,   //5
    0xBF,   //6
    0x1F,   //7
    0x00,   //8
    0x4F,   //9
    0x0D,   //10
    0x0E,   //11
    0x00,   //12
    0x00,   //13
    0x07,   //14
    0x80,   //15
    0x9C,   //16
    0x0E,   //17
    0x8F,   //18
    0x28,   //19
    0x1F,   //20
    0x96,   //21
    0xB9,   //22
    0xA3,   //23
    0xFF,   //24
    0x00,   //25
    0x00,   //26
    0x00,   //27
    0x00,   //28
    0x00,   //29
    0x00,   //30
    0x00,   //31
    0x00,   //32
    0x00,   //33
    0x00,   //34
    0x00,   //35
    0x20,   //36
    0x00,   //37
    0x20,   //38
    0x00,   //39
    0x00,   //40
    0x00,   //41
    0x00,   //42
    0x00,   //43
    0x00,   //44
    0x88,   //45
    0x11,   //46
    0x00,   //47
    0xE1,   //48
    0x05,   //49
    0x00,   //50
    0x00,   //51
    0x00,   //52
    0x00,   //53
    0x9A,   //54
    0x2B,   //55
    0x48,   //56
    0xA5,   //57
    0x05,   //58
    0x00,   //59
    0x00,   //60
    0x00,   //61
    0x00,   //62
    0x00,   //63
    0x01,   //64
    0x00,   //65.0x88
    0x0D,   //66
    0x00,   //67
    0x00,   //68
    0xA0,   //69
    0x00,   //70
    0x00,   //71
    0x00,   //72
    0x00,   //73
    0x00,   //74
    0x00,   //75
    0x00,   //76
    0x00,   //77
    0x00,   //78
    0x00,   //79
    0x00,   //80
    0x00,   //81
    0x00,   //82.0x80
    0x00,   //83
    0x00,   //84
    0x00,   //85
    0x00,   //86
    0x00,   //87
    0x03,   //88
    0xC0,   //89
    0x00,   //90
    0x00,   //91
    0x00,   //92
    0x00,   //93
    0x00,   //94
    0x00,   //95
    0x00,   //96
    0x00,   //97
    0x00,   //98
    0x00,   //99
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0xC0,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,   //
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00
};

uint8_t S3_86C764x20_BDA[] =
{
    0xF8, 0x03, 0xF8, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x78, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x9F,
    0x27, 0x44, 0x00, 0x7A, 0x02, 0x80, 0x00, 0x20,
    0x00, 0x00, 0x2A, 0x00, 0x2A, 0x00, 0x65, 0x12,
    0x6D, 0x32, 0x64, 0x20, 0x6D, 0x32, 0x70, 0x19,
    0x0D, 0x1C, 0x08, 0x0E, 0x08, 0x0E, 0x64, 0x20,
    0x69, 0x17, 0x72, 0x13, 0x0D, 0x1C, 0x2E, 0x34,
    0x2E, 0x34, 0x5C, 0x2B, 0x6D, 0x32, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0x50, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0x0E, 0x00, 0xD4, 0x03, 0x29, 0x30, 0xDB,
    0x09, 0xD9, 0x07, 0xFF, 0xCB, 0xD0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
    0x14, 0x14, 0x14, 0x14, 0x01, 0x01, 0x01, 0x01,
    0x1E, 0x00, 0x3E, 0x00, 0x18, 0x10, 0x00, 0x60,
    0x09, 0x11, 0x0B, 0x00, 0x50, 0x00, 0x00, 0x00,
    0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x10, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xC6, 0x56, 0x00, 0xC0, 0x00,
    0x09, 0x3A, 0x00, 0xC0, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x9B, 0x00, 0x04, 0x00,
    0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xDC, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
    0x07, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xA5, 0xFF, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00
};

uint8_t S3_86C764x20_BIOS[] =
{
	0x55, 0xAA, 0x40, 0xEB, 0x04, 0x37, 0x34, 0x30, 0x30, 0xE9, 0x80, 0x14,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x49, 0x42, 0x4D, 0x20, 0x56, 0x47,
	0x41, 0x20, 0x43, 0x6F, 0x6D, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6C, 0x65,
	0x20, 0x42, 0x49, 0x4F, 0x53, 0x2E, 0x20, 0x00, 0xBB, 0x66, 0xE8, 0x01,
	0x27, 0x01, 0x11, 0x00, 0x00, 0xFF, 0x00, 0x03, 0x50, 0x68, 0x6F, 0x65,
	0x6E, 0x69, 0x78, 0x20, 0x53, 0x33, 0x20, 0x54, 0x52, 0x49, 0x4F, 0x36,
	0x34, 0x20, 0x45, 0x6E, 0x68, 0x61, 0x6E, 0x63, 0x65, 0x64, 0x20, 0x56,
	0x47, 0x41, 0x20, 0x42, 0x49, 0x4F, 0x53, 0x2E, 0x20, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6F, 0x6E, 0x20, 0x31, 0x2E, 0x35, 0x2D, 0x30, 0x37, 0x20,
	0x45, 0x44, 0x4F, 0x0D, 0x0A, 0x43, 0x6F, 0x70, 0x79, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x20, 0x31, 0x39, 0x38, 0x37, 0x2D, 0x31, 0x39, 0x39, 0x32,
	0x20, 0x50, 0x68, 0x6F, 0x65, 0x6E, 0x69, 0x78, 0x20, 0x54, 0x65, 0x63,
	0x68, 0x6E, 0x6F, 0x6C, 0x6F, 0x67, 0x69, 0x65, 0x73, 0x20, 0x4C, 0x74,
	0x64, 0x2E, 0x0D, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x43, 0x6F, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x31, 0x39,
	0x39, 0x32, 0x2D, 0x31, 0x39, 0x39, 0x33, 0x20, 0x53, 0x33, 0x20, 0x49,
	0x6E, 0x63, 0x6F, 0x72, 0x70, 0x6F, 0x72, 0x61, 0x74, 0x65, 0x64, 0x0D,
	0x0A, 0x41, 0x6C, 0x6C, 0x20, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x20,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x0D, 0x0A, 0x50, 0x47,
	0x39, 0x35, 0x31, 0x32, 0x31, 0x35, 0x2E, 0x30, 0x31, 0x20, 0x20, 0x20,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x30, 0x39, 0x2F, 0x32, 0x37, 0x2F, 0x39, 0x35,
	0x31, 0x32, 0x2F, 0x31, 0x34, 0x2F, 0x39, 0x35, 0x01, 0x05, 0x07, 0x09,
	0x02, 0x80, 0xD0, 0xF0, 0x80, 0x07, 0x0C, 0x20, 0x02, 0x0B, 0x3A, 0x1B,
	0x3A, 0x45, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x20, 0x57, 0xFF, 0x7F, 0xA9, 0x3A, 0x00, 0x00, 0x22, 0x05, 0x00,
	0x00, 0xCC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71,
	0x08, 0x00, 0x01, 0x02, 0x1A, 0x38, 0x48, 0x39, 0xA5, 0x31, 0x05, 0x50,
	0x00, 0x51, 0x00, 0x53, 0x00, 0x54, 0x38, 0x55, 0x00, 0x58, 0x03, 0x5D,
	0x00, 0x5E, 0x00, 0x60, 0x07, 0x61, 0x80, 0x62, 0xA1, 0x67, 0x00, 0x69,
	0x00, 0x6A, 0x00, 0x32, 0x40, 0x33, 0x00, 0x34, 0x00, 0x35, 0x00, 0x3A,
	0x05, 0x3B, 0x5A, 0x3C, 0x10, 0x43, 0x00, 0x45, 0x00, 0x03, 0x08, 0x06,
	0x0B, 0x00, 0x14, 0x00, 0x50, 0x43, 0x49, 0x52, 0x33, 0x53, 0x11, 0x88,
	0x00, 0x00, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x00, 0x80, 0x00, 0x00, 0xB5, 0x03, 0x93, 0x03, 0x02, 0xFF, 0xFF, 0x50,
	0x3C, 0x55, 0x75, 0x03, 0x80, 0xE3, 0x3F, 0x58, 0xC3, 0xB8, 0x03, 0x00,
	0xCD, 0x10, 0xE8, 0xA4, 0x0D, 0x52, 0x80, 0xC2, 0x06, 0xEC, 0xBA, 0xC0,
	0x03, 0xB0, 0x07, 0xEE, 0xB0, 0x00, 0xEE, 0x5A, 0xB0, 0x11, 0xE8, 0xF3,
	0x43, 0x80, 0xE4, 0x7F, 0xEF, 0xB8, 0x02, 0xFF, 0xEF, 0xB8, 0x15, 0xFF,
	0xEF, 0xE8, 0xB7, 0x45, 0xE8, 0x3E, 0x45, 0xE8, 0x01, 0x00, 0xC3, 0x33,
	0xC9, 0xE8, 0x61, 0x00, 0x75, 0x12, 0xB9, 0x18, 0x00, 0xE8, 0x59, 0x00,
	0x74, 0x49, 0xB9, 0x00, 0x18, 0xE8, 0x51, 0x00, 0x74, 0x2C, 0xEB, 0x10,
	0xB9, 0x18, 0x00, 0xE8, 0x47, 0x00, 0x75, 0x35, 0xB9, 0x00, 0x18, 0xE8,
	0x3F, 0x00, 0x75, 0x1A, 0xE8, 0x33, 0x0D, 0x3C, 0x02, 0x7F, 0x07, 0x80,
	0x0E, 0x89, 0x04, 0x02, 0xEB, 0x21, 0x80, 0x0E, 0x87, 0x04, 0x08, 0x80,
	0x0E, 0x89, 0x04, 0x06, 0xEB, 0x15, 0xE8, 0x19, 0x0D, 0x3C, 0x02, 0x7F,
	0x07, 0x80, 0x0E, 0x89, 0x04, 0x02, 0xEB, 0x05, 0x80, 0x0E, 0x89, 0x04,
	0x06, 0x33, 0xDB, 0x9C, 0x33, 0xDB, 0x33, 0xC9, 0x33, 0xD2, 0xB8, 0x10,
	0x10, 0xCD, 0x10, 0x9D, 0xC3, 0x53, 0x33, 0xDB, 0x32, 0xF6, 0xB8, 0x10,
	0x10, 0xCD, 0x10, 0x8B, 0x16, 0x63, 0x04, 0x80, 0xC2, 0x06, 0x33, 0xC9,
	0xEC, 0xA8, 0x08, 0xE1, 0xFB, 0x74, 0x0F, 0x33, 0xC9, 0xEC, 0xE0, 0xFD,
	0x75, 0x08, 0xBA, 0xC2, 0x03, 0xEC, 0xA8, 0x10, 0x5B, 0xC3, 0x2A, 0xC0,
	0x5B, 0xC3, 0x50, 0x8A, 0xD8, 0x80, 0xFB, 0x13, 0x76, 0x09, 0xB0, 0x32,
	0xE8, 0x3D, 0x43, 0x80, 0xE4, 0xBF, 0xEF, 0xB0, 0x6B, 0xE8, 0x34, 0x43,
	0xB0, 0x59, 0xEF, 0xB0, 0x6C, 0xE8, 0x2C, 0x43, 0x80, 0xE4, 0x80, 0xB0,
	0x5A, 0xEF, 0x58, 0xC3, 0x33, 0xDB, 0x8A, 0xDC, 0x80, 0xE3, 0x1F, 0x50,
	0xBE, 0x93, 0x03, 0xE8, 0x98, 0x0C, 0x3C, 0x03, 0x75, 0x03, 0xBE, 0xB7,
	0x03, 0x58, 0xD0, 0xE3, 0x03, 0xF3, 0xE8, 0xA4, 0x0C, 0xE8, 0x07, 0x00,
	0x80, 0xE4, 0x20, 0xB0, 0x42, 0xEF, 0xC3, 0x50, 0x52, 0xBA, 0xC4, 0x03,
	0xB8, 0x08, 0x06, 0xEF, 0xB8, 0x12, 0x00, 0x80, 0xFB, 0x22, 0x75, 0x10,
	0xBE, 0xB5, 0x03, 0xB8, 0x1B, 0x00, 0xEF, 0xB0, 0x1A, 0x2E, 0x8A, 0x64,
	0x01, 0xEF, 0xB0, 0x10, 0x2E, 0x8A, 0x64, 0x01, 0xEF, 0xFE, 0xC0, 0x2E,
	0x8A, 0x24, 0xEF, 0xB1, 0x02, 0x80, 0xFB, 0x22, 0x75, 0x0A, 0xB8, 0x12,
	0x49, 0xEF, 0xB8, 0x13, 0x55, 0xEF, 0xB1, 0x03, 0xB8, 0x18, 0x00, 0xEF,
	0xB0, 0x15, 0xE8, 0xB7, 0x42, 0x80, 0xE4, 0xEC, 0xEF, 0x0A, 0xE1, 0xEF,
	0x5A, 0x58, 0xC3, 0x28, 0x61, 0x55, 0x49, 0x2B, 0x42, 0x7C, 0x24, 0x1A,
	0x40, 0x29, 0x22, 0x63, 0x48, 0x30, 0x42, 0x6F, 0x24, 0x6B, 0x24, 0x2B,
	0x22, 0x33, 0x61, 0x2D, 0x21, 0x47, 0x42, 0x13, 0x20, 0x26, 0x21, 0x51,
	0x44, 0x79, 0x46, 0x28, 0x61, 0x55, 0x49, 0x2B, 0x42, 0x7C, 0x24, 0x1A,
	0x40, 0x29, 0x22, 0x63, 0x48, 0x30, 0x42, 0x2D, 0x03, 0x50, 0x07, 0x2B,
	0x22, 0x2A, 0x43, 0x2D, 0x21, 0x23, 0x22, 0x13, 0x20, 0x26, 0x21, 0x51,
	0x44, 0x57, 0x1E, 0x8A, 0x1E, 0x49, 0x04, 0x0E, 0x1F, 0x8D, 0x36, 0x82,
	0x4D, 0xE8, 0x9F, 0x48, 0x8B, 0x74, 0x01, 0x8B, 0x5C, 0x01, 0x80, 0x7C,
	0x0B, 0x00, 0x75, 0x05, 0xD1, 0xE3, 0xEB, 0x0A, 0x90, 0x80, 0x7C, 0x0B,
	0x03, 0x75, 0x03, 0xC1, 0xE3, 0x02, 0xC1, 0xEB, 0x03, 0xC0, 0xE7, 0x04,
	0xB0, 0x13, 0x8A, 0xE3, 0xEF, 0xB0, 0x51, 0x8A, 0xE7, 0xEF, 0xB8, 0x3A,
	0x15, 0x80, 0x7C, 0x09, 0x08, 0x7D, 0x02, 0xB4, 0x05, 0xEF, 0x1F, 0x5F,
	0xB0, 0x31, 0x8A, 0x3E, 0x49, 0x04, 0x80, 0xFF, 0x4A, 0x74, 0x14, 0x80,
	0xFF, 0x4C, 0x74, 0x0F, 0x80, 0xFF, 0x4F, 0x74, 0x0A, 0xF6, 0xC4, 0x10,
	0x75, 0x0A, 0xB4, 0x05, 0xEB, 0x08, 0x90, 0xB4, 0x0F, 0xEB, 0x03, 0x90,
	0xB4, 0x09, 0xEF, 0xB0, 0x50, 0x26, 0x8A, 0x65, 0x04, 0xEF, 0xF6, 0xC4,
	0x02, 0x74, 0x0B, 0x52, 0xBA, 0xCC, 0x03, 0xEC, 0x24, 0x3F, 0xB2, 0xC2,
	0xEE, 0x5A, 0xB8, 0x34, 0x10, 0xEF, 0xB0, 0x54, 0x26, 0x8A, 0x65, 0x05,
	0x26, 0x8A, 0x6D, 0x07, 0x52, 0xE8, 0xE7, 0x0F, 0x8A, 0xFE, 0x5A, 0x80,
	0xFF, 0x01, 0x74, 0x08, 0x26, 0x8A, 0x65, 0x06, 0x26, 0x8A, 0x6D, 0x08,
	0xEF, 0xB0, 0x60, 0x86, 0xEC, 0xEF, 0xB0, 0x5D, 0x26, 0x8A, 0x65, 0x09,
	0xEF, 0x8A, 0xFC, 0x32, 0xC0, 0xE8, 0xAC, 0x41, 0x8A, 0xDC, 0x81, 0xE3,
	0xFF, 0x01, 0x53, 0xD1, 0xEB, 0xB0, 0x3C, 0x8A, 0xE3, 0xEF, 0x5B, 0x83,
	0xEB, 0x07, 0x8A, 0xE3, 0xB0, 0x3B, 0xEF, 0x8A, 0x3E, 0x49, 0x04, 0xB0,
	0x40, 0xE8, 0x8C, 0x41, 0x80, 0xE4, 0xFE, 0x80, 0xCC, 0x01, 0xEF, 0x80,
	0xFF, 0x55, 0x74, 0x3A, 0x80, 0xFF, 0x54, 0x74, 0x35, 0xB0, 0x3A, 0xE8,
	0x76, 0x41, 0xF6, 0xC4, 0x10, 0x75, 0x2B, 0xB0, 0x11, 0xE8, 0x6C, 0x41,
	0x50, 0x80, 0xE4, 0x7F, 0xEF, 0xB0, 0x04, 0xE8, 0x62, 0x41, 0x80, 0xC4,
	0x02, 0xEF, 0xFE, 0xC0, 0xE8, 0x59, 0x41, 0x80, 0xC4, 0x02, 0xEF, 0x80,
	0xFF, 0x4F, 0x75, 0x08, 0xB0, 0x02, 0xE8, 0x4B, 0x41, 0xFE, 0xCC, 0xEF,
	0x58, 0xEF, 0xB0, 0x5E, 0x26, 0x8A, 0x65, 0x0A, 0xEF, 0xB0, 0x67, 0x26,
	0x8A, 0x65, 0x0B, 0xEF, 0x80, 0xFC, 0xD0, 0x75, 0x14, 0xB0, 0x11, 0xE8,
	0x2E, 0x41, 0x50, 0x80, 0xE4, 0x7F, 0xEF, 0xB0, 0x02, 0xE8, 0x24, 0x41,
	0xFE, 0xC4, 0xEF, 0x58, 0xEF, 0xC3, 0x54, 0x31, 0x06, 0x03, 0x02, 0x00,
	0x02, 0x7C, 0x08, 0x55, 0x71, 0x06, 0x33, 0x02, 0x00, 0x02, 0x88, 0x08,
	0x68, 0xB1, 0x06, 0x36, 0x03, 0x00, 0x0E, 0x94, 0x08, 0x69, 0xF1, 0x06,
	0x36, 0x03, 0x00, 0x0E, 0xB8, 0x08, 0x6A, 0x31, 0x07, 0x02, 0x06, 0x00,
	0x06, 0xE8, 0x08, 0x6B, 0x31, 0x07, 0x06, 0x03, 0x00, 0x0E, 0x18, 0x09,
	0x6C, 0x71, 0x07, 0x32, 0x06, 0x00, 0x06, 0x48, 0x09, 0x6D, 0x71, 0x07,
	0x36, 0x07, 0x00, 0x0E, 0x78, 0x09, 0x6E, 0xB1, 0x07, 0x32, 0x06, 0x00,
	0x06, 0x84, 0x09, 0x6F, 0xB1, 0x07, 0x36, 0x03, 0x05, 0x0E, 0xB4, 0x09,
	0x70, 0xF1, 0x06, 0x36, 0x03, 0x01, 0x0E, 0xD8, 0x09, 0x71, 0xF1, 0x06,
	0x36, 0x03, 0x02, 0x0E, 0xD8, 0x09, 0x72, 0xF1, 0x06, 0x36, 0x03, 0x04,
	0x0E, 0xFC, 0x09, 0x73, 0x31, 0x07, 0x06, 0x03, 0x01, 0x0E, 0x20, 0x0A,
	0x74, 0x31, 0x07, 0x06, 0x03, 0x02, 0x0E, 0x20, 0x0A, 0x75, 0x31, 0x07,
	0x06, 0x03, 0x04, 0x0E, 0x44, 0x0A, 0x76, 0x71, 0x07, 0x36, 0x03, 0x01,
	0x0E, 0x74, 0x0A, 0x77, 0x71, 0x07, 0x36, 0x03, 0x02, 0x0E, 0x74, 0x0A,
	0x78, 0x71, 0x07, 0x36, 0x03, 0x04, 0x0E, 0x80, 0x0A, 0x79, 0xB1, 0x07,
	0x36, 0x03, 0x01, 0x0E, 0x8C, 0x0A, 0x7A, 0xB1, 0x07, 0x36, 0x03, 0x02,
	0x0E, 0x8C, 0x0A, 0x7C, 0x31, 0x08, 0x36, 0x03, 0x05, 0x0E, 0x98, 0x0A,
	0x49, 0xF1, 0x06, 0x36, 0x03, 0x00, 0x0E, 0xBC, 0x0A, 0x4A, 0x31, 0x07,
	0x02, 0x07, 0x00, 0x0E, 0xEC, 0x0A, 0x4B, 0x31, 0x07, 0x06, 0x07, 0x00,
	0x0E, 0x1C, 0x0B, 0x4C, 0x71, 0x07, 0x32, 0x07, 0x00, 0x0E, 0x4C, 0x0B,
	0x4D, 0x71, 0x07, 0x36, 0x07, 0x00, 0x0E, 0x7C, 0x0B, 0x4E, 0xF1, 0x07,
	0x36, 0x07, 0x00, 0x0E, 0x88, 0x0B, 0x4F, 0xB1, 0x07, 0x32, 0x07, 0x05,
	0x0E, 0xB8, 0x0B, 0x52, 0xB1, 0x06, 0x36, 0x03, 0x04, 0x0E, 0xC4, 0x0B,
	0xFF, 0x84, 0x2A, 0x08, 0x00, 0x40, 0x01, 0x03, 0x00, 0x02, 0x6F, 0x9A,
	0x83, 0x84, 0x9C, 0x88, 0x1A, 0xBF, 0x1F, 0x00, 0x47, 0x06, 0x07, 0x00,
	0x00, 0x00, 0x00, 0x83, 0x85, 0x58, 0x42, 0x1F, 0x63, 0xBA, 0xA3, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B,
	0x3C, 0x3D, 0x3E, 0x3F, 0x0C, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x90, 0x0E, 0x00, 0xFF, 0x84, 0x18, 0x10, 0x00, 0x20, 0x01, 0x03,
	0x00, 0x02, 0x6F, 0x9A, 0x83, 0x84, 0x9C, 0x88, 0x1A, 0xBF, 0x1F, 0x00,
	0x4F, 0x0D, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x42, 0x1F,
	0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x0C, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x0E, 0x00, 0xFF, 0x50, 0x18, 0x10,
	0x00, 0x10, 0x01, 0x0F, 0x00, 0x0E, 0xEF, 0x5F, 0x4F, 0x50, 0x82, 0x54,
	0x80, 0xBF, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x9C,
	0x8E, 0x8F, 0x50, 0x40, 0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x41, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0x0F,
	0xFF, 0x50, 0x1D, 0x10, 0x00, 0x10, 0x01, 0x0F, 0x00, 0x0E, 0xEF, 0x5F,
	0x4F, 0x50, 0x02, 0x53, 0x9F, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x00, 0xEA, 0x8C, 0xDF, 0x80, 0x60, 0xE7, 0x04, 0xAB, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13,
	0x14, 0x15, 0x16, 0x17, 0x41, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x05, 0x0F, 0xFF, 0x64, 0x4A, 0x08, 0x00, 0xFA, 0x01, 0x0F,
	0x00, 0x0E, 0xEF, 0x7B, 0x63, 0x63, 0x80, 0x67, 0x10, 0x6F, 0xF0, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x58, 0x8A, 0x57, 0x80, 0x00,
	0x57, 0x00, 0xE3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x01, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F, 0xFF, 0x80, 0x2F, 0x10,
	0xFF, 0xFF, 0x01, 0x0F, 0x00, 0x06, 0xEF, 0x9A, 0x7F, 0x7F, 0x9D, 0x81,
	0x17, 0x97, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x80,
	0x84, 0x7F, 0x80, 0x00, 0x80, 0x00, 0xE3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
	0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F,
	0xFF, 0xA0, 0x3F, 0x10, 0x00, 0x01, 0x01, 0x0F, 0x00, 0x06, 0xEF, 0xC0,
	0x9F, 0xA0, 0x83, 0xA4, 0x19, 0x18, 0xB2, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x00, 0x01, 0x85, 0xFF, 0x80, 0x00, 0x00, 0x18, 0xE3, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B,
	0x3C, 0x3D, 0x3E, 0x3F, 0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x0F, 0xFF, 0x90, 0x36, 0x10, 0xFF, 0xFF, 0x01, 0x0F,
	0x00, 0x06, 0xEF, 0xB1, 0x8F, 0x90, 0x14, 0x93, 0x9F, 0x9A, 0xFF, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x70, 0x83, 0x5F, 0x90, 0x60,
	0x6F, 0x8D, 0xEB, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x01, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F, 0xFF, 0xC8, 0x4B, 0x10,
	0xFF, 0xFF, 0x01, 0x0F, 0x00, 0x06, 0x2F, 0x01, 0xC7, 0xC8, 0x81, 0xD3,
	0x13, 0x74, 0xE0, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x58,
	0x00, 0x57, 0x64, 0x00, 0x58, 0x00, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
	0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F,
	0xFF, 0xFF, 0x42, 0x50, 0x54, 0x54, 0x60, 0x60, 0x5D, 0x5E, 0x67, 0xFF,
	0x3B, 0x06, 0x80, 0x02, 0x00, 0x08, 0x08, 0x38, 0x38, 0x00, 0x00, 0x00,
	0x7B, 0x06, 0x80, 0x02, 0x00, 0x08, 0x08, 0x38, 0x38, 0x00, 0x00, 0x00,
	0xBB, 0x06, 0x80, 0x00, 0x40, 0xF8, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xFB, 0x06, 0x80, 0x00, 0x40, 0x88, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xD0, 0x0B, 0x01, 0x0B, 0x40, 0x88, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xE9, 0x0B, 0x02, 0x0B, 0x40, 0x88, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x3B, 0x07, 0x80, 0x06, 0x00, 0x80, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x02, 0x0C, 0x01, 0x02, 0x02, 0x70, 0xF8, 0xFF, 0xFF, 0x08, 0x00, 0x00,
	0x1B, 0x0C, 0x02, 0x04, 0x02, 0x48, 0xF8, 0xFF, 0xFF, 0x08, 0x00, 0x00,
	0x34, 0x0C, 0x03, 0x10, 0x02, 0x48, 0xF8, 0xFF, 0xFF, 0x08, 0x00, 0x00,
	0x3B, 0x07, 0x80, 0x06, 0x80, 0x80, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x02, 0x0C, 0x01, 0x02, 0x82, 0x70, 0xF8, 0xFF, 0xFF, 0x08, 0x00, 0x00,
	0x1B, 0x0C, 0x02, 0x04, 0x82, 0x48, 0xF8, 0xFF, 0xFF, 0x08, 0x00, 0x00,
	0x34, 0x0C, 0x03, 0x10, 0x82, 0x48, 0xF8, 0xFF, 0xFF, 0x08, 0x00, 0x00,
	0x7B, 0x07, 0x80, 0x27, 0x00, 0x60, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x4D, 0x0C, 0x02, 0x0D, 0x00, 0x30, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x66, 0x0C, 0x03, 0x0E, 0x00, 0x10, 0xC8, 0xFF, 0xFF, 0x00, 0x00, 0x01,
	0x7F, 0x0C, 0x04, 0x0A, 0x02, 0x10, 0xC0, 0xFF, 0xFF, 0x00, 0x00, 0x01,
	0x7B, 0x07, 0x80, 0x27, 0x00, 0x60, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x4D, 0x0C, 0x02, 0x0D, 0x00, 0x30, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x66, 0x0C, 0x03, 0x0E, 0x00, 0x10, 0x48, 0xFF, 0x48, 0x00, 0x00, 0x01,
	0x7F, 0x0C, 0x04, 0x0A, 0x02, 0x10, 0x48, 0xFF, 0xFF, 0x00, 0x00, 0x01,
	0xBB, 0x07, 0x82, 0x2E, 0x00, 0x38, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xBB, 0x07, 0x82, 0x2E, 0xC0, 0x50, 0x50, 0xFF, 0xFF, 0x00, 0x00, 0x01,
	0x98, 0x0C, 0x04, 0x0C, 0xC0, 0x28, 0x28, 0xFF, 0xFF, 0x00, 0x55, 0x10,
	0xB1, 0x0C, 0x05, 0x09, 0xC0, 0x20, 0x20, 0xFF, 0xFF, 0x00, 0x55, 0x10,
	0xCA, 0x0C, 0x06, 0x08, 0xC2, 0x18, 0x18, 0xFF, 0xFF, 0x00, 0x15, 0x10,
	0xE3, 0x0C, 0x80, 0x00, 0x50, 0x30, 0x58, 0xFF, 0xFF, 0x00, 0x00, 0x50,
	0xFC, 0x0C, 0x01, 0x0B, 0x50, 0x30, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x50,
	0x15, 0x0D, 0x02, 0x0B, 0x50, 0x28, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x50,
	0xFB, 0x06, 0x80, 0x00, 0x70, 0x38, 0x38, 0x1C, 0x1C, 0x00, 0x00, 0xD0,
	0xD0, 0x0B, 0x01, 0x0B, 0x70, 0x30, 0x30, 0x19, 0x19, 0x00, 0x00, 0xD0,
	0xE9, 0x0B, 0x02, 0x0B, 0x70, 0x30, 0x30, 0xFF, 0xFF, 0x00, 0x00, 0xD0,
	0x2E, 0x0D, 0x81, 0x02, 0x92, 0x18, 0x48, 0xFF, 0xFF, 0x01, 0x00, 0x50,
	0x47, 0x0D, 0x02, 0x04, 0x92, 0x00, 0x38, 0xFF, 0xFF, 0x01, 0x00, 0x50,
	0x60, 0x0D, 0x03, 0x10, 0x92, 0x00, 0x38, 0xFF, 0xFF, 0x01, 0x00, 0x50,
	0x02, 0x0C, 0x81, 0x02, 0xB2, 0x10, 0x10, 0xFF, 0xFF, 0x08, 0x00, 0xD0,
	0x1B, 0x0C, 0x02, 0x04, 0xB2, 0x00, 0x00, 0xFF, 0xFF, 0x08, 0x00, 0xD0,
	0x34, 0x0C, 0x03, 0x10, 0xB2, 0x00, 0x00, 0xFF, 0xFF, 0x08, 0x00, 0xD0,
	0x79, 0x0D, 0x80, 0x27, 0x10, 0x28, 0x28, 0xFF, 0xFF, 0x75, 0x00, 0x50,
	0x92, 0x0D, 0x02, 0x0D, 0x10, 0x18, 0x18, 0xFF, 0xFF, 0x7D, 0x00, 0x50,
	0xAB, 0x0D, 0x03, 0x0E, 0x10, 0x10, 0x10, 0xFF, 0xFF, 0x7D, 0x00, 0x50,
	0xC4, 0x0D, 0x04, 0x0A, 0x12, 0x10, 0x10, 0xFF, 0xFF, 0x5D, 0x00, 0x50,
	0x7B, 0x07, 0x80, 0x27, 0x30, 0x38, 0x38, 0xFF, 0xFF, 0x00, 0x00, 0xD0,
	0xDD, 0x0D, 0x82, 0x2A, 0xD0, 0x10, 0x10, 0xFF, 0xFF, 0x7F, 0x00, 0x50,
	0x3B, 0x08, 0x80, 0x29, 0x81, 0x00, 0x00, 0xFF, 0xFF, 0x01, 0x00, 0x10,
	0xFB, 0x06, 0x80, 0x00, 0x00, 0x88, 0x88, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xD0, 0x0B, 0x01, 0x0B, 0x00, 0x88, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xE9, 0x0B, 0x02, 0x0B, 0x00, 0x88, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x3B, 0x07, 0x80, 0x06, 0x00, 0x80, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x02, 0x0C, 0x01, 0x02, 0x02, 0x70, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x1B, 0x0C, 0x02, 0x04, 0x02, 0x48, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x34, 0x0C, 0x03, 0x10, 0x02, 0x48, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x3B, 0x07, 0x80, 0x06, 0x00, 0x80, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x02, 0x0C, 0x01, 0x02, 0x00, 0x70, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x1B, 0x0C, 0x02, 0x04, 0x00, 0x48, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x34, 0x0C, 0x03, 0x10, 0x00, 0x48, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x7B, 0x07, 0x80, 0x27, 0x00, 0x60, 0xC0, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x4D, 0x0C, 0x02, 0x0D, 0x00, 0x30, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x66, 0x0C, 0x03, 0x0E, 0x00, 0x10, 0xC8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x7F, 0x0C, 0x04, 0x0A, 0x02, 0x10, 0xC0, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x7B, 0x07, 0x80, 0x27, 0x00, 0x60, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x4D, 0x0C, 0x02, 0x0D, 0x00, 0x30, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0x66, 0x0C, 0x03, 0x0E, 0x00, 0x10, 0x48, 0xFF, 0x48, 0x00, 0x00, 0x00,
	0x7F, 0x0C, 0x04, 0x0A, 0x02, 0x10, 0x48, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xFB, 0x07, 0x84, 0x0A, 0x01, 0x10, 0x40, 0xFF, 0xFF, 0x00, 0x00, 0x00,
	0xBB, 0x07, 0x82, 0x2E, 0x00, 0x38, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x01,
	0x98, 0x0C, 0x04, 0x0C, 0x00, 0x18, 0xC0, 0xFF, 0xFF, 0x00, 0x55, 0x10,
	0xB1, 0x0C, 0x45, 0x09, 0x00, 0x18, 0x80, 0xFF, 0xFF, 0x00, 0x55, 0x10,
	0xCA, 0x0C, 0x46, 0x08, 0x02, 0x18, 0x80, 0xFF, 0xFF, 0x00, 0x15, 0x10,
	0xBB, 0x06, 0x81, 0x00, 0x70, 0x08, 0x08, 0xFF, 0xFF, 0x00, 0x00, 0xD0,
	0x63, 0x4F, 0x4F, 0x00, 0x53, 0x18, 0x06, 0x3E, 0x00, 0x40, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xE8, 0x8B, 0xDF, 0x80, 0x60, 0xDF, 0x06, 0xAB,
	0xFF, 0x64, 0x4F, 0x4F, 0x00, 0x52, 0x1A, 0xF2, 0x1F, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x00, 0xFF, 0x00, 0xE0, 0x83, 0xDF, 0x80, 0x60, 0xDF, 0x00,
	0xAB, 0xFF, 0x7F, 0x63, 0x63, 0x80, 0x69, 0x19, 0x72, 0xF0, 0x00, 0x60,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x58, 0x8C, 0x57, 0x80, 0x00, 0x57,
	0x00, 0xE3, 0xFF, 0x7D, 0x63, 0x63, 0x80, 0x6B, 0x1A, 0x99, 0xF0, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x7C, 0xA2, 0x57, 0x80, 0x00,
	0x57, 0x99, 0xE3, 0xFF, 0x7F, 0x63, 0x63, 0x00, 0x66, 0x10, 0x6F, 0xE0,
	0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x58, 0x8B, 0x57, 0x80,
	0x00, 0x57, 0x00, 0xE3, 0xFF, 0xA4, 0x7F, 0x7F, 0x07, 0x83, 0x95, 0x25,
	0xF5, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x02, 0x88, 0xFF,
	0x80, 0x00, 0xFF, 0x25, 0xE3, 0xFF, 0xA2, 0x7F, 0x7F, 0x85, 0x83, 0x94,
	0x25, 0xF5, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x02, 0x88,
	0xFF, 0x80, 0x00, 0xFF, 0x25, 0xE3, 0xFF, 0xA2, 0x7F, 0x7F, 0x83, 0x82,
	0x8E, 0x1F, 0xFD, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x01,
	0x84, 0xFF, 0x80, 0x00, 0x00, 0x00, 0xEB, 0xFF, 0xD7, 0x9F, 0xA0, 0x1A,
	0xA5, 0x1D, 0x1E, 0x52, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
	0x03, 0x86, 0xFF, 0x80, 0x00, 0x00, 0x00, 0xE3, 0xFF, 0xCC, 0x9F, 0xA0,
	0x8E, 0xA5, 0x19, 0x33, 0x52, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xFF,
	0x00, 0x05, 0x8C, 0xFF, 0x80, 0x00, 0x00, 0x31, 0xE3, 0xFF, 0xCE, 0x9F,
	0xA0, 0x11, 0xA3, 0x15, 0x29, 0x52, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0x00, 0x01, 0x84, 0xFF, 0x80, 0x00, 0x00, 0x00, 0xE3, 0xFF, 0xC2,
	0x9F, 0xA0, 0x84, 0xA3, 0x1B, 0x0C, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x00, 0xFF, 0x00, 0xE9, 0x8B, 0xDF, 0x00, 0x60, 0xE7, 0x04, 0xAB, 0xFF,
	0xCC, 0x9F, 0xA0, 0x0F, 0xA7, 0x11, 0x06, 0x3E, 0x00, 0x40, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xE8, 0x8B, 0xDF, 0x80, 0x60, 0xDF, 0x06, 0xAB,
	0xFF, 0xCF, 0x9F, 0xA0, 0x12, 0xA5, 0x15, 0xF1, 0x1F, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x00, 0xFF, 0x00, 0xE0, 0x83, 0xDF, 0x80, 0x60, 0xDF, 0x00,
	0xAB, 0xFF, 0x03, 0xC7, 0xC8, 0x06, 0xD3, 0x13, 0x72, 0xF0, 0x00, 0x60,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x58, 0x8C, 0x57, 0x64, 0x00, 0x57,
	0x00, 0xA3, 0xFF, 0x00, 0xC7, 0xC8, 0x03, 0xD7, 0x15, 0x99, 0xF0, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x7C, 0x82, 0x57, 0x64, 0x00,
	0x57, 0x99, 0xA3, 0xFF, 0x04, 0xC7, 0xC8, 0x07, 0xCD, 0x01, 0x6F, 0xF0,
	0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x58, 0x8B, 0x57, 0x80,
	0x00, 0x57, 0x00, 0xE3, 0xFF, 0x38, 0xFF, 0x00, 0x00, 0x03, 0x0F, 0x97,
	0x1F, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x80, 0x84, 0x7F,
	0x00, 0x00, 0x80, 0x00, 0xA3, 0xFF, 0x4D, 0xFF, 0x00, 0x0D, 0x07, 0x09,
	0x25, 0xF5, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x02, 0x88,
	0xFF, 0x80, 0x00, 0xFF, 0x25, 0xE3, 0xFF, 0x49, 0xFF, 0x00, 0x09, 0x07,
	0x09, 0x1F, 0xF5, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x02,
	0x88, 0xFF, 0x80, 0x00, 0xFF, 0x1F, 0xE3, 0xFF, 0x48, 0xFF, 0x00, 0x08,
	0x05, 0x1D, 0x1F, 0xFD, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
	0x01, 0x84, 0xFF, 0x80, 0x00, 0x00, 0x00, 0xEB, 0xFF, 0xA1, 0x3F, 0x40,
	0x0D, 0x49, 0x03, 0x18, 0xB2, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0xFF,
	0x00, 0x01, 0x85, 0xFF, 0x80, 0x00, 0x00, 0x18, 0xE3, 0xFF, 0x52, 0x53,
	0xE8, 0x3F, 0x02, 0x3C, 0x13, 0x76, 0x19, 0x26, 0x8A, 0x85, 0x27, 0x05,
	0x3C, 0x05, 0x74, 0x29, 0x3C, 0x04, 0x74, 0x11, 0x3C, 0x03, 0x74, 0x12,
	0x3C, 0x02, 0x74, 0x13, 0x3C, 0x01, 0x74, 0x14, 0x33, 0xC9, 0xEB, 0x17,
	0x90, 0xB1, 0xD0, 0xEB, 0x12, 0x90, 0xB1, 0x70, 0xEB, 0x0D, 0x90, 0xB1,
	0x50, 0xEB, 0x08, 0x90, 0xB1, 0x30, 0xEB, 0x03, 0x90, 0xB1, 0x10, 0xBA,
	0xC4, 0x03, 0xB8, 0x08, 0x06, 0xEF, 0x80, 0xF9, 0x10, 0x75, 0x10, 0xB8,
	0x18, 0xC0, 0xEF, 0xB0, 0x15, 0xE8, 0xF8, 0x37, 0x80, 0xCC, 0x10, 0xEF,
	0xEB, 0x0E, 0x90, 0xB8, 0x18, 0x40, 0xEF, 0xB0, 0x15, 0xE8, 0xE8, 0x37,
	0x80, 0xE4, 0xAF, 0xEF, 0xE8, 0x7E, 0x01, 0xB0, 0x67, 0xE8, 0xDC, 0x37,
	0x80, 0xE4, 0x0F, 0x0A, 0xE1, 0xEF, 0x5B, 0x5A, 0xC3, 0x56, 0xE8, 0xBF,
	0xF3, 0x2E, 0x8B, 0x36, 0xBD, 0x01, 0xE8, 0x64, 0x01, 0xE8, 0x72, 0x01,
	0x5E, 0xC3, 0xB0, 0x36, 0xE8, 0xBD, 0x37, 0x80, 0xE4, 0x03, 0x80, 0xFC,
	0x02, 0x74, 0x06, 0x2E, 0x8A, 0x3E, 0x9B, 0x01, 0xC3, 0x2E, 0x8A, 0x3E,
	0x9A, 0x01, 0xC3, 0xE8, 0x0C, 0x01, 0xE8, 0x40, 0x01, 0xB8, 0x41, 0x00,
	0xEF, 0xB8, 0x52, 0x00, 0xEF, 0xE8, 0x0C, 0x01, 0xC3, 0x50, 0x51, 0x8A,
	0xCF, 0x32, 0xED, 0xF3, 0xA4, 0x59, 0x03, 0xFA, 0xE2, 0xF4, 0x0C, 0xFF,
	0x58, 0xC3, 0x9C, 0xFA, 0xBA, 0xC3, 0x03, 0xB0, 0x01, 0xEE, 0xBA, 0xCC,
	0x03, 0xEC, 0x3C, 0x00, 0x74, 0x11, 0xBA, 0xE8, 0x46, 0xB0, 0x10, 0xEE,
	0x52, 0xBA, 0x02, 0x01, 0xB0, 0x01, 0xEE, 0x5A, 0xB0, 0x08, 0xEE, 0x33,
	0xC0, 0xBA, 0xE8, 0x4A, 0xEE, 0xE8, 0xC2, 0x00, 0xBA, 0xC4, 0x03, 0xE8,
	0xA8, 0x00, 0xE8, 0xD5, 0x00, 0x80, 0xFC, 0x10, 0x75, 0x04, 0xB8, 0x0D,
	0x01, 0xEF, 0xB8, 0x14, 0x03, 0xEF, 0xE8, 0x88, 0x00, 0xB8, 0x14, 0x00,
	0xEF, 0xE8, 0x81, 0x00, 0xE8, 0xD6, 0x00, 0xB8, 0x5C, 0x43, 0xEF, 0xB8,
	0x66, 0x00, 0xEF, 0xB0, 0x36, 0xE8, 0x2C, 0x37, 0x80, 0xE4, 0x03, 0x80,
	0xFC, 0x02, 0x74, 0x07, 0x2E, 0x8B, 0x0E, 0x9C, 0x01, 0xEB, 0x2B, 0xB8,
	0x02, 0xB1, 0xB9, 0x11, 0x88, 0xBA, 0x33, 0x53, 0x33, 0xF6, 0xCD, 0x1A,
	0x80, 0xFC, 0x86, 0x74, 0x26, 0xBF, 0x04, 0x00, 0xB8, 0x09, 0xB1, 0xCD,
	0x1A, 0x81, 0xE1, 0xDF, 0x00, 0xB8, 0x0C, 0xB1, 0xCD, 0x1A, 0xB8, 0x09,
	0xB1, 0xBF, 0x12, 0x00, 0xCD, 0x1A, 0xE8, 0x8C, 0x00, 0xB0, 0x6B, 0x8A,
	0xE5, 0xEF, 0xFE, 0xC0, 0x8A, 0xE1, 0xEF, 0xB4, 0x11, 0xE8, 0xBC, 0xF3,
	0x52, 0xBA, 0xC4, 0x03, 0xB0, 0x0A, 0xE8, 0xD7, 0x36, 0x80, 0xCC, 0x80,
	0xEF, 0x5A, 0xB0, 0x40, 0xE8, 0xCD, 0x36, 0x80, 0xCC, 0x31, 0xEF, 0xE8,
	0x4F, 0x03, 0xB0, 0x40, 0xE8, 0xC1, 0x36, 0x80, 0xE4, 0xFE, 0xEF, 0x9D,
	0xC3, 0x52, 0x53, 0xB0, 0x00, 0xB9, 0x03, 0x00, 0xE8, 0xC5, 0x36, 0x5B,
	0x5A, 0xC3, 0x52, 0xBA, 0xC4, 0x03, 0xB8, 0x08, 0x06, 0xEF, 0x5A, 0xC3,
	0x52, 0xBA, 0xC4, 0x03, 0xB8, 0x08, 0x00, 0xEF, 0x5A, 0xC3, 0x52, 0xE8,
	0x33, 0x00, 0xB8, 0x38, 0x48, 0xEF, 0xB8, 0x39, 0xA5, 0xEF, 0x5A, 0xC3,
	0x52, 0xE8, 0x25, 0x00, 0xB8, 0x38, 0x00, 0xEF, 0xB8, 0x39, 0x00, 0xEF,
	0x5A, 0xC3, 0x52, 0x53, 0xE8, 0xDF, 0xFF, 0xE8, 0x13, 0x00, 0xB0, 0x2E,
	0xE8, 0x71, 0x36, 0x8A, 0xFC, 0xB0, 0x2F, 0xE8, 0x6A, 0x36, 0x8A, 0xC4,
	0x8A, 0xE7, 0x5B, 0x5A, 0xC3, 0x50, 0xBA, 0xCC, 0x03, 0xEC, 0xBA, 0xB4,
	0x03, 0xA8, 0x01, 0x74, 0x03, 0xBA, 0xD4, 0x03, 0x58, 0xC3, 0x53, 0x51,
	0x2E, 0xAC, 0x8A, 0xC8, 0x32, 0xED, 0x2E, 0xAD, 0xEF, 0xE2, 0xFB, 0x52,
	0x56, 0xBA, 0xC4, 0x03, 0x2E, 0x8B, 0x36, 0xCA, 0x01, 0x2E, 0xAC, 0x8A,
	0xC8, 0x32, 0xED, 0x2E, 0xAD, 0x3C, 0x0D, 0x75, 0x03, 0x80, 0xE4, 0x0F,
	0xEF, 0xE2, 0xF4, 0x5E, 0x5A, 0xE8, 0x62, 0xFE, 0xB0, 0x40, 0xE8, 0x1F,
	0x36, 0x80, 0xE4, 0xF0, 0x0A, 0xE7, 0xEF, 0xB0, 0x42, 0xEE, 0x42, 0xEC,
	0x24, 0xDF, 0xEE, 0x4A, 0x59, 0x5B, 0xC3, 0xE8, 0x70, 0xFF, 0xE8, 0xF8,
	0xF1, 0xC3, 0x50, 0x8C, 0xCF, 0x8E, 0xC7, 0xBF, 0x22, 0x05, 0x26, 0x80,
	0x3D, 0xFF, 0x74, 0x0A, 0x26, 0x38, 0x05, 0x74, 0x05, 0x83, 0xC7, 0x09,
	0xEB, 0xF0, 0x81, 0xEF, 0x22, 0x05, 0x26, 0x38, 0x85, 0x22, 0x05, 0x58,
	0xC3, 0x57, 0x06, 0xE8, 0xD8, 0xFF, 0x75, 0x05, 0x2E, 0x8A, 0x85, 0x25,
	0x05, 0x07, 0x5F, 0xC3, 0x57, 0x06, 0xE8, 0xC9, 0xFF, 0x2E, 0x8B, 0xB5,
	0x23, 0x05, 0x07, 0x5F, 0xC3, 0x50, 0x53, 0x51, 0x06, 0x8A, 0xD8, 0xE8,
	0x10, 0xFF, 0xBA, 0xC4, 0x03, 0xB0, 0x09, 0xE8, 0xB6, 0x35, 0x80, 0xE4,
	0x7F, 0xEF, 0xE8, 0x4C, 0xFF, 0xB0, 0x30, 0xB4, 0x55, 0xEF, 0xE8, 0xA7,
	0x35, 0x80, 0xFC, 0x55, 0x74, 0x1B, 0xB0, 0x40, 0xE8, 0x9D, 0x35, 0x80,
	0xCC, 0x01, 0xEF, 0x52, 0xBA, 0xE8, 0x4A, 0xB0, 0x02, 0xEE, 0x5A, 0x56,
	0x2E, 0x8B, 0x36, 0xBD, 0x01, 0xE8, 0x36, 0xFF, 0x5E, 0x8A, 0xC3, 0xE8,
	0x7C, 0xFF, 0x74, 0x03, 0xE9, 0x99, 0x00, 0xE8, 0x58, 0x01, 0xE8, 0x67,
	0xF1, 0xB0, 0x41, 0xE8, 0x72, 0x35, 0x8A, 0xFC, 0xB0, 0x52, 0xE8, 0x6B,
	0x35, 0x80, 0xE4, 0xF0, 0x8A, 0xDC, 0xC1, 0xEB, 0x04, 0xB8, 0xF1, 0x06,
	0xB9, 0x03, 0x00, 0x26, 0x39, 0x85, 0x23, 0x05, 0x74, 0x08, 0xC1, 0xEB,
	0x03, 0x05, 0x40, 0x00, 0xE2, 0xF1, 0x83, 0xE3, 0x07, 0xBA, 0xC4, 0x03,
	0xB0, 0x04, 0x26, 0x8A, 0xA5, 0x28, 0x05, 0xEF, 0xE8, 0xDA, 0xFE, 0x52,
	0xB0, 0x40, 0xE8, 0x37, 0x35, 0x80, 0xCC, 0x01, 0xEF, 0xB0, 0x11, 0xE8,
	0x2E, 0x35, 0x80, 0xE4, 0x7F, 0xEF, 0xBA, 0xE8, 0x4A, 0x26, 0x8A, 0x85,
	0x26, 0x05, 0xEE, 0x5A, 0x8A, 0xE3, 0x32, 0xFF, 0x2E, 0x8A, 0x1E, 0x9E,
	0x01, 0x26, 0x8B, 0xBD, 0x29, 0x05, 0x26, 0x8A, 0x45, 0x02, 0xA8, 0x80,
	0x75, 0x0B, 0x25, 0x0F, 0x0F, 0x3A, 0xC4, 0x76, 0x04, 0x2B, 0xFB, 0xEB,
	0xED, 0x26, 0x8A, 0x65, 0x03, 0xE8, 0xD4, 0xF1, 0xB9, 0x19, 0x00, 0x32,
	0xC0, 0x26, 0x8B, 0x35, 0x26, 0x8A, 0x24, 0xEF, 0xFE, 0xC0, 0x46, 0xE2,
	0xF7, 0xE8, 0x7D, 0xF2, 0xA0, 0x49, 0x04, 0xE8, 0x94, 0xF1, 0xE8, 0x91,
	0xFC, 0xE8, 0x34, 0xFE, 0x07, 0x59, 0x5B, 0x58, 0xC3, 0x80, 0x3E, 0x49,
	0x04, 0x6A, 0x75, 0x0D, 0xE9, 0xE6, 0x0D, 0x80, 0x3E, 0x49, 0x04, 0x6A,
	0x75, 0x03, 0xE9, 0x8D, 0x0D, 0x83, 0xC4, 0x04, 0xC3, 0x86, 0xC4, 0xE8,
	0xD3, 0xFE, 0x86, 0xC4, 0x75, 0x0C, 0xF6, 0xC4, 0x01, 0x75, 0x07, 0x56,
	0x53, 0x51, 0x52, 0xE9, 0xE8, 0x19, 0xB4, 0x0D, 0x1F, 0xCF, 0x86, 0xC4,
	0xE8, 0xBA, 0xFE, 0x86, 0xC4, 0x75, 0x0B, 0xF6, 0xC4, 0x01, 0x75, 0x06,
	0x53, 0x51, 0x52, 0xE9, 0x0F, 0x19, 0xB4, 0x0C, 0x1F, 0xCF, 0x86, 0xC4,
	0xE8, 0xA2, 0xFE, 0x86, 0xC4, 0x75, 0x07, 0xF6, 0xC4, 0x01, 0x74, 0x18,
	0xB4, 0x03, 0xE9, 0x4C, 0x15, 0x86, 0xC4, 0xE8, 0x8F, 0xFE, 0x86, 0xC4,
	0x75, 0x07, 0xF6, 0xC4, 0x01, 0x74, 0x0F, 0xB4, 0x03, 0xE9, 0xB8, 0x14,
	0x80, 0x3E, 0x49, 0x04, 0x6A, 0x75, 0x0D, 0xE9, 0x2C, 0x15, 0x80, 0x3E,
	0x49, 0x04, 0x6A, 0x75, 0x03, 0xE9, 0x93, 0x14, 0xC3, 0x86, 0xC4, 0xE8,
	0x67, 0xFE, 0x86, 0xC4, 0x75, 0x0A, 0xF6, 0xC4, 0x01, 0x74, 0x05, 0xB4,
	0x03, 0xE9, 0x09, 0x12, 0xE9, 0x03, 0x12, 0x50, 0x52, 0xE8, 0xD1, 0xFD,
	0xB0, 0x31, 0xE8, 0x2F, 0x34, 0x80, 0xCC, 0x01, 0xEF, 0xB0, 0x6A, 0x8A,
	0xE3, 0xEF, 0x5A, 0x58, 0xC3, 0xC3, 0xF6, 0x06, 0x87, 0x04, 0x80, 0x74,
	0x01, 0xC3, 0x52, 0x50, 0xE8, 0xB2, 0xFD, 0xE8, 0x78, 0xFD, 0xB0, 0x58,
	0xE8, 0x0D, 0x34, 0x80, 0xE4, 0xEF, 0xEF, 0xB0, 0x50, 0xE8, 0x04, 0x34,
	0x80, 0xE4, 0x0F, 0x80, 0xCC, 0x10, 0xEF, 0xB0, 0x43, 0xE8, 0xF8, 0x33,
	0x80, 0xE4, 0xF7, 0xEF, 0xB0, 0x40, 0xE8, 0xEF, 0x33, 0x80, 0xCC, 0x01,
	0xEF, 0xBA, 0xE8, 0x4A, 0xB0, 0x07, 0xEE, 0xB6, 0xBE, 0x33, 0xC0, 0xB4,
	0x10, 0xEF, 0xB4, 0x20, 0xEF, 0xB8, 0xFF, 0x3F, 0xEF, 0xB4, 0x4F, 0xEF,
	0x50, 0xB8, 0x40, 0xE0, 0xEF, 0x58, 0xB6, 0xAA, 0xB4, 0xFF, 0xEF, 0xEF,
	0xB6, 0xA6, 0x33, 0xC0, 0xEF, 0xEF, 0xB6, 0xBA, 0xB0, 0x27, 0xEF, 0xB6,
	0xBE, 0xB8, 0x00, 0xA0, 0xEF, 0xB6, 0x86, 0x33, 0xC0, 0xEF, 0xB6, 0x82,
	0xEF, 0xB6, 0x96, 0xB8, 0xFF, 0x0F, 0xEF, 0xB6, 0xBE, 0xEF, 0xB6, 0x9A,
	0xB8, 0xB3, 0x40, 0xEF, 0xE8, 0x03, 0x00, 0x58, 0x5A, 0xC3, 0x52, 0x50,
	0xE8, 0x32, 0xFD, 0xB0, 0x40, 0xE8, 0x90, 0x33, 0xF6, 0xC4, 0x01, 0x74,
	0x11, 0xBA, 0xE8, 0x9A, 0xED, 0x3D, 0xFF, 0xFF, 0x74, 0x08, 0xEB, 0x00,
	0xED, 0xF6, 0xC4, 0x02, 0x75, 0xF8, 0x58, 0x5A, 0xC3, 0x52, 0xBA, 0xE8,
	0x42, 0xB8, 0x00, 0x90, 0xEF, 0xE8, 0xD2, 0xFF, 0xB4, 0x50, 0xEF, 0xE8,
	0xCC, 0xFF, 0x5A, 0xC3, 0xE8, 0xC7, 0xFC, 0xE8, 0xB0, 0xFC, 0xE8, 0xF8,
	0xFC, 0xB0, 0x36, 0xE8, 0x56, 0x33, 0x80, 0xE4, 0x1F, 0xEF, 0xF6, 0xC4,
	0x04, 0x74, 0x2E, 0xE8, 0xCC, 0xFC, 0x80, 0xFC, 0x10, 0x74, 0x26, 0x52,
	0xBA, 0xC4, 0x03, 0xB0, 0x0A, 0xE8, 0x3C, 0x33, 0x80, 0xCC, 0x40, 0xEF,
	0x5A, 0xB3, 0x3F, 0xE8, 0xF9, 0xFE, 0xE8, 0x48, 0x00, 0x74, 0x26, 0x52,
	0xBA, 0xC4, 0x03, 0xB0, 0x0A, 0xE8, 0x24, 0x33, 0x80, 0xE4, 0xBF, 0xEF,
	0x5A, 0xB3, 0x1F, 0xE8, 0xE1, 0xFE, 0xE8, 0x30, 0x00, 0x74, 0x12, 0xB3,
	0x0F, 0xE8, 0xD7, 0xFE, 0xE8, 0x26, 0x00, 0x74, 0x0C, 0xB7, 0xE0, 0xEB,
	0x0A, 0x33, 0xDB, 0xEB, 0x06, 0xB7, 0x80, 0xEB, 0x02, 0xB7, 0xC0, 0xB0,
	0x36, 0xE8, 0xF8, 0x32, 0x80, 0xE4, 0x1F, 0x0A, 0xE7, 0xEF, 0xB3, 0x00,
	0xE8, 0xB4, 0xFE, 0xE8, 0xC8, 0xFE, 0x33, 0xDB, 0xC3, 0xB0, 0x80, 0x33,
	0xFF, 0xB9, 0xFF, 0x00, 0xF3, 0xAA, 0x33, 0xFF, 0xB9, 0xFF, 0x00, 0xF3,
	0xAE, 0x75, 0x08, 0x3C, 0x00, 0x74, 0x04, 0xD0, 0xE8, 0xEB, 0xE8, 0xC3,
	0x50, 0x53, 0x52, 0xE8, 0x2C, 0xFC, 0x32, 0xC0, 0x5A, 0x5B, 0x58, 0xC3,
	0xE8, 0xAD, 0xEE, 0xC3, 0xBA, 0xC4, 0x03, 0xE8, 0x08, 0xFC, 0xB9, 0x13,
	0x00, 0xB4, 0x09, 0x8A, 0xC4, 0xEE, 0x42, 0xEC, 0xAA, 0x4A, 0xFE, 0xC4,
	0xE2, 0xF5, 0xE8, 0x40, 0xFC, 0xE8, 0x06, 0xFC, 0xB9, 0x40, 0x00, 0xB4,
	0x30, 0x8A, 0xC4, 0xEE, 0x42, 0xEC, 0xAA, 0x4A, 0xFE, 0xC4, 0x80, 0xFC,
	0x4A, 0x74, 0x05, 0x80, 0xFC, 0x4B, 0x75, 0x11, 0xB0, 0x45, 0xEE, 0x42,
	0xEC, 0x4A, 0x8A, 0xC4, 0xEE, 0x42, 0xEC, 0xAA, 0xEC, 0xAA, 0xEC, 0xAA,
	0x4A, 0xE2, 0xDA, 0x06, 0x57, 0x33, 0xC0, 0x33, 0xC9, 0xB0, 0x6C, 0xE8,
	0x6A, 0x32, 0x8A, 0xC4, 0x8A, 0xCC, 0xE8, 0x5D, 0xFC, 0x26, 0x8A, 0x85,
	0x26, 0x05, 0x5F, 0x07, 0xAA, 0xC3, 0xBA, 0xC4, 0x03, 0xEC, 0x50, 0xE8,
	0xA4, 0xFB, 0xB9, 0x13, 0x00, 0xB4, 0x09, 0x8A, 0xC4, 0xEE, 0x42, 0x26,
	0xAC, 0xEE, 0x4A, 0xFE, 0xC4, 0xE2, 0xF4, 0x58, 0xEE, 0xE8, 0xD9, 0xFB,
	0xEC, 0x50, 0xE8, 0x9D, 0xFB, 0xB9, 0x40, 0x00, 0xB4, 0x30, 0x8A, 0xC4,
	0xEE, 0x42, 0x26, 0xAC, 0xEE, 0x4A, 0xFE, 0xC4, 0x80, 0xFC, 0x4A, 0x74,
	0x05, 0x80, 0xFC, 0x4B, 0x75, 0x14, 0xB0, 0x45, 0xEE, 0x42, 0xEC, 0x4A,
	0x8A, 0xC4, 0xEE, 0x42, 0x26, 0xAC, 0xEE, 0x26, 0xAC, 0xEE, 0x26, 0xAC,
	0xEE, 0x4A, 0xE2, 0xD6, 0xB0, 0x40, 0xE8, 0x03, 0x32, 0x50, 0x52, 0x80,
	0xCC, 0x01, 0xEF, 0x26, 0xAC, 0xBA, 0xE8, 0x4A, 0xEE, 0xBA, 0xE8, 0xAA,
	0xB8, 0xFF, 0xFF, 0xEF, 0xEF, 0x5A, 0x58, 0xEF, 0x58, 0xEE, 0xC3, 0x50,
	0xE8, 0x4B, 0xFB, 0xE8, 0x7F, 0xFB, 0xB0, 0x36, 0xE8, 0xDD, 0x31, 0x33,
	0xD2, 0x80, 0xE4, 0xE0, 0x80, 0xFC, 0xE0, 0x74, 0x15, 0x42, 0x80, 0xFC,
	0xC0, 0x74, 0x0F, 0x42, 0x80, 0xFC, 0x80, 0x74, 0x09, 0x42, 0x42, 0x80,
	0xFC, 0x00, 0x74, 0x02, 0xB2, 0x01, 0x86, 0xF2, 0x58, 0xC3, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xA0, 0xFA, 0x60, 0x06, 0x1E, 0x83, 0xEC, 0x02, 0xFC,
	0x8B, 0xEC, 0x2E, 0x8E, 0x1E, 0x86, 0x14, 0xB8, 0x01, 0x12, 0xB3, 0x32,
	0xCD, 0x10, 0xE8, 0x15, 0xFA, 0xE8, 0xC5, 0xF9, 0xBA, 0xC2, 0x03, 0xB0,
	0x23, 0xEE, 0x32, 0xC0, 0xA2, 0x49, 0x04, 0xC6, 0x06, 0x87, 0x04, 0x60,
	0xC6, 0x06, 0x89, 0x04, 0x00, 0xE8, 0x8A, 0x02, 0xE8, 0x2C, 0x02, 0xB8,
	0x07, 0x0B, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x75, 0x03, 0xB8, 0x03, 0x09,
	0x88, 0x26, 0x88, 0x04, 0x32, 0xE4, 0xCD, 0x10, 0xE8, 0x1E, 0x03, 0x80,
	0x0E, 0x89, 0x04, 0x10, 0xF6, 0x06, 0x89, 0x04, 0x01, 0x75, 0x2F, 0xA1,
	0x10, 0x04, 0x50, 0xB3, 0x03, 0xB8, 0x07, 0x30, 0xF6, 0x06, 0x87, 0x04,
	0x02, 0x74, 0x05, 0xB8, 0x03, 0x20, 0xB3, 0x07, 0x80, 0x26, 0x10, 0x04,
	0xCF, 0x08, 0x26, 0x10, 0x04, 0x32, 0xE4, 0xCD, 0x42, 0x58, 0xA3, 0x10,
	0x04, 0x8A, 0xC3, 0x32, 0xE4, 0xCD, 0x10, 0xE8, 0xE3, 0x02, 0xE8, 0xB0,
	0x02, 0x08, 0x06, 0x88, 0x04, 0x2E, 0xF6, 0x06, 0x99, 0x01, 0x02, 0x75,
	0x14, 0x32, 0xC0, 0xA2, 0x8A, 0x04, 0xE8, 0x06, 0xFB, 0x74, 0x0A, 0xB0,
	0x03, 0xE8, 0x58, 0x31, 0xC7, 0x46, 0x04, 0x01, 0x00, 0x2E, 0xF6, 0x06,
	0x99, 0x01, 0x04, 0x75, 0x4A, 0xB0, 0x0E, 0xF6, 0x06, 0x87, 0x04, 0x02,
	0x74, 0x02, 0xB0, 0x0F, 0xE8, 0xF8, 0x34, 0xE8, 0xD7, 0x32, 0xB8, 0x00,
	0xA0, 0x8E, 0xC0, 0xB8, 0x05, 0x08, 0xBA, 0xCE, 0x03, 0xEF, 0xB8, 0x02,
	0x0F, 0xEF, 0xB8, 0x02, 0x0F, 0xBA, 0xC4, 0x03, 0xEF, 0xE8, 0x70, 0xFD,
	0x75, 0x04, 0x32, 0xD2, 0xEB, 0x02, 0xB2, 0x03, 0x52, 0xB0, 0x03, 0xF6,
	0x06, 0x87, 0x04, 0x02, 0x74, 0x02, 0xB0, 0x07, 0xE8, 0xC4, 0x34, 0xE8,
	0xA3, 0x32, 0x5A, 0x0A, 0xD2, 0x75, 0x02, 0xEB, 0x0A, 0xB0, 0x03, 0xE8,
	0xFA, 0x30, 0xC7, 0x46, 0x04, 0x01, 0x00, 0xE8, 0x1C, 0x00, 0x80, 0x3E,
	0x8A, 0x04, 0x00, 0x75, 0x03, 0xE8, 0xDE, 0x00, 0xE8, 0xF0, 0xF8, 0xE8,
	0x86, 0xEC, 0xE8, 0xF1, 0x34, 0x8B, 0xE5, 0x83, 0xC4, 0x02, 0x1F, 0x07,
	0x61, 0xCB, 0xF6, 0x06, 0x89, 0x04, 0x01, 0x75, 0x29, 0xA1, 0x10, 0x04,
	0x50, 0xB3, 0x03, 0xB8, 0x07, 0x30, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x74,
	0x05, 0xB8, 0x03, 0x20, 0xB3, 0x07, 0x80, 0x26, 0x10, 0x04, 0xCF, 0x08,
	0x26, 0x10, 0x04, 0x32, 0xE4, 0xCD, 0x42, 0x58, 0xA3, 0x10, 0x04, 0xEB,
	0x1B, 0x90, 0xF6, 0x06, 0x89, 0x04, 0x04, 0x75, 0x0E, 0xF6, 0x06, 0x87,
	0x04, 0x08, 0x75, 0x07, 0x80, 0x26, 0x87, 0x04, 0xFD, 0xEB, 0x05, 0x80,
	0x0E, 0x87, 0x04, 0x02, 0xB8, 0x09, 0x20, 0xB3, 0x03, 0xF6, 0x06, 0x87,
	0x04, 0x02, 0x74, 0x05, 0xB8, 0x0B, 0x30, 0xB3, 0x07, 0x80, 0x26, 0x88,
	0x04, 0xF0, 0x08, 0x06, 0x88, 0x04, 0x80, 0x26, 0x10, 0x04, 0xCF, 0x08,
	0x26, 0x10, 0x04, 0xA0, 0x87, 0x04, 0x24, 0x08, 0x80, 0x26, 0x87, 0x04,
	0xF7, 0x8A, 0x26, 0x89, 0x04, 0x80, 0xE4, 0x01, 0x80, 0x26, 0x89, 0x04,
	0xFE, 0x50, 0x32, 0xE4, 0x8A, 0xC3, 0xCD, 0x10, 0x58, 0x08, 0x26, 0x89,
	0x04, 0xF6, 0xC4, 0x01, 0x75, 0x33, 0xA8, 0x08, 0x74, 0x2F, 0x50, 0xB8,
	0x03, 0x30, 0xB3, 0x07, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x74, 0x05, 0xB8,
	0x05, 0x20, 0xB3, 0x03, 0x80, 0x26, 0x88, 0x04, 0xF0, 0x08, 0x06, 0x88,
	0x04, 0x80, 0x26, 0x10, 0x04, 0xCF, 0x08, 0x26, 0x10, 0x04, 0x58, 0x08,
	0x06, 0x87, 0x04, 0x32, 0xE4, 0x8A, 0xC3, 0xCD, 0x10, 0xC3, 0x0C, 0x0B,
	0x0E, 0x0D, 0xA0, 0x87, 0x04, 0x24, 0x02, 0x8A, 0x26, 0x89, 0x04, 0x80,
	0xE4, 0x01, 0x0A, 0xC4, 0x32, 0xE4, 0x8B, 0xD8, 0x2E, 0x8A, 0x87, 0x7E,
	0x16, 0xA2, 0x8A, 0x04, 0x3C, 0x0E, 0x75, 0x21, 0x1E, 0xB8, 0x00, 0xC6,
	0x8E, 0xD8, 0x8A, 0x26, 0xD4, 0x03, 0xC6, 0x06, 0xD4, 0x03, 0x28, 0xBA,
	0xD4, 0x03, 0xEC, 0x88, 0x26, 0xD4, 0x03, 0x1F, 0x3C, 0x28, 0x75, 0x05,
	0xC6, 0x06, 0x8A, 0x04, 0x0F, 0xC3, 0xB3, 0xAA, 0x8A, 0xFB, 0x80, 0xE7,
	0x0F, 0xB0, 0x0E, 0x8A, 0xE3, 0xEF, 0xFE, 0xC0, 0xEF, 0xB0, 0x0E, 0xE8,
	0x73, 0x2F, 0x80, 0xE4, 0x0F, 0x3A, 0xE7, 0x75, 0x11, 0xE8, 0x69, 0x2F,
	0x80, 0xE4, 0x0F, 0x3A, 0xE7, 0x75, 0x07, 0x80, 0xEB, 0x55, 0x73, 0xD8,
	0x32, 0xDB, 0xC3, 0x50, 0xBA, 0xB4, 0x03, 0xE8, 0xCC, 0xFF, 0x74, 0x3F,
	0xBA, 0xC2, 0x03, 0xB0, 0xA6, 0xEE, 0xBA, 0xD4, 0x03, 0xE8, 0xBE, 0xFF,
	0x74, 0x1E, 0xBA, 0xC2, 0x03, 0xB0, 0x23, 0xEE, 0xBA, 0xD4, 0x03, 0x89,
	0x16, 0x63, 0x04, 0x80, 0x26, 0x10, 0x04, 0xCF, 0x80, 0x0E, 0x10, 0x04,
	0x20, 0x80, 0x0E, 0x89, 0x04, 0x01, 0x58, 0xC3, 0x80, 0x0E, 0x87, 0x04,
	0x02, 0x80, 0x0E, 0x10, 0x04, 0x30, 0xBA, 0xB4, 0x03, 0x89, 0x16, 0x63,
	0x04, 0x58, 0xC3, 0x80, 0x26, 0x10, 0x04, 0xCF, 0x80, 0x0E, 0x10, 0x04,
	0x20, 0xBA, 0xD4, 0x03, 0x89, 0x16, 0x63, 0x04, 0x58, 0xC3, 0xFA, 0x2E,
	0x8E, 0x06, 0x88, 0x14, 0xBB, 0x00, 0xF0, 0xBF, 0x08, 0x01, 0xB8, 0x65,
	0xF0, 0xE8, 0x68, 0x00, 0x8C, 0xCB, 0xBF, 0xB4, 0x01, 0xB8, 0xC6, 0x56,
	0xE8, 0x5D, 0x00, 0xBF, 0x40, 0x00, 0xB8, 0xC6, 0x56, 0xE8, 0x54, 0x00,
	0xFA, 0x2E, 0x8E, 0x06, 0x86, 0x14, 0x8C, 0xC8, 0xC7, 0x06, 0xA8, 0x04,
	0x09, 0x3A, 0x3D, 0x00, 0xC0, 0x74, 0x29, 0x3D, 0x00, 0xE0, 0x75, 0x08,
	0xC7, 0x06, 0xA8, 0x04, 0x25, 0x3A, 0xEB, 0x1C, 0x51, 0x53, 0xB9, 0x08,
	0x00, 0xBB, 0xA1, 0x01, 0x53, 0x2E, 0x8B, 0x1F, 0x83, 0xFB, 0x00, 0x74,
	0x03, 0x2E, 0x8C, 0x0F, 0x5B, 0x83, 0xC3, 0x02, 0xE2, 0xEE, 0x5B, 0x59,
	0x8C, 0x0E, 0xAA, 0x04, 0x2E, 0x8E, 0x06, 0x88, 0x14, 0xBF, 0x7C, 0x00,
	0xB8, 0x20, 0x5B, 0xE8, 0x06, 0x00, 0xBF, 0x0C, 0x01, 0xB8, 0x20, 0x57,
	0xAB, 0x8B, 0xC3, 0xAB, 0xC3, 0x32, 0xE4, 0xB9, 0x02, 0x02, 0xBA, 0xDA,
	0x03, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x74, 0x03, 0xBA, 0xBA, 0x03, 0xD2,
	0xC4, 0x8A, 0xC5, 0xEE, 0x52, 0xBA, 0xC2, 0x03, 0xEC, 0x5A, 0x24, 0x60,
	0x0A, 0xE0, 0xD0, 0xED, 0x73, 0xED, 0x32, 0xC0, 0xEE, 0xF8, 0x8A, 0xC4,
	0xD0, 0xC8, 0x24, 0xF0, 0xC3, 0xE8, 0xB2, 0x2F, 0x52, 0xBA, 0xD8, 0x03,
	0x32, 0xC0, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x75, 0x05, 0xBA, 0xB8, 0x03,
	0xFE, 0xC0, 0xEE, 0x5A, 0xC3, 0x2C, 0x28, 0x2D, 0x29, 0x2A, 0x2E, 0x1E,
	0x29, 0xE8, 0x58, 0xFB, 0x75, 0x0D, 0x8A, 0xE0, 0x24, 0x7F, 0x3C, 0x13,
	0x76, 0x06, 0xE8, 0x11, 0xF8, 0x74, 0x01, 0xC3, 0x80, 0x26, 0x87, 0x04,
	0x7F, 0x80, 0xE4, 0x80, 0x08, 0x26, 0x87, 0x04, 0xE8, 0xAD, 0x00, 0x3C,
	0x13, 0x77, 0x11, 0xE8, 0x0C, 0x02, 0x74, 0x0C, 0x24, 0xDF, 0xA2, 0x49,
	0x04, 0xE8, 0x34, 0xFB, 0xE8, 0x7D, 0x02, 0xC3, 0x51, 0xA2, 0x49, 0x04,
	0xE8, 0xAE, 0x02, 0x80, 0x26, 0x87, 0x04, 0xF3, 0xE8, 0x4D, 0x03, 0xE8,
	0xC7, 0x2F, 0xA0, 0x49, 0x04, 0xE8, 0x11, 0xF8, 0xE8, 0x9E, 0x30, 0x8B,
	0x16, 0x63, 0x04, 0xA0, 0x49, 0x04, 0x3C, 0x04, 0x72, 0x0F, 0x3C, 0x07,
	0x74, 0x0B, 0x3C, 0x13, 0x76, 0x37, 0xE8, 0xDC, 0xF7, 0xA8, 0x01, 0x74,
	0x30, 0xE8, 0xDD, 0x03, 0xB8, 0x0B, 0x00, 0xBB, 0x08, 0x00, 0xE8, 0x38,
	0x03, 0x75, 0x03, 0xE8, 0x54, 0x03, 0xBB, 0x10, 0x00, 0xE8, 0xF9, 0x04,
	0x74, 0x2B, 0x26, 0xC4, 0x5F, 0x06, 0x8C, 0xC0, 0x0B, 0xC3, 0x74, 0x21,
	0xB8, 0x07, 0x00, 0xE8, 0x23, 0x03, 0x75, 0x19, 0xE8, 0x66, 0x03, 0xEB,
	0x14, 0xC7, 0x06, 0x60, 0x04, 0x00, 0x00, 0xB8, 0x07, 0x00, 0xBB, 0x0C,
	0x00, 0xE8, 0x05, 0x03, 0x75, 0x03, 0xE8, 0xC5, 0x03, 0xF6, 0x06, 0x87,
	0x04, 0x80, 0x75, 0x0A, 0xA1, 0x4C, 0x04, 0x0B, 0xC0, 0x74, 0x03, 0xE8,
	0x6D, 0x04, 0xE8, 0xD7, 0x03, 0xE8, 0xBD, 0x2E, 0xE8, 0x1D, 0x2F, 0x59,
	0xE8, 0x99, 0xFA, 0xC3, 0x8A, 0x1E, 0x10, 0x04, 0x80, 0xE3, 0x30, 0xF6,
	0x06, 0x89, 0x04, 0x01, 0x74, 0x4E, 0x38, 0x06, 0x49, 0x04, 0x74, 0x48,
	0x8A, 0x26, 0x88, 0x04, 0x80, 0xE4, 0x0F, 0x3C, 0x07, 0x74, 0x7C, 0x3C,
	0x0F, 0x74, 0x78, 0x8A, 0xF8, 0xE8, 0x4D, 0xF7, 0x75, 0x06, 0xA8, 0x02,
	0x8A, 0xC7, 0x74, 0x6B, 0x2E, 0xF6, 0x06, 0x97, 0x01, 0x01, 0x74, 0x03,
	0xE9, 0x94, 0x00, 0x81, 0x3E, 0x63, 0x04, 0xD4, 0x03, 0x74, 0x19, 0x80,
	0xFB, 0x30, 0x74, 0x5E, 0x80, 0xFC, 0x05, 0x76, 0x0F, 0x80, 0xFC, 0x08,
	0x76, 0x0F, 0x80, 0xFC, 0x09, 0x74, 0x0F, 0x80, 0xFC, 0x0B, 0x76, 0x01,
	0xC3, 0xB3, 0x48, 0xEB, 0x07, 0xB3, 0x8B, 0xEB, 0x03, 0x90, 0xB3, 0x0B,
	0x80, 0x26, 0x87, 0x04, 0xFD, 0x80, 0x26, 0x88, 0x04, 0xF0, 0x8A, 0x26,
	0x89, 0x04, 0xF6, 0xD4, 0x80, 0xE4, 0x80, 0xD0, 0xC4, 0x0A, 0xE3, 0x08,
	0x26, 0x88, 0x04, 0x80, 0x26, 0x89, 0x04, 0x7F, 0x2E, 0xF6, 0x06, 0x97,
	0x01, 0x01, 0x74, 0xCC, 0x80, 0x26, 0x10, 0x04, 0xCF, 0x83, 0x0E, 0x10,
	0x04, 0x20, 0xC3, 0x2E, 0xF6, 0x06, 0x97, 0x01, 0x01, 0x74, 0x07, 0xE9,
	0x89, 0x00, 0xB0, 0x07, 0xEB, 0xB2, 0x81, 0x3E, 0x63, 0x04, 0xB4, 0x03,
	0x74, 0x7C, 0x80, 0xFB, 0x30, 0x75, 0x39, 0x80, 0xFC, 0x05, 0x76, 0x38,
	0x80, 0xFC, 0x08, 0x76, 0x3A, 0x80, 0xFC, 0x09, 0x74, 0x53, 0x80, 0xFC,
	0x0B, 0x77, 0x63, 0xB3, 0x08, 0xEB, 0x4C, 0x81, 0x3E, 0x63, 0x04, 0xD4,
	0x03, 0x74, 0xB9, 0x80, 0xFC, 0x05, 0x76, 0x0F, 0x80, 0xFC, 0x08, 0x76,
	0x1A, 0x80, 0xFC, 0x09, 0x74, 0x66, 0x80, 0xFC, 0x0B, 0x77, 0x43, 0xB3,
	0x08, 0xE9, 0x78, 0xFF, 0xB0, 0x00, 0xEB, 0x3A, 0x80, 0x0E, 0x87, 0x04,
	0x02, 0xEB, 0x33, 0x80, 0x0E, 0x87, 0x04, 0x02, 0x80, 0x0E, 0x89, 0x04,
	0x80, 0x80, 0x26, 0x88, 0x04, 0xF0, 0x80, 0x0E, 0x88, 0x04, 0x0B, 0x2E,
	0xF6, 0x06, 0x97, 0x01, 0x01, 0x74, 0x17, 0xEB, 0x47, 0xB3, 0x0B, 0x80,
	0x0E, 0x87, 0x04, 0x02, 0x80, 0x26, 0x89, 0x04, 0x7F, 0x80, 0x26, 0x88,
	0x04, 0xF0, 0x08, 0x1E, 0x88, 0x04, 0xC3, 0x81, 0x3E, 0x63, 0x04, 0xB4,
	0x03, 0x74, 0x29, 0x80, 0xFC, 0x05, 0x76, 0x10, 0x80, 0xFC, 0x08, 0x76,
	0xBA, 0x80, 0xFC, 0x09, 0x74, 0x06, 0x80, 0xFC, 0x0B, 0x76, 0xA0, 0xC3,
	0x80, 0x0E, 0x87, 0x04, 0x02, 0x80, 0x26, 0x89, 0x04, 0x7F, 0x80, 0x26,
	0x88, 0x04, 0xF0, 0x80, 0x0E, 0x88, 0x04, 0x0B, 0x83, 0x0E, 0x10, 0x04,
	0x30, 0xC3, 0x8A, 0x26, 0x10, 0x04, 0x80, 0xE4, 0x30, 0x80, 0xFC, 0x30,
	0x75, 0x10, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x75, 0x4C, 0x80, 0x0E, 0x87,
	0x04, 0x08, 0xB0, 0x0E, 0xEB, 0x1A, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x74,
	0x1E, 0xB4, 0x08, 0x3C, 0x02, 0x76, 0x07, 0x3C, 0x04, 0x73, 0x03, 0x80,
	0xCC, 0x04, 0x08, 0x26, 0x87, 0x04, 0xB0, 0x08, 0xC6, 0x06, 0x84, 0x04,
	0x18, 0xB4, 0x00, 0xA3, 0x85, 0x04, 0xC3, 0x3C, 0x0F, 0x74, 0x11, 0x3C,
	0x07, 0x74, 0x0D, 0x8A, 0xF8, 0xE8, 0xC1, 0xF5, 0x75, 0x2B, 0xA8, 0x02,
	0x8A, 0xC7, 0x75, 0x25, 0xB0, 0x00, 0x80, 0x26, 0x87, 0x04, 0x7F, 0xEB,
	0x1C, 0x3C, 0x0F, 0x74, 0x18, 0x3C, 0x07, 0x74, 0x14, 0x8A, 0xF8, 0xE8,
	0xA3, 0xF5, 0x75, 0x06, 0xA8, 0x02, 0x8A, 0xC7, 0x74, 0x07, 0xB0, 0x07,
	0x80, 0x26, 0x87, 0x04, 0x7F, 0x3A, 0xC0, 0xC3, 0x1E, 0x55, 0x2E, 0x8E,
	0x1E, 0x88, 0x14, 0xFA, 0xC7, 0x06, 0x0C, 0x01, 0x20, 0x57, 0x8C, 0x0E,
	0x0E, 0x01, 0xFB, 0x8E, 0x5E, 0x00, 0x8B, 0x46, 0x10, 0x8B, 0x56, 0x0A,
	0x8B, 0x76, 0x08, 0x8B, 0x6E, 0x04, 0xCD, 0x42, 0x5D, 0x1F, 0x89, 0x46,
	0x10, 0xA0, 0x10, 0x04, 0x24, 0x30, 0x3C, 0x30, 0x75, 0x06, 0xC7, 0x06,
	0x60, 0x04, 0x0C, 0x0B, 0xC3, 0x2E, 0x8E, 0x06, 0x88, 0x14, 0xBF, 0x0C,
	0x01, 0x3C, 0x13, 0x76, 0x1C, 0xE8, 0x49, 0xF5, 0x75, 0x17, 0xBB, 0x20,
	0x57, 0xA8, 0x01, 0x75, 0x2E, 0x24, 0x70, 0x74, 0x2A, 0xBB, 0x20, 0x5F,
	0x3C, 0x20, 0x76, 0x23, 0xBB, 0x30, 0x6E, 0xEB, 0x1E, 0xBB, 0x20, 0x57,
	0x3C, 0x13, 0x74, 0x17, 0x3C, 0x08, 0x72, 0x13, 0xBB, 0x30, 0x6E, 0x74,
	0x0E, 0x3C, 0x11, 0x73, 0x0A, 0xBB, 0x20, 0x5F, 0x3C, 0x0F, 0x73, 0x03,
	0xBB, 0x20, 0x57, 0x8B, 0xC3, 0xFA, 0xAB, 0x8C, 0xC8, 0xAB, 0xFB, 0x8C,
	0xD8, 0x8E, 0xC0, 0xBF, 0x50, 0x04, 0xB9, 0x08, 0x00, 0x33, 0xC0, 0xF3,
	0xAB, 0xA2, 0x62, 0x04, 0xA3, 0x4E, 0x04, 0xA0, 0x49, 0x04, 0x3C, 0x07,
	0x77, 0x18, 0x32, 0xE4, 0x8B, 0xF8, 0xB0, 0x3F, 0x83, 0xFF, 0x06, 0x74,
	0x02, 0xB0, 0x30, 0xA2, 0x66, 0x04, 0x2E, 0x8A, 0x85, 0x11, 0x18, 0xA2,
	0x65, 0x04, 0xE8, 0xBB, 0x2E, 0x56, 0x26, 0xAC, 0x32, 0xE4, 0xA3, 0x4A,
	0x04, 0x26, 0xAC, 0xA2, 0x84, 0x04, 0x26, 0xAC, 0xA3, 0x85, 0x04, 0x26,
	0xAD, 0xA3, 0x4C, 0x04, 0x83, 0xC6, 0x0F, 0x26, 0xAD, 0x86, 0xC4, 0xA3,
	0x60, 0x04, 0x5E, 0xC3, 0x1E, 0x06, 0x56, 0x06, 0xBB, 0x04, 0x00, 0xE8,
	0xDF, 0x01, 0x1F, 0x74, 0x0C, 0x83, 0xC6, 0x23, 0x8B, 0xFB, 0xB9, 0x08,
	0x00, 0xF3, 0xA5, 0x46, 0xA4, 0x5E, 0x07, 0x1F, 0xC3, 0xE8, 0xC9, 0x01,
	0x75, 0x03, 0x0C, 0xFF, 0xC3, 0x53, 0x03, 0xD8, 0xA0, 0x49, 0x04, 0x26,
	0x8A, 0x27, 0x43, 0x80, 0xFC, 0xFF, 0x74, 0x06, 0x3A, 0xC4, 0x75, 0xF3,
	0x5B, 0xC3, 0x0C, 0xFF, 0x5B, 0xC3, 0x26, 0x8A, 0x47, 0x0A, 0x50, 0x26,
	0x8B, 0x4F, 0x02, 0x26, 0x8B, 0x57, 0x04, 0x26, 0x8B, 0x77, 0x06, 0x26,
	0x8B, 0x47, 0x08, 0x26, 0x8B, 0x1F, 0x86, 0xDF, 0x80, 0xE3, 0x3F, 0x8E,
	0xC0, 0xB0, 0x10, 0xE8, 0x63, 0x13, 0x58, 0x3C, 0xFF, 0x74, 0x05, 0x2C,
	0x01, 0xA2, 0x84, 0x04, 0xC3, 0x26, 0x8A, 0x07, 0x32, 0xE4, 0x3B, 0x06,
	0x85, 0x04, 0x75, 0x40, 0xB9, 0x00, 0x01, 0x33, 0xD2, 0x26, 0x8B, 0x77,
	0x03, 0x26, 0x8B, 0x47, 0x05, 0x26, 0x8B, 0x1F, 0x86, 0xDF, 0x80, 0xE3,
	0x3F, 0x8E, 0xC0, 0xB0, 0x00, 0x53, 0xE8, 0x30, 0x13, 0xBA, 0xC4, 0x03,
	0xB0, 0x03, 0xE8, 0x00, 0x2A, 0x80, 0xE4, 0x13, 0x5B, 0x8A, 0xFB, 0x80,
	0xE3, 0x03, 0xB1, 0x02, 0xD2, 0xE3, 0x80, 0xE7, 0x04, 0xFE, 0xC1, 0xD2,
	0xE7, 0x0A, 0xE3, 0x0A, 0xE7, 0xB0, 0x03, 0xEF, 0xC3, 0x32, 0xDB, 0xB0,
	0x01, 0x83, 0x3E, 0x85, 0x04, 0x0E, 0x74, 0x10, 0xB0, 0x02, 0x83, 0x3E,
	0x85, 0x04, 0x08, 0x74, 0x11, 0xB0, 0x04, 0x80, 0xCB, 0x40, 0xEB, 0x0A,
	0x80, 0x3E, 0x49, 0x04, 0x07, 0x75, 0x03, 0x80, 0xCB, 0x80, 0xE8, 0xE4,
	0x12, 0xC3, 0x26, 0x8A, 0x07, 0xFE, 0xC8, 0xA2, 0x84, 0x04, 0x26, 0x8B,
	0x47, 0x01, 0xA3, 0x85, 0x04, 0x26, 0x8B, 0x47, 0x03, 0x26, 0x8B, 0x5F,
	0x05, 0x2E, 0x8E, 0x06, 0x88, 0x14, 0xBF, 0x0C, 0x01, 0xFA, 0xAB, 0x8B,
	0xC3, 0xAB, 0xFB, 0xC3, 0xBB, 0x10, 0x00, 0xE8, 0xDB, 0x00, 0x74, 0x12,
	0x26, 0xC4, 0x5F, 0x0A, 0x8C, 0xC0, 0x0B, 0xC3, 0x74, 0x08, 0xB8, 0x14,
	0x00, 0xE8, 0x05, 0xFF, 0x74, 0x01, 0xC3, 0xF6, 0x06, 0x89, 0x04, 0x08,
	0x75, 0x55, 0x8B, 0x16, 0x63, 0x04, 0x83, 0xC2, 0x06, 0xEC, 0x1E, 0x53,
	0x26, 0x8B, 0x47, 0x0E, 0x8A, 0xE0, 0x26, 0xC5, 0x77, 0x10, 0x26, 0x8B,
	0x5F, 0x0C, 0x0B, 0xDB, 0x74, 0x14, 0xBA, 0xC8, 0x03, 0x8A, 0xC4, 0xEE,
	0x42, 0xB9, 0x03, 0x00, 0xAC, 0xEE, 0xE2, 0xFC, 0xFE, 0xC4, 0x4A, 0x4B,
	0x75, 0xEF, 0x5B, 0x26, 0x8B, 0x47, 0x06, 0x8A, 0xE0, 0x26, 0xC5, 0x77,
	0x08, 0x26, 0x8B, 0x4F, 0x04, 0xE3, 0x13, 0xBA, 0xC0, 0x03, 0x8A, 0xC4,
	0xEE, 0xAC, 0xEE, 0xFE, 0xC4, 0xE2, 0xF7, 0xFE, 0xC4, 0x8A, 0xC4, 0xEE,
	0xAC, 0xEE, 0x1F, 0x26, 0x8A, 0x07, 0x0A, 0xC0, 0x74, 0x14, 0xA8, 0x80,
	0xB0, 0x1F, 0x75, 0x05, 0xA1, 0x85, 0x04, 0xFE, 0xC8, 0x8B, 0x16, 0x63,
	0x04, 0x8A, 0xE0, 0xB0, 0x14, 0xEF, 0xC3, 0xB9, 0x00, 0x40, 0x8A, 0x1E,
	0x49, 0x04, 0x80, 0xFB, 0x13, 0x76, 0x1D, 0x8A, 0xC3, 0xE8, 0x05, 0xF3,
	0x75, 0x16, 0x8A, 0xD8, 0xB7, 0xB8, 0xB8, 0x20, 0x07, 0xF6, 0xC3, 0x02,
	0x75, 0x02, 0xB7, 0xB0, 0xF6, 0xC3, 0x01, 0x75, 0x1F, 0xE9, 0xAD, 0xF4,
	0xB7, 0xB0, 0xB8, 0x20, 0x07, 0x80, 0xFB, 0x07, 0x74, 0x12, 0xB7, 0xB8,
	0x80, 0xFB, 0x03, 0x76, 0x0B, 0x33, 0xC0, 0x80, 0xFB, 0x06, 0x76, 0x04,
	0xB7, 0xA0, 0xB5, 0x80, 0x32, 0xDB, 0x8E, 0xC3, 0x33, 0xFF, 0xF3, 0xAB,
	0xC3, 0x57, 0xC4, 0x3E, 0xA8, 0x04, 0x26, 0xC4, 0x19, 0x8C, 0xC7, 0x0B,
	0xFB, 0x5F, 0xC3, 0x89, 0x0E, 0x60, 0x04, 0x8B, 0x16, 0x63, 0x04, 0xE8,
	0x04, 0x00, 0x89, 0x46, 0x10, 0xC3, 0xF6, 0x06, 0x87, 0x04, 0x08, 0x75,
	0x73, 0x8B, 0xC1, 0x80, 0xE4, 0x60, 0x80, 0xFC, 0x20, 0x75, 0x05, 0xB9,
	0x00, 0x1E, 0xEB, 0x64, 0xF6, 0x06, 0x87, 0x04, 0x01, 0x75, 0x5D, 0x8B,
	0xC1, 0x25, 0xE0, 0xE0, 0x75, 0x56, 0xA0, 0x49, 0x04, 0x3C, 0x04, 0x72,
	0x0D, 0x3C, 0x07, 0x74, 0x09, 0xE8, 0x79, 0xF2, 0x75, 0x46, 0xA8, 0x01,
	0x74, 0x42, 0x3A, 0xCD, 0x73, 0x0E, 0x0A, 0xC9, 0x74, 0x3A, 0x8A, 0xE9,
	0x8A, 0x0E, 0x85, 0x04, 0xFE, 0xC9, 0xEB, 0x30, 0x8A, 0x1E, 0x85, 0x04,
	0x8A, 0xFB, 0xFE, 0xCB, 0x8A, 0xC1, 0x0A, 0xC5, 0x3A, 0xC7, 0x73, 0x0C,
	0x3A, 0xCB, 0x74, 0x1C, 0xFE, 0xCB, 0x3A, 0xEB, 0x74, 0x16, 0xFE, 0xC3,
	0x80, 0xF9, 0x03, 0x76, 0x0F, 0x8A, 0xC5, 0x04, 0x02, 0x3A, 0xC1, 0x73,
	0x1A, 0x80, 0xFD, 0x02, 0x77, 0x0D, 0x8A, 0xCB, 0x8A, 0xE5, 0xB0, 0x0A,
	0xEF, 0x8A, 0xE1, 0xB0, 0x0B, 0xEF, 0xC3, 0x8A, 0xCB, 0x8A, 0xEF, 0xD0,
	0xED, 0xEB, 0xED, 0x80, 0xFF, 0x0E, 0x72, 0x02, 0xFE, 0xCB, 0x2A, 0xE9,
	0x02, 0xEB, 0x8A, 0xCB, 0xEB, 0xDE, 0x8A, 0xC7, 0x86, 0xDF, 0x32, 0xFF,
	0xD1, 0xE3, 0x89, 0x97, 0x50, 0x04, 0x38, 0x06, 0x62, 0x04, 0x75, 0x20,
	0xA0, 0x4A, 0x04, 0xF6, 0xE6, 0x02, 0xC2, 0x80, 0xD4, 0x00, 0x8B, 0x1E,
	0x4E, 0x04, 0xD1, 0xEB, 0x03, 0xD8, 0xB0, 0x0E, 0x8B, 0x16, 0x63, 0x04,
	0x8A, 0xE7, 0xEF, 0x8A, 0xE3, 0xFE, 0xC0, 0xEF, 0xC3, 0x86, 0xDF, 0x32,
	0xFF, 0x03, 0xDB, 0x8B, 0x97, 0x50, 0x04, 0x8B, 0x0E, 0x60, 0x04, 0x89,
	0x4E, 0x0C, 0x89, 0x56, 0x0A, 0xC3, 0xF6, 0x06, 0x87, 0x04, 0x08, 0x74,
	0x0F, 0xCD, 0x42, 0x89, 0x56, 0x0A, 0x89, 0x4E, 0x0C, 0x89, 0x5E, 0x0E,
	0x89, 0x46, 0x10, 0xC3, 0x33, 0xC0, 0x89, 0x46, 0x10, 0xC3, 0x32, 0xE4,
	0x24, 0x07, 0x8B, 0xF8, 0xA2, 0x62, 0x04, 0xF7, 0x26, 0x4C, 0x04, 0xA3,
	0x4E, 0x04, 0x8B, 0xD8, 0xA0, 0x49, 0x04, 0x3C, 0x07, 0x76, 0x0D, 0x3C,
	0x13, 0x76, 0x0B, 0xE8, 0x8B, 0xF1, 0x75, 0x06, 0xA8, 0x01, 0x74, 0x02,
	0xD1, 0xEB, 0x8B, 0x16, 0x63, 0x04, 0xB0, 0x0C, 0x8A, 0xE7, 0xEF, 0x8A,
	0xE3, 0xFE, 0xC0, 0xEF, 0xD1, 0xE7, 0x8B, 0x95, 0x50, 0x04, 0xE9, 0x6F,
	0xFF, 0x83, 0xEC, 0x04, 0x8B, 0xEC, 0x89, 0x46, 0x00, 0x89, 0x5E, 0x02,
	0x8B, 0xC1, 0x80, 0x3E, 0x49, 0x04, 0x0C, 0x76, 0x74, 0x80, 0x3E, 0x49,
	0x04, 0x13, 0x74, 0x05, 0x77, 0x1F, 0xE9, 0xFA, 0x02, 0x52, 0x8B, 0xF8,
	0x81, 0xE7, 0xFF, 0x00, 0x8A, 0xC4, 0xF6, 0x26, 0x4A, 0x04, 0xF7, 0x26,
	0x85, 0x04, 0x03, 0xF8, 0xC1, 0xE7, 0x03, 0x5A, 0x8B, 0xC1, 0xE9, 0x0C,
	0x04, 0xA0, 0x49, 0x04, 0xE8, 0x2A, 0xF1, 0x75, 0xD9, 0xA8, 0x01, 0x8A,
	0xD8, 0x8B, 0xC1, 0x75, 0x3C, 0xE9, 0x37, 0xF2, 0x83, 0xEC, 0x04, 0x8B,
	0xEC, 0x89, 0x46, 0x00, 0x89, 0x5E, 0x02, 0x8B, 0xC1, 0x80, 0x3E, 0x49,
	0x04, 0x0C, 0x76, 0x22, 0x80, 0x3E, 0x49, 0x04, 0x13, 0x74, 0x05, 0x77,
	0x06, 0xE9, 0x79, 0x02, 0xE9, 0xAD, 0x03, 0xA0, 0x49, 0x04, 0xE8, 0xF4,
	0xF0, 0x75, 0xF2, 0xA8, 0x01, 0x8A, 0xD8, 0x8B, 0xC1, 0x75, 0x03, 0xE9,
	0xF7, 0xF1, 0x8B, 0xCA, 0xFD, 0x8B, 0xF0, 0xA0, 0x10, 0x04, 0x24, 0x30,
	0x3C, 0x30, 0xB8, 0x00, 0xB0, 0x74, 0x02, 0xB4, 0xB8, 0x8E, 0xC0, 0x8B,
	0xC6, 0x2A, 0xD0, 0x2A, 0xF4, 0x8A, 0x46, 0x00, 0xFE, 0xC2, 0xFE, 0xC6,
	0x8A, 0xE6, 0x0A, 0xC0, 0x74, 0x04, 0x2A, 0xE0, 0x77, 0x04, 0x8A, 0xC6,
	0x32, 0xE4, 0x50, 0x8A, 0x26, 0x49, 0x04, 0x80, 0xFC, 0x03, 0x76, 0x0D,
	0x80, 0xFC, 0x07, 0x74, 0x08, 0x80, 0xFC, 0x13, 0x77, 0x03, 0xE9, 0xDD,
	0x00, 0x8A, 0xD8, 0x8A, 0xC5, 0xF6, 0x26, 0x4A, 0x04, 0x02, 0xC1, 0x80,
	0xD4, 0x00, 0x8B, 0x3E, 0x4E, 0x04, 0xD1, 0xEF, 0x03, 0xF8, 0x8A, 0xC3,
	0x03, 0xFF, 0x8B, 0xF7, 0x8B, 0x1E, 0x4A, 0x04, 0xF6, 0xE3, 0x50, 0x03,
	0xC0, 0x03, 0xDB, 0x80, 0x7E, 0x01, 0x06, 0x74, 0x04, 0xF7, 0xD8, 0xF7,
	0xDB, 0x8A, 0xCA, 0x32, 0xED, 0x03, 0xF0, 0xA0, 0x49, 0x04, 0x3C, 0x02,
	0x72, 0x1C, 0x3C, 0x03, 0x77, 0x18, 0xF6, 0x06, 0x87, 0x04, 0x04, 0x74,
	0x11, 0xBA, 0xDA, 0x03, 0xEC, 0xA8, 0x08, 0x74, 0xFB, 0x83, 0xEA, 0x02,
	0xA0, 0x65, 0x04, 0x24, 0xF7, 0xEE, 0x3B, 0x0E, 0x4A, 0x04, 0x8C, 0xC0,
	0x8E, 0xD8, 0x58, 0x5A, 0x75, 0x2F, 0x8B, 0xD8, 0x8A, 0xC1, 0xF6, 0xE6,
	0x8B, 0xC8, 0x80, 0x7E, 0x01, 0x07, 0x75, 0x04, 0x4F, 0x4F, 0x4E, 0x4E,
	0xD1, 0xE9, 0xF3, 0x66, 0xA5, 0x73, 0x01, 0xA5, 0x80, 0x7E, 0x01, 0x07,
	0x75, 0x04, 0x47, 0x47, 0x46, 0x46, 0x8B, 0xCB, 0xB0, 0x20, 0x8A, 0x66,
	0x03, 0xF3, 0xAB, 0xEB, 0x27, 0x0A, 0xF6, 0x74, 0x12, 0x51, 0x56, 0x8B,
	0xC7, 0xF3, 0xA5, 0x8B, 0xF8, 0x5E, 0x59, 0x03, 0xF3, 0x03, 0xFB, 0xFE,
	0xCE, 0x75, 0xEE, 0xB0, 0x20, 0x8A, 0x66, 0x03, 0x51, 0x57, 0xF3, 0xAB,
	0x5F, 0x59, 0x03, 0xFB, 0xFE, 0xCA, 0x75, 0xF4, 0x2E, 0x8E, 0x1E, 0x86,
	0x14, 0xA0, 0x49, 0x04, 0x3C, 0x02, 0x72, 0x12, 0x3C, 0x03, 0x77, 0x0E,
	0xF6, 0x06, 0x87, 0x04, 0x04, 0x74, 0x07, 0xBA, 0xD8, 0x03, 0xA0, 0x65,
	0x04, 0xEE, 0x83, 0xC4, 0x04, 0xC3, 0x80, 0xFC, 0x06, 0x74, 0x04, 0x02,
	0xC9, 0x02, 0xD2, 0x8B, 0xF2, 0x8A, 0xD8, 0x8A, 0xC5, 0x32, 0xE4, 0xBF,
	0x40, 0x01, 0xF7, 0xE7, 0x02, 0xC1, 0x80, 0xD4, 0x00, 0x8B, 0x3E, 0x4E,
	0x04, 0x03, 0xF8, 0x8A, 0xC3, 0x32, 0xE4, 0xBA, 0x40, 0x01, 0xF7, 0xE2,
	0x8B, 0xD6, 0x50, 0xBB, 0x50, 0x00, 0x2A, 0xDA, 0x80, 0xDF, 0x00, 0x8A,
	0x6E, 0x03, 0x80, 0x7E, 0x01, 0x07, 0xBD, 0x00, 0x20, 0x74, 0x6E, 0x8A,
	0xCA, 0x8B, 0xF7, 0x03, 0xF0, 0x58, 0x5A, 0x51, 0x32, 0xED, 0x8C, 0xC0,
	0x8E, 0xD8, 0x0A, 0xF6, 0x74, 0x2F, 0xC0, 0xE6, 0x02, 0x8B, 0xC1, 0x8B,
	0xC8, 0xD1, 0xE9, 0xF3, 0xA5, 0xD1, 0xD1, 0xF3, 0xA4, 0x2B, 0xF8, 0x2B,
	0xF0, 0x03, 0xF5, 0x03, 0xFD, 0x8B, 0xC8, 0xD1, 0xE9, 0xF3, 0xA5, 0xD1,
	0xD1, 0xF3, 0xA4, 0x2B, 0xF5, 0x2B, 0xFD, 0x03, 0xF3, 0x03, 0xFB, 0xFE,
	0xCE, 0x75, 0xD8, 0x8B, 0xC8, 0x58, 0x8A, 0xC4, 0xC0, 0xE2, 0x02, 0x8B,
	0xF1, 0x8B, 0xCE, 0xD1, 0xE9, 0xF3, 0xAB, 0xD1, 0xD1, 0xF3, 0xAA, 0x2B,
	0xFE, 0x03, 0xFD, 0x8B, 0xCE, 0xD1, 0xE9, 0xF3, 0xAB, 0xD1, 0xD1, 0xF3,
	0xAA, 0x2B, 0xFD, 0x03, 0xFB, 0xFE, 0xCA, 0x75, 0xE0, 0x83, 0xC4, 0x04,
	0xC3, 0xF7, 0xD8, 0xF7, 0xDB, 0xF7, 0xDD, 0x81, 0xC7, 0xF0, 0x20, 0x80,
	0x3E, 0x49, 0x04, 0x06, 0x74, 0x01, 0x47, 0x8A, 0xCA, 0x8B, 0xF7, 0x03,
	0xF0, 0x58, 0x5A, 0x51, 0x32, 0xED, 0x8C, 0xC0, 0x8E, 0xD8, 0x0A, 0xF6,
	0x74, 0x39, 0xC0, 0xE6, 0x02, 0x8B, 0xC1, 0x8B, 0xC8, 0xD1, 0xE9, 0x73,
	0x01, 0xA4, 0xE3, 0x06, 0x4E, 0x4F, 0xF3, 0xA5, 0x46, 0x47, 0x03, 0xF0,
	0x03, 0xF8, 0x03, 0xF5, 0x03, 0xFD, 0x8B, 0xC8, 0xD1, 0xE9, 0x73, 0x01,
	0xA4, 0xE3, 0x06, 0x4E, 0x4F, 0xF3, 0xA5, 0x46, 0x47, 0x2B, 0xF5, 0x2B,
	0xFD, 0x03, 0xF3, 0x03, 0xFB, 0xFE, 0xCE, 0x75, 0xCE, 0x8B, 0xC8, 0x58,
	0x8A, 0xC4, 0xC0, 0xE2, 0x02, 0x8B, 0xF1, 0x8B, 0xCE, 0xD1, 0xE9, 0x73,
	0x01, 0xAA, 0xE3, 0x04, 0x4F, 0xF3, 0xAB, 0x47, 0x03, 0xFE, 0x03, 0xFD,
	0x8B, 0xCE, 0xD1, 0xE9, 0x73, 0x01, 0xAA, 0xE3, 0x04, 0x4F, 0xF3, 0xAB,
	0x47, 0x2B, 0xFD, 0x03, 0xFB, 0xFE, 0xCA, 0x75, 0xDA, 0x83, 0xC4, 0x04,
	0xC3, 0xFD, 0x8B, 0xC2, 0x8B, 0xF2, 0x8B, 0xF8, 0x81, 0xE7, 0xFF, 0x00,
	0x8A, 0xC4, 0xF6, 0x26, 0x4A, 0x04, 0xF7, 0x26, 0x85, 0x04, 0x03, 0xF8,
	0x32, 0xE4, 0xA0, 0x62, 0x04, 0xF7, 0x26, 0x4C, 0x04, 0x03, 0xF8, 0x8B,
	0x1E, 0x85, 0x04, 0x4B, 0xA1, 0x4A, 0x04, 0xF7, 0xE3, 0x03, 0xF8, 0x8B,
	0xD6, 0xEB, 0x21, 0x8B, 0xF2, 0x8B, 0xF8, 0x81, 0xE7, 0xFF, 0x00, 0x8A,
	0xC4, 0xF6, 0x26, 0x4A, 0x04, 0xF7, 0x26, 0x85, 0x04, 0x03, 0xF8, 0x32,
	0xE4, 0xA0, 0x62, 0x04, 0xF7, 0x26, 0x4C, 0x04, 0x03, 0xF8, 0x8B, 0xD6,
	0x2B, 0xD1, 0xFE, 0xC6, 0xFE, 0xC2, 0x8A, 0x46, 0x00, 0x8A, 0xE6, 0x0A,
	0xC0, 0x74, 0x04, 0x2A, 0xE0, 0x77, 0x04, 0x8A, 0xC6, 0x32, 0xE4, 0x8B,
	0xC8, 0x8B, 0xF2, 0xB8, 0x05, 0x01, 0xBA, 0xCE, 0x03, 0xEF, 0xB8, 0x02,
	0x0F, 0xBA, 0xC4, 0x03, 0xEF, 0x8B, 0xC1, 0x50, 0x8B, 0x1E, 0x4A, 0x04,
	0xF6, 0xE3, 0xF7, 0x26, 0x85, 0x04, 0x8B, 0xC8, 0x8B, 0xD6, 0x2A, 0xDA,
	0x80, 0xDF, 0x00, 0x80, 0x7E, 0x01, 0x07, 0x75, 0x04, 0xF7, 0xD8, 0xF7,
	0xDB, 0x8B, 0xF7, 0x03, 0xF0, 0x8B, 0xC1, 0x8A, 0xCA, 0x32, 0xED, 0x5A,
	0x3B, 0x0E, 0x4A, 0x04, 0x75, 0x33, 0x8B, 0xD8, 0x8A, 0xC1, 0xF6, 0xE6,
	0xF7, 0x26, 0x85, 0x04, 0x8B, 0xC8, 0xB8, 0x00, 0xA0, 0x8E, 0xC0, 0x8E,
	0xD8, 0xF3, 0xA4, 0x8B, 0xCB, 0xBA, 0xCE, 0x03, 0xB8, 0x05, 0x00, 0xEF,
	0x8A, 0x66, 0x03, 0x32, 0xC0, 0xEF, 0xFE, 0xC0, 0xEF, 0x33, 0xC0, 0xF3,
	0xAA, 0xEF, 0xFE, 0xC0, 0xEF, 0x83, 0xC4, 0x04, 0xC3, 0xA0, 0x85, 0x04,
	0xF6, 0xE6, 0x52, 0x8B, 0xD0, 0xB8, 0x00, 0xA0, 0x8E, 0xD8, 0x8E, 0xC0,
	0x0B, 0xD2, 0x74, 0x0D, 0x8B, 0xC1, 0xF3, 0xA4, 0x8B, 0xC8, 0x03, 0xF3,
	0x03, 0xFB, 0x4A, 0x75, 0xF3, 0x2E, 0x8E, 0x1E, 0x86, 0x14, 0x5E, 0xBA,
	0xCE, 0x03, 0xB8, 0x05, 0x00, 0xEF, 0x8A, 0x66, 0x03, 0x32, 0xC0, 0xEF,
	0xFE, 0xC0, 0xEF, 0x8B, 0xD6, 0xA0, 0x85, 0x04, 0xF6, 0xE2, 0x8B, 0xD0,
	0x33, 0xC0, 0x8B, 0xF1, 0xF3, 0xAA, 0x03, 0xFB, 0x8B, 0xCE, 0x4A, 0x75,
	0xF5, 0xBA, 0xCE, 0x03, 0xEF, 0xFE, 0xC0, 0xEF, 0x83, 0xC4, 0x04, 0xC3,
	0xFD, 0x8B, 0xC2, 0x52, 0x8B, 0xF8, 0x81, 0xE7, 0xFF, 0x00, 0x8A, 0xC4,
	0xF6, 0x26, 0x4A, 0x04, 0xF7, 0x26, 0x85, 0x04, 0x03, 0xF8, 0x8B, 0x1E,
	0x85, 0x04, 0x4B, 0xA1, 0x4A, 0x04, 0xF7, 0xE3, 0x03, 0xF8, 0xC1, 0xE7,
	0x03, 0x83, 0xC7, 0x06, 0x5A, 0x2B, 0xD1, 0xFE, 0xC6, 0xFE, 0xC2, 0x8A,
	0x46, 0x00, 0x8A, 0xE6, 0x0A, 0xC0, 0x74, 0x04, 0x2A, 0xE0, 0x77, 0x04,
	0x8A, 0xC6, 0x32, 0xE4, 0x50, 0x8B, 0xF2, 0x8B, 0x1E, 0x4A, 0x04, 0xF6,
	0xE3, 0xF7, 0x26, 0x85, 0x04, 0x8B, 0xD6, 0xC1, 0xE0, 0x03, 0x50, 0x2A,
	0xDA, 0x80, 0xDF, 0x00, 0x80, 0x7E, 0x01, 0x07, 0x75, 0x04, 0xF7, 0xD8,
	0xF7, 0xDB, 0x8A, 0xCA, 0xB5, 0x00, 0x8B, 0xF7, 0x03, 0xF0, 0x58, 0x5A,
	0x3B, 0x0E, 0x4A, 0x04, 0x75, 0x27, 0x8B, 0xD8, 0x8A, 0xC1, 0xF6, 0xE6,
	0xF7, 0x26, 0x85, 0x04, 0x8B, 0xC8, 0xC1, 0xE1, 0x02, 0xB8, 0x00, 0xA0,
	0x8E, 0xC0, 0x8E, 0xD8, 0xF3, 0xA5, 0x8B, 0xCB, 0xD1, 0xE9, 0x8A, 0x46,
	0x03, 0x8A, 0xE0, 0xF3, 0xAB, 0x83, 0xC4, 0x04, 0xC3, 0xC1, 0xE3, 0x03,
	0xC1, 0xE1, 0x02, 0xA0, 0x85, 0x04, 0xF6, 0xE6, 0x52, 0x8B, 0xD0, 0xB8,
	0x00, 0xA0, 0x8E, 0xD8, 0x8E, 0xC0, 0x0B, 0xD2, 0x74, 0x0D, 0x8B, 0xC1,
	0xF3, 0xA5, 0x8B, 0xC8, 0x03, 0xF3, 0x03, 0xFB, 0x4A, 0x75, 0xF3, 0x5A,
	0x2E, 0x8E, 0x1E, 0x86, 0x14, 0xA0, 0x85, 0x04, 0xF6, 0xE2, 0x8B, 0xD0,
	0x8A, 0x46, 0x03, 0x8A, 0xE0, 0x8B, 0xF1, 0xF3, 0xAB, 0x03, 0xFB, 0x8B,
	0xCE, 0x4A, 0x75, 0xF5, 0x83, 0xC4, 0x04, 0xC3, 0xE8, 0x04, 0x00, 0x89,
	0x46, 0x10, 0xC3, 0x8A, 0x26, 0x49, 0x04, 0x80, 0xFC, 0x0C, 0x76, 0x0D,
	0x80, 0xFC, 0x13, 0x74, 0x2E, 0x72, 0x03, 0xE9, 0xE7, 0xED, 0xE9, 0xFC,
	0x00, 0x8B, 0xD0, 0xA1, 0x10, 0x04, 0x24, 0x30, 0x3C, 0x30, 0xB8, 0x00,
	0xB0, 0x74, 0x02, 0xB4, 0xB8, 0x8E, 0xC0, 0x8B, 0xC2, 0x80, 0xFC, 0x02,
	0x72, 0x10, 0x80, 0xFC, 0x04, 0x72, 0x29, 0x80, 0xFC, 0x07, 0x73, 0x06,
	0xEB, 0x4B, 0x90, 0xE9, 0x59, 0x01, 0x0A, 0xFF, 0x75, 0x13, 0x8B, 0x1E,
	0x50, 0x04, 0xA0, 0x4A, 0x04, 0xF6, 0xE7, 0x32, 0xFF, 0x03, 0xD8, 0xD1,
	0xE3, 0x26, 0x8B, 0x07, 0xC3, 0xE8, 0xFA, 0x01, 0x26, 0x8B, 0x05, 0xC3,
	0xF6, 0x06, 0x87, 0x04, 0x04, 0x74, 0xDB, 0xE8, 0xEC, 0x01, 0x8B, 0x16,
	0x63, 0x04, 0x83, 0xC2, 0x06, 0x8C, 0xC0, 0x8E, 0xD8, 0x8B, 0xF7, 0xEC,
	0x24, 0x01, 0x75, 0xFB, 0xFA, 0xEC, 0x24, 0x01, 0x74, 0xFB, 0xAD, 0x2E,
	0x8E, 0x1E, 0x88, 0x14, 0xC3, 0xA0, 0x51, 0x04, 0xF6, 0x26, 0x4A, 0x04,
	0x8B, 0xF8, 0xC1, 0xE7, 0x02, 0xA0, 0x50, 0x04, 0x32, 0xE4, 0x03, 0xF8,
	0x8A, 0x26, 0x49, 0x04, 0x80, 0xFC, 0x06, 0x74, 0x02, 0xD1, 0xE7, 0x81,
	0xC7, 0xF0, 0x20, 0x80, 0xFC, 0x06, 0x8B, 0xF7, 0x8C, 0xC0, 0x8E, 0xD8,
	0xB9, 0x04, 0x00, 0x74, 0x15, 0xE8, 0x5D, 0x01, 0x8A, 0xFB, 0x81, 0xEE,
	0x02, 0x20, 0xE8, 0x54, 0x01, 0x81, 0xC6, 0xAE, 0x1F, 0x53, 0xE2, 0xED,
	0xEB, 0x0F, 0xAC, 0x8A, 0xE0, 0x81, 0xEE, 0x01, 0x20, 0xAC, 0x81, 0xC6,
	0xAF, 0x1F, 0x50, 0xE2, 0xF1, 0x8B, 0xF4, 0x8C, 0xD0, 0x8E, 0xD8, 0x8C,
	0xC8, 0x8E, 0xC0, 0xBF, 0x20, 0x57, 0xBA, 0x80, 0x00, 0xE8, 0x3E, 0x01,
	0x75, 0x1A, 0x2E, 0x8E, 0x06, 0x88, 0x14, 0x26, 0xC4, 0x3E, 0x7C, 0x00,
	0x8C, 0xC0, 0x0B, 0xC7, 0x74, 0x0A, 0xBA, 0x80, 0x00, 0xE8, 0x26, 0x01,
	0x74, 0x02, 0x04, 0x80, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x83, 0xC4, 0x08,
	0xC3, 0xB8, 0x00, 0xA0, 0x8E, 0xC0, 0x8A, 0xC7, 0x32, 0xE4, 0xD1, 0xE0,
	0x8B, 0xF0, 0x8B, 0x84, 0x50, 0x04, 0x8B, 0xF0, 0x81, 0xE6, 0xFF, 0x00,
	0x8A, 0xC4, 0xF6, 0x26, 0x4A, 0x04, 0xF7, 0x26, 0x85, 0x04, 0x03, 0xF0,
	0x32, 0xE4, 0x8A, 0xC7, 0xF7, 0x26, 0x4C, 0x04, 0x03, 0xF0, 0xA0, 0x85,
	0x04, 0xFE, 0xC8, 0xF6, 0x26, 0x4A, 0x04, 0x03, 0xF0, 0xB8, 0x05, 0x08,
	0xBA, 0xCE, 0x03, 0xEF, 0x8B, 0x0E, 0x85, 0x04, 0x8B, 0x1E, 0x4A, 0x04,
	0x43, 0x26, 0xAC, 0x8A, 0xE0, 0xF6, 0xD4, 0x50, 0x44, 0x2B, 0xF3, 0xE2,
	0xF4, 0xB8, 0x05, 0x00, 0xEF, 0x8B, 0xF4, 0x32, 0xC0, 0x2E, 0x8E, 0x06,
	0x88, 0x14, 0x26, 0xC4, 0x1E, 0x0C, 0x01, 0x8B, 0xD6, 0x8B, 0xFB, 0xFA,
	0x8B, 0x0E, 0x85, 0x04, 0xF3, 0x36, 0xA6, 0xFB, 0x74, 0x0A, 0x03, 0x1E,
	0x85, 0x04, 0x8B, 0xF2, 0xFE, 0xC0, 0x75, 0xE9, 0x32, 0xE4, 0x03, 0x26,
	0x85, 0x04, 0xC3, 0xB8, 0x00, 0xA0, 0x8E, 0xC0, 0xA1, 0x50, 0x04, 0x8B,
	0xF8, 0x81, 0xE7, 0xFF, 0x00, 0x8A, 0xC4, 0xF6, 0x26, 0x4A, 0x04, 0xF7,
	0x26, 0x85, 0x04, 0x03, 0xF8, 0xC1, 0xE7, 0x03, 0xA0, 0x85, 0x04, 0xFE,
	0xC8, 0xF6, 0x26, 0x4A, 0x04, 0xB1, 0x03, 0xD3, 0xE0, 0x8B, 0xF7, 0x03,
	0xF0, 0x8B, 0x16, 0x4A, 0x04, 0xD3, 0xE2, 0x83, 0xC2, 0x08, 0x8B, 0x0E,
	0x85, 0x04, 0xB3, 0x08, 0x32, 0xE4, 0x26, 0xAC, 0x3C, 0x01, 0xF5, 0xD0,
	0xD4, 0xFE, 0xCB, 0x75, 0xF5, 0x50, 0x44, 0x2B, 0xF2, 0xE2, 0xEB, 0x8B,
	0xF4, 0x32, 0xC0, 0x2E, 0x8E, 0x06, 0x88, 0x14, 0x26, 0xC4, 0x1E, 0x0C,
	0x01, 0x8B, 0xD6, 0x8B, 0xFB, 0xFA, 0x8B, 0x0E, 0x85, 0x04, 0xF3, 0x36,
	0xA6, 0xFB, 0x74, 0x0A, 0x03, 0x1E, 0x85, 0x04, 0x8B, 0xF2, 0xFE, 0xC0,
	0x75, 0xE9, 0x32, 0xE4, 0x03, 0x26, 0x85, 0x04, 0xC3, 0xB2, 0x08, 0x32,
	0xDB, 0xAD, 0x86, 0xC4, 0xD1, 0xE0, 0x79, 0x01, 0xF9, 0xD0, 0xD3, 0xD1,
	0xE0, 0xFE, 0xCA, 0x75, 0xF3, 0xC3, 0x8B, 0xDF, 0x55, 0x8B, 0xC6, 0x8B,
	0xEF, 0xB9, 0x04, 0x00, 0xF3, 0xA7, 0x8B, 0xFD, 0x74, 0x0C, 0x83, 0xC7,
	0x08, 0x8B, 0xF0, 0x4A, 0x75, 0xEB, 0x33, 0xC0, 0x5D, 0xC3, 0x2B, 0xFB,
	0xB1, 0x03, 0xD3, 0xEF, 0x8B, 0xC7, 0x0A, 0xC9, 0x5D, 0xC3, 0x8A, 0xE3,
	0x8B, 0xF8, 0x8A, 0xDF, 0x32, 0xFF, 0xA1, 0x4C, 0x04, 0xD1, 0xE8, 0xF7,
	0xE3, 0x8B, 0xD0, 0xD1, 0xE3, 0x8B, 0x9F, 0x50, 0x04, 0xA0, 0x4A, 0x04,
	0xF6, 0xE7, 0x03, 0xC2, 0x32, 0xFF, 0x03, 0xC3, 0xD1, 0xE0, 0x97, 0xC3,
	0x8A, 0x26, 0x49, 0x04, 0x80, 0xFC, 0x0C, 0x76, 0x1B, 0x80, 0xFC, 0x13,
	0x74, 0x13, 0x72, 0x03, 0xE9, 0x46, 0xEB, 0x80, 0xFC, 0x11, 0x75, 0x06,
	0x80, 0xE3, 0x80, 0x80, 0xCB, 0x3F, 0xE9, 0xA1, 0x01, 0xE9, 0x52, 0x02,
	0x8A, 0x16, 0x10, 0x04, 0x80, 0xE2, 0x30, 0x80, 0xFA, 0x30, 0xBA, 0x00,
	0xB0, 0x74, 0x02, 0xB6, 0xB8, 0x8E, 0xC2, 0x80, 0xFC, 0x07, 0x73, 0x11,
	0x80, 0xFC, 0x03, 0x77, 0x2D, 0x80, 0xFC, 0x02, 0x72, 0x07, 0xF6, 0x06,
	0x87, 0x04, 0x04, 0x75, 0x24, 0x0A, 0xFF, 0x75, 0x17, 0x8A, 0xE3, 0x8B,
	0xF8, 0x8B, 0x1E, 0x50, 0x04, 0xA0, 0x4A, 0x04, 0xF6, 0xE7, 0x32, 0xFF,
	0x03, 0xC3, 0xD1, 0xE0, 0x97, 0xF3, 0xAB, 0xC3, 0xE8, 0x6F, 0xFF, 0xF3,
	0xAB, 0xC3, 0xE9, 0x9F, 0x00, 0xE8, 0x66, 0xFF, 0x8B, 0x16, 0x63, 0x04,
	0x83, 0xC2, 0x06, 0x8A, 0xD8, 0xEC, 0xA8, 0x01, 0x75, 0xFB, 0xFA, 0xEC,
	0xA8, 0x01, 0x74, 0xFB, 0x8A, 0xC3, 0xAB, 0xFB, 0xE2, 0xEF, 0xC3, 0x8A,
	0x26, 0x49, 0x04, 0x80, 0xFC, 0x0C, 0x76, 0x0D, 0x80, 0xFC, 0x13, 0x74,
	0x84, 0x72, 0x03, 0xE9, 0xA4, 0xEA, 0xE9, 0x1D, 0x01, 0x8A, 0x16, 0x10,
	0x04, 0x80, 0xE2, 0x30, 0x80, 0xFA, 0x30, 0xBA, 0x00, 0xB0, 0x74, 0x02,
	0xB6, 0xB8, 0x8E, 0xC2, 0x80, 0xFC, 0x07, 0x73, 0x11, 0x80, 0xFC, 0x03,
	0x77, 0x4E, 0x80, 0xFC, 0x02, 0x72, 0x07, 0xF6, 0x06, 0x87, 0x04, 0x04,
	0x75, 0x23, 0x0A, 0xFF, 0x75, 0x17, 0x8B, 0xF8, 0x8B, 0x1E, 0x50, 0x04,
	0xA0, 0x4A, 0x04, 0xF6, 0xE7, 0x32, 0xFF, 0x03, 0xC3, 0xD1, 0xE0, 0x97,
	0xAA, 0x47, 0xE2, 0xFC, 0xC3, 0xE8, 0xEE, 0xFE, 0xAA, 0x47, 0xE2, 0xFC,
	0xC3, 0xE8, 0xE6, 0xFE, 0x8B, 0x16, 0x63, 0x04, 0x83, 0xC2, 0x06, 0x8A,
	0xE0, 0xEC, 0xA8, 0x01, 0x75, 0xFB, 0xFA, 0xEC, 0xA8, 0x01, 0x74, 0xFB,
	0x8A, 0xC4, 0xAA, 0xFB, 0x47, 0xE2, 0xEE, 0xC3, 0x8B, 0xD0, 0xA0, 0x51,
	0x04, 0xF6, 0x26, 0x4A, 0x04, 0x8B, 0xF8, 0xC1, 0xE7, 0x02, 0xA0, 0x50,
	0x04, 0x32, 0xE4, 0x03, 0xF8, 0x80, 0xFE, 0x06, 0x74, 0x02, 0xD1, 0xE7,
	0x8A, 0xC2, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x0A, 0xC0, 0x79, 0x08, 0x24,
	0x7F, 0xC5, 0x36, 0x7C, 0x00, 0xEB, 0x04, 0xC5, 0x36, 0x0C, 0x01, 0x32,
	0xE4, 0xC1, 0xE0, 0x03, 0x03, 0xF0, 0x80, 0xFE, 0x06, 0x75, 0x48, 0xB2,
	0x04, 0x0A, 0xDB, 0x78, 0x20, 0xAD, 0xAA, 0x81, 0xC7, 0xFF, 0x1F, 0x8A,
	0xC4, 0xAA, 0x81, 0xEF, 0xB1, 0x1F, 0xFE, 0xCA, 0x75, 0xEF, 0x81, 0xEF,
	0x3F, 0x01, 0x83, 0xEE, 0x08, 0xE2, 0xE0, 0x2E, 0x8E, 0x1E, 0x88, 0x14,
	0xC3, 0xAD, 0x26, 0x30, 0x05, 0x81, 0xC7, 0x00, 0x20, 0x26, 0x30, 0x25,
	0x81, 0xEF, 0xB0, 0x1F, 0xFE, 0xCA, 0x75, 0xED, 0x81, 0xEF, 0x3F, 0x01,
	0x83, 0xEE, 0x08, 0xE2, 0xBE, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0xC3, 0x8A,
	0xFB, 0x80, 0xE7, 0x03, 0x8B, 0xE9, 0xB6, 0x04, 0xE8, 0x2F, 0x01, 0x81,
	0xC7, 0xFE, 0x1F, 0xE8, 0x28, 0x01, 0x81, 0xEF, 0xB2, 0x1F, 0xFE, 0xCE,
	0x75, 0xEE, 0x81, 0xEF, 0x3E, 0x01, 0x83, 0xEE, 0x08, 0x4D, 0x75, 0xE2,
	0x2E, 0x8E, 0x1E, 0x88, 0x14, 0xC3, 0x8B, 0xF0, 0x8B, 0xE9, 0x2E, 0x8E,
	0x06, 0x8A, 0x14, 0x8A, 0xC7, 0x32, 0xE4, 0xD1, 0xE0, 0x8B, 0xF8, 0x8B,
	0x85, 0x50, 0x04, 0x8B, 0xF8, 0x81, 0xE7, 0xFF, 0x00, 0xA0, 0x4A, 0x04,
	0xF6, 0xE4, 0xF7, 0x26, 0x85, 0x04, 0x03, 0xF8, 0x32, 0xE4, 0x8A, 0xC7,
	0xF7, 0x26, 0x4C, 0x04, 0x03, 0xF8, 0x8A, 0xD3, 0x8B, 0x0E, 0x85, 0x04,
	0x8B, 0x1E, 0x4A, 0x04, 0x4B, 0x8B, 0xC6, 0xF6, 0x26, 0x85, 0x04, 0xC5,
	0x36, 0x0C, 0x01, 0x03, 0xF0, 0x8A, 0xE2, 0x32, 0xC0, 0xBA, 0xCE, 0x03,
	0xEF, 0xFE, 0xC0, 0xF6, 0xD4, 0xEF, 0xF6, 0xC4, 0x80, 0x74, 0x2A, 0xBA,
	0xC4, 0x03, 0xB8, 0x02, 0x0F, 0xEF, 0x56, 0x57, 0x8B, 0xD1, 0xA4, 0x03,
	0xFB, 0xE2, 0xFB, 0x8B, 0xCA, 0x5F, 0x5E, 0x47, 0x4D, 0x75, 0xEF, 0xB8,
	0x03, 0x00, 0xBA, 0xCE, 0x03, 0xEF, 0x33, 0xC0, 0xEF, 0x40, 0xEF, 0x2E,
	0x8E, 0x1E, 0x88, 0x14, 0xC3, 0xB8, 0x03, 0x18, 0xEF, 0xBA, 0xC4, 0x03,
	0xB8, 0x02, 0x0F, 0xEF, 0x56, 0x57, 0x8B, 0xD1, 0x26, 0x8A, 0x05, 0xA4,
	0x03, 0xFB, 0xE2, 0xF8, 0x8B, 0xCA, 0x5F, 0x5E, 0x47, 0x4D, 0x75, 0xEC,
	0xB8, 0x03, 0x00, 0xBA, 0xCE, 0x03, 0xEF, 0x33, 0xC0, 0xEF, 0x40, 0xEF,
	0x2E, 0x8E, 0x1E, 0x88, 0x14, 0xC3, 0x8B, 0xE9, 0x8B, 0xC8, 0xB8, 0x00,
	0xA0, 0x8E, 0xC0, 0xA1, 0x50, 0x04, 0x8B, 0xF8, 0x81, 0xE7, 0xFF, 0x00,
	0xA0, 0x4A, 0x04, 0xF6, 0xE4, 0xF7, 0x26, 0x85, 0x04, 0x03, 0xF8, 0xC1,
	0xE7, 0x03, 0xA1, 0x85, 0x04, 0x8B, 0xD0, 0xF6, 0xE1, 0x2E, 0x8E, 0x1E,
	0x88, 0x14, 0xC5, 0x36, 0x0C, 0x01, 0x03, 0xF0, 0x57, 0x52, 0xB9, 0x08,
	0x00, 0x8A, 0x24, 0x46, 0xD0, 0xD4, 0x8A, 0xC3, 0x72, 0x02, 0x8A, 0xC7,
	0xAA, 0xE2, 0xF5, 0x81, 0xC7, 0x38, 0x01, 0x4A, 0x75, 0xE8, 0x5A, 0x5F,
	0x2B, 0xF2, 0x83, 0xC7, 0x08, 0x4D, 0x75, 0xDC, 0x2E, 0x8E, 0x1E, 0x88,
	0x14, 0xC3, 0xB2, 0x08, 0x33, 0xC9, 0xAC, 0xD0, 0xD8, 0x73, 0x02, 0x0A,
	0xCF, 0xD1, 0xC9, 0xD1, 0xC9, 0xFE, 0xCA, 0x75, 0xF2, 0x8B, 0xC1, 0x86,
	0xC4, 0x0A, 0xDB, 0x78, 0x02, 0xAB, 0xC3, 0x26, 0x31, 0x05, 0x83, 0xC7,
	0x02, 0xC3, 0x81, 0x3E, 0x63, 0x04, 0xB4, 0x03, 0x74, 0x54, 0xF6, 0x06,
	0x87, 0x04, 0x08, 0x74, 0x03, 0xCD, 0x42, 0xC3, 0x80, 0xFF, 0x00, 0x74,
	0x46, 0xA0, 0x49, 0x04, 0x3C, 0x04, 0x72, 0x3E, 0x3C, 0x13, 0x76, 0x07,
	0xE8, 0xD2, 0xE6, 0xA8, 0x01, 0x75, 0x33, 0x8A, 0x3E, 0x66, 0x04, 0x80,
	0xE7, 0xDF, 0x80, 0xE3, 0x01, 0x74, 0x03, 0x80, 0xCF, 0x20, 0x88, 0x3E,
	0x66, 0x04, 0x80, 0xE7, 0x10, 0x0A, 0xFB, 0x81, 0xCB, 0x01, 0x02, 0xE8,
	0x83, 0x00, 0xE8, 0x62, 0x00, 0x80, 0xC7, 0x02, 0xFE, 0xC3, 0x80, 0xFB,
	0x03, 0x76, 0xF0, 0xBA, 0xD9, 0x03, 0xA0, 0x66, 0x04, 0xEE, 0xC3, 0x8A,
	0x26, 0x66, 0x04, 0x80, 0xE4, 0xE0, 0x8A, 0xFB, 0x80, 0xE7, 0x1F, 0x0A,
	0xE7, 0x88, 0x26, 0x66, 0x04, 0x8A, 0x46, 0x0E, 0x24, 0x08, 0xD0, 0xE0,
	0x80, 0xE7, 0x07, 0x0A, 0xF8, 0xB3, 0x11, 0xE8, 0x4B, 0x00, 0xB3, 0x10,
	0xE8, 0x28, 0x00, 0xA0, 0x49, 0x04, 0x3C, 0x03, 0x76, 0x13, 0x3C, 0x13,
	0x76, 0x07, 0xE8, 0x64, 0xE6, 0xA8, 0x01, 0x75, 0x08, 0x32, 0xDB, 0xE8,
	0x2F, 0x00, 0xE8, 0x0E, 0x00, 0x8A, 0x1E, 0x66, 0x04, 0x80, 0xE3, 0x20,
	0xB1, 0x05, 0xD2, 0xEB, 0xE9, 0x6A, 0xFF, 0x50, 0x57, 0x06, 0xC4, 0x3E,
	0xA8, 0x04, 0x26, 0xC4, 0x7D, 0x04, 0x8C, 0xC0, 0x0B, 0xC7, 0x74, 0x09,
	0x8A, 0xC3, 0xB4, 0x00, 0x03, 0xF8, 0x8A, 0xC7, 0xAA, 0x07, 0x5F, 0x58,
	0xC3, 0x50, 0x52, 0x8B, 0x16, 0x63, 0x04, 0x80, 0xC2, 0x06, 0xEC, 0x24,
	0x08, 0x74, 0xFB, 0xBA, 0xC0, 0x03, 0x8A, 0xC3, 0xFA, 0xEE, 0x8A, 0xC7,
	0xEE, 0xB0, 0x20, 0xEE, 0xFB, 0x5A, 0x58, 0xC3, 0x77, 0x1A, 0x06, 0x57,
	0x50, 0x52, 0x8B, 0xF8, 0x2E, 0x8E, 0x06, 0x8A, 0x14, 0xB8, 0x40, 0x01,
	0xF7, 0xE2, 0x03, 0xC1, 0x97, 0xAA, 0x5A, 0x58, 0x5F, 0x07, 0x1F, 0xCF,
	0xE9, 0x2F, 0xE7, 0x80, 0xFC, 0x04, 0x72, 0x2F, 0x80, 0xFC, 0x07, 0x74,
	0x2A, 0x80, 0xFC, 0x08, 0x73, 0x40, 0x06, 0x57, 0x53, 0x51, 0x52, 0x8B,
	0xD8, 0xE8, 0x3F, 0x01, 0x8A, 0xC4, 0xD2, 0xC8, 0xF6, 0xD0, 0x22, 0xC3,
	0xD2, 0xE0, 0x0A, 0xDB, 0x78, 0x0F, 0x26, 0x22, 0x25, 0x0A, 0xC4, 0xAA,
	0x8B, 0xC3, 0x5A, 0x59, 0x5B, 0x5F, 0x07, 0x1F, 0xCF, 0x26, 0x30, 0x05,
	0xEB, 0xF2, 0x1E, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x8A, 0x26, 0x49, 0x04,
	0x80, 0xFC, 0x0D, 0x72, 0xB6, 0x80, 0xFC, 0x13, 0x73, 0x92, 0x53, 0x51,
	0x52, 0x87, 0xD9, 0x8A, 0xCB, 0xC1, 0xEB, 0x03, 0x0A, 0xED, 0x75, 0x3F,
	0x8A, 0xE8, 0xA1, 0x4A, 0x04, 0xF7, 0xE2, 0x03, 0xD8, 0xBA, 0xCE, 0x03,
	0x33, 0xC0, 0xEF, 0xB8, 0x01, 0x0F, 0xEF, 0x80, 0xE1, 0x07, 0xB8, 0x08,
	0x80, 0xD2, 0xEC, 0xEF, 0xB8, 0x00, 0xA0, 0x8E, 0xD8, 0x0A, 0xED, 0x78,
	0x24, 0x08, 0x07, 0x8A, 0xE5, 0xEF, 0x08, 0x07, 0xB8, 0x08, 0xFF, 0xEF,
	0x33, 0xC0, 0xEF, 0xFE, 0xC0, 0xEF, 0x8A, 0xC5, 0xB4, 0x0C, 0x5A, 0x59,
	0x5B, 0x1F, 0xCF, 0x03, 0x1E, 0x4C, 0x04, 0xFE, 0xCD, 0x75, 0xF8, 0xEB,
	0xB7, 0xB8, 0x03, 0x18, 0xEF, 0x8A, 0xE5, 0x32, 0xC0, 0xEF, 0x08, 0x07,
	0xB8, 0x03, 0x00, 0xEF, 0xEB, 0xD2, 0x77, 0x18, 0x52, 0x57, 0x2E, 0x8E,
	0x1E, 0x8A, 0x14, 0xB8, 0x40, 0x01, 0xF7, 0xE2, 0x03, 0xC1, 0x8B, 0xF8,
	0x8A, 0x05, 0xB4, 0x0D, 0x5F, 0x5A, 0x1F, 0xCF, 0xE9, 0x42, 0xE6, 0x80,
	0xFC, 0x04, 0x72, 0x20, 0x80, 0xFC, 0x07, 0x74, 0x1B, 0x80, 0xFC, 0x08,
	0x73, 0x2C, 0x06, 0x57, 0x51, 0x52, 0xE8, 0x6E, 0x00, 0xF6, 0xD4, 0x26,
	0x22, 0x25, 0xD2, 0xEC, 0x8A, 0xC4, 0xB4, 0x0D, 0x5A, 0x59, 0x5F, 0x07,
	0x1F, 0xCF, 0x1E, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x8A, 0x26, 0x49, 0x04,
	0x80, 0xFC, 0x0D, 0x72, 0xCA, 0x80, 0xFC, 0x13, 0x73, 0xA8, 0x56, 0x53,
	0x51, 0x52, 0x8B, 0xF1, 0xC1, 0xEE, 0x03, 0x0A, 0xFF, 0x75, 0x32, 0xA1,
	0x4A, 0x04, 0xF7, 0xE2, 0x03, 0xF0, 0x80, 0xE1, 0x07, 0xB3, 0x80, 0xD2,
	0xEB, 0x2E, 0x8E, 0x1E, 0x8A, 0x14, 0xBA, 0xCE, 0x03, 0x32, 0xC9, 0xB8,
	0x04, 0x03, 0xEF, 0x8A, 0x2C, 0x22, 0xEB, 0xF6, 0xDD, 0xD1, 0xC1, 0xFE,
	0xCC, 0x79, 0xF3, 0x8A, 0xC1, 0xB4, 0x0D, 0x5A, 0x59, 0x5B, 0x5E, 0x1F,
	0xCF, 0x03, 0x36, 0x4C, 0x04, 0xFE, 0xCF, 0x75, 0xF8, 0xEB, 0xC4, 0xB8,
	0x00, 0xB8, 0x8E, 0xC0, 0xB0, 0x28, 0xF6, 0xE2, 0xA8, 0x08, 0x74, 0x03,
	0x05, 0xD8, 0x1F, 0x8B, 0xF8, 0x8A, 0xC1, 0xF6, 0xD0, 0x80, 0x3E, 0x49,
	0x04, 0x06, 0x72, 0x08, 0xD1, 0xE9, 0xB4, 0xFE, 0x24, 0x07, 0xEB, 0x06,
	0xB4, 0xFC, 0xD0, 0xE0, 0x24, 0x06, 0xC1, 0xE9, 0x02, 0x03, 0xF9, 0x8A,
	0xC8, 0xD2, 0xC4, 0xC3, 0x74, 0x12, 0x3C, 0x0A, 0x74, 0x68, 0x3C, 0x08,
	0x74, 0x0F, 0x3C, 0x07, 0x75, 0x49, 0xE8, 0xD3, 0x00, 0xE9, 0xBF, 0x00,
	0x32, 0xD2, 0xE9, 0x97, 0x00, 0xFE, 0xCA, 0x79, 0x03, 0xE9, 0xB3, 0x00,
	0xE9, 0x8D, 0x00, 0x8A, 0x0E, 0x62, 0x04, 0x32, 0xED, 0x8B, 0xF9, 0xD1,
	0xE7, 0x8A, 0xF9, 0x8B, 0x95, 0x50, 0x04, 0x3C, 0x0D, 0x76, 0xC9, 0xEB,
	0x1E, 0x50, 0x53, 0x51, 0x52, 0x56, 0x57, 0x55, 0x06, 0x1E, 0x2E, 0x8E,
	0x1E, 0x88, 0x14, 0x8A, 0x3E, 0x62, 0x04, 0x0A, 0xFF, 0x75, 0xD4, 0x8B,
	0x16, 0x50, 0x04, 0x3C, 0x0D, 0x76, 0xA9, 0x52, 0x33, 0xC9, 0xFE, 0xC1,
	0xE8, 0xA4, 0xFA, 0x5A, 0xFE, 0xC2, 0x3A, 0x16, 0x4A, 0x04, 0x75, 0x48,
	0x32, 0xD2, 0x8A, 0x3E, 0x62, 0x04, 0xFE, 0xC6, 0x3A, 0x36, 0x84, 0x04,
	0x76, 0x3A, 0xFE, 0xCE, 0x52, 0xE8, 0x7F, 0xF7, 0x8A, 0xFC, 0xA0, 0x49,
	0x04, 0x3C, 0x04, 0x72, 0x13, 0x3C, 0x07, 0x74, 0x0F, 0x3C, 0x13, 0x76,
	0x09, 0xE8, 0xD1, 0xE3, 0x75, 0x04, 0xA8, 0x01, 0x75, 0x02, 0x32, 0xFF,
	0x8A, 0x16, 0x4A, 0x04, 0xFE, 0xCA, 0x8A, 0x36, 0x84, 0x04, 0x33, 0xC9,
	0xB8, 0x01, 0x06, 0xE8, 0x4B, 0xF2, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x5A,
	0xA0, 0x62, 0x04, 0x0A, 0xC0, 0x75, 0x26, 0x89, 0x16, 0x50, 0x04, 0xA0,
	0x4A, 0x04, 0xF6, 0xE6, 0x02, 0xC2, 0x80, 0xD4, 0x00, 0x8A, 0xD8, 0xB0,
	0x0E, 0x8B, 0x16, 0x63, 0x04, 0xEF, 0x8A, 0xE3, 0xFE, 0xC0, 0xEF, 0x1F,
	0x07, 0x5D, 0x5F, 0x5E, 0x5A, 0x59, 0x5B, 0x58, 0xCF, 0x8A, 0xF8, 0xE8,
	0x70, 0xF1, 0xEB, 0xEF, 0x50, 0x53, 0x51, 0x52, 0xB0, 0x02, 0xB9, 0x6A,
	0x03, 0xE8, 0x68, 0x19, 0x32, 0xC0, 0xB9, 0x19, 0x00, 0xE8, 0x60, 0x19,
	0x5A, 0x59, 0x5B, 0x58, 0xC3, 0xA0, 0x87, 0x04, 0x24, 0x80, 0x0A, 0x06,
	0x49, 0x04, 0x88, 0x46, 0x10, 0xA0, 0x4A, 0x04, 0x88, 0x46, 0x11, 0xA0,
	0x62, 0x04, 0x88, 0x46, 0x0F, 0xC3, 0x62, 0x2D, 0x60, 0x2D, 0x69, 0x2D,
	0x8A, 0x2D, 0x68, 0x2D, 0x68, 0x2D, 0x68, 0x2D, 0xB6, 0x2D, 0xB4, 0x2D,
	0xBD, 0x2D, 0x68, 0x2D, 0x68, 0x2D, 0x68, 0x2D, 0x68, 0x2D, 0x68, 0x2D,
	0x68, 0x2D, 0xD7, 0x2D, 0x68, 0x2D, 0xDC, 0x2D, 0xFA, 0x2D, 0x68, 0x2D,
	0x31, 0x2E, 0x68, 0x2D, 0x3E, 0x2E, 0x57, 0x2E, 0x5E, 0x2E, 0x68, 0x2E,
	0x89, 0x2E, 0x3C, 0x1B, 0x77, 0x1A, 0xF6, 0x06, 0x87, 0x04, 0x08, 0x75,
	0x13, 0x32, 0xE4, 0xD1, 0xE0, 0x8B, 0xF0, 0x2E, 0xFF, 0xA4, 0x12, 0x2D,
	0xB3, 0x11, 0xE8, 0xCC, 0xFC, 0xE8, 0xAB, 0xFC, 0xC3, 0xB9, 0x10, 0x00,
	0x32, 0xDB, 0x8B, 0xF2, 0x26, 0x8A, 0x3C, 0x46, 0xE8, 0xBA, 0xFC, 0xE8,
	0x99, 0xFC, 0xFE, 0xC3, 0xE2, 0xF2, 0x26, 0x8A, 0x3C, 0xE8, 0x8F, 0xFC,
	0xFE, 0xC3, 0xE8, 0xA8, 0xFC, 0xC3, 0xB3, 0x10, 0xE8, 0x0F, 0x01, 0x80,
	0x7E, 0x0E, 0x00, 0x74, 0x10, 0x80, 0x7E, 0x0E, 0x01, 0x75, 0x18, 0x80,
	0xCF, 0x08, 0xA0, 0x65, 0x04, 0x0C, 0x20, 0xEB, 0x08, 0x80, 0xE7, 0xF7,
	0xA0, 0x65, 0x04, 0x24, 0xDF, 0xA2, 0x65, 0x04, 0xE8, 0x7E, 0xFC, 0xC3,
	0xB3, 0x11, 0xE8, 0xE5, 0x00, 0x88, 0x7E, 0x0F, 0xC3, 0xB9, 0x10, 0x00,
	0x32, 0xDB, 0x8B, 0xFA, 0xE8, 0xD7, 0x00, 0x8A, 0xC7, 0xAA, 0xFE, 0xC3,
	0xE2, 0xF6, 0xFE, 0xC3, 0xE8, 0xCB, 0x00, 0x8A, 0xC7, 0xAA, 0xC3, 0x8A,
	0xE6, 0xE9, 0xE6, 0x00, 0xE8, 0x0E, 0x1A, 0x8B, 0xF2, 0x8B, 0xF9, 0x26,
	0xAD, 0x8A, 0xEC, 0x8A, 0xE0, 0x26, 0xAC, 0x8A, 0xC8, 0xE8, 0xFD, 0x00,
	0xE8, 0xE5, 0x19, 0x4F, 0x75, 0xED, 0xE8, 0x07, 0x1A, 0xC3, 0x0A, 0xDB,
	0x74, 0x1C, 0xB3, 0x10, 0xE8, 0x9B, 0x00, 0x8A, 0x46, 0x0F, 0x24, 0x0F,
	0xF6, 0xC7, 0x80, 0x75, 0x05, 0x24, 0x03, 0xC0, 0xE0, 0x02, 0xB3, 0x14,
	0x8A, 0xF8, 0xE8, 0x18, 0xFC, 0xC3, 0xB3, 0x10, 0xE8, 0x7F, 0x00, 0x80,
	0xE7, 0x7F, 0x80, 0x7E, 0x0F, 0x00, 0x74, 0x03, 0x80, 0xCF, 0x80, 0xB3,
	0x10, 0xE8, 0x01, 0xFC, 0xC3, 0xE8, 0xA2, 0x00, 0x88, 0x66, 0x0B, 0x88,
	0x6E, 0x0D, 0x88, 0x4E, 0x0C, 0xC3, 0xE8, 0xAC, 0x19, 0x8B, 0xFA, 0x8B,
	0xF1, 0xE8, 0x77, 0x19, 0x8A, 0xC4, 0x8A, 0xE5, 0xAB, 0x8A, 0xC1, 0xAA,
	0x4E, 0x75, 0xF2, 0xE8, 0xAA, 0x19, 0xC3, 0xBA, 0xC6, 0x03, 0x8A, 0xC3,
	0xEE, 0xC3, 0xBA, 0xC6, 0x03, 0xEC, 0x32, 0xE4, 0x89, 0x46, 0x0E, 0xC3,
	0xB3, 0x14, 0xE8, 0x31, 0x00, 0x8A, 0xCF, 0x80, 0xE1, 0x0F, 0xB3, 0x10,
	0xE8, 0x27, 0x00, 0xB3, 0x01, 0xF6, 0xC7, 0x80, 0x75, 0x05, 0xB3, 0x00,
	0xC0, 0xE9, 0x02, 0x8A, 0xF9, 0x89, 0x5E, 0x0E, 0xC3, 0xE8, 0x61, 0x19,
	0x8B, 0xF1, 0xE8, 0x2E, 0x19, 0xE8, 0x60, 0x00, 0x4B, 0xE8, 0x40, 0x19,
	0x4E, 0x75, 0xF3, 0xE9, 0x62, 0x19, 0x52, 0x8B, 0x16, 0x63, 0x04, 0x80,
	0xC2, 0x06, 0xEC, 0x24, 0x08, 0x74, 0xFB, 0x52, 0xBA, 0xC0, 0x03, 0x8A,
	0xC3, 0xFA, 0xEE, 0x42, 0xEC, 0x5A, 0x8A, 0xF8, 0xEC, 0xBA, 0xC0, 0x03,
	0xB0, 0x20, 0xEE, 0xFB, 0x5A, 0xC3, 0xE8, 0x28, 0x00, 0x8B, 0x16, 0x63,
	0x04, 0x80, 0xC2, 0x06, 0x9C, 0xFA, 0xEC, 0x24, 0x08, 0x74, 0xFB, 0xE9,
	0x04, 0x19, 0x8B, 0x16, 0x63, 0x04, 0x80, 0xC2, 0x06, 0x9C, 0xFA, 0xEC,
	0x24, 0x08, 0x74, 0xFB, 0xE9, 0xDA, 0x18, 0x66, 0x26, 0x85, 0x4B, 0x14,
	0x0E, 0xF6, 0x06, 0x89, 0x04, 0x06, 0x74, 0x44, 0x53, 0x52, 0x25, 0x00,
	0x3F, 0x86, 0xC4, 0x2E, 0xF7, 0x26, 0xE7, 0x2E, 0x52, 0x50, 0x8A, 0xC5,
	0x24, 0x3F, 0x32, 0xE4, 0x2E, 0xF7, 0x26, 0xE9, 0x2E, 0x52, 0x50, 0x8A,
	0xC1, 0x24, 0x3F, 0x32, 0xE4, 0x2E, 0xF7, 0x26, 0xEB, 0x2E, 0x5B, 0x03,
	0xC3, 0x5B, 0x13, 0xD3, 0x5B, 0x03, 0xC3, 0x5B, 0x13, 0xD3, 0x03, 0xC0,
	0x13, 0xD2, 0x05, 0x00, 0x80, 0x83, 0xD2, 0x00, 0x8A, 0xE2, 0x8A, 0xCA,
	0x8A, 0xEA, 0x5A, 0x5B, 0xC3, 0x8F, 0x2F, 0x92, 0x2F, 0xA3, 0x2F, 0xB4,
	0x2F, 0xBD, 0x2F, 0x8E, 0x2F, 0x8E, 0x2F, 0x8E, 0x2F, 0xCE, 0x2F, 0xD4,
	0x2F, 0xE8, 0x2F, 0x8E, 0x2F, 0xFC, 0x2F, 0x8E, 0x2F, 0x8E, 0x2F, 0x8E,
	0x2F, 0xE1, 0x30, 0x25, 0x31, 0xF5, 0x30, 0x04, 0x31, 0x13, 0x31, 0x8E,
	0x2F, 0x8E, 0x2F, 0x8E, 0x2F, 0x66, 0x31, 0x8B, 0x76, 0x04, 0x80, 0xE3,
	0x3F, 0xE8, 0xB3, 0xD2, 0x8A, 0xE0, 0x24, 0x0F, 0x80, 0xE4, 0x30, 0xD0,
	0xEC, 0x0A, 0xC4, 0x3C, 0x19, 0x73, 0x0B, 0xB4, 0x00, 0x8B, 0xF8, 0xD1,
	0xE7, 0x2E, 0xFF, 0xA5, 0x39, 0x2F, 0xC3, 0xE9, 0x30, 0x17, 0xBE, 0x20,
	0x5F, 0x8C, 0xC8, 0x8E, 0xC0, 0x33, 0xD2, 0xB9, 0x00, 0x01, 0xB7, 0x0E,
	0xE9, 0x1F, 0x17, 0xBE, 0x20, 0x57, 0x8C, 0xC8, 0x8E, 0xC0, 0x33, 0xD2,
	0xB9, 0x00, 0x01, 0xB7, 0x08, 0xE9, 0x0E, 0x17, 0xB0, 0x03, 0x8A, 0xE3,
	0xBA, 0xC4, 0x03, 0xEF, 0xC3, 0xBE, 0x30, 0x6E, 0x8C, 0xC8, 0x8E, 0xC0,
	0x33, 0xD2, 0xB9, 0x00, 0x01, 0xB7, 0x10, 0xE9, 0xF4, 0x16, 0xE8, 0xF1,
	0x16, 0xEB, 0x3D, 0x90, 0xBE, 0x20, 0x5F, 0x8C, 0xC8, 0x8E, 0xC0, 0x33,
	0xD2, 0xB9, 0x00, 0x01, 0xB7, 0x0E, 0xE8, 0xDD, 0x16, 0xEB, 0x29, 0x90,
	0xBE, 0x20, 0x57, 0x8C, 0xC8, 0x8E, 0xC0, 0x33, 0xD2, 0xB9, 0x00, 0x01,
	0xB7, 0x08, 0xE8, 0xC9, 0x16, 0xEB, 0x15, 0x90, 0xBE, 0x30, 0x6E, 0x8C,
	0xC8, 0x8E, 0xC0, 0x33, 0xD2, 0xB9, 0x00, 0x01, 0xB7, 0x10, 0xE8, 0xB5,
	0x16, 0xEB, 0x01, 0x90, 0x88, 0x3E, 0x85, 0x04, 0xBB, 0x90, 0x01, 0xA0,
	0x49, 0x04, 0x3C, 0x11, 0x74, 0x4E, 0x3C, 0x12, 0x74, 0x4A, 0xBB, 0xC8,
	0x00, 0x3C, 0x13, 0x74, 0x43, 0x3C, 0x04, 0x72, 0x13, 0x3C, 0x06, 0x76,
	0x3B, 0x3C, 0x09, 0x72, 0x0B, 0x3C, 0x0E, 0x76, 0x33, 0xBB, 0x5E, 0x01,
	0x3C, 0x10, 0x76, 0x2C, 0xBB, 0x90, 0x01, 0xF6, 0x06, 0x89, 0x04, 0x10,
	0x75, 0x22, 0xBB, 0x5E, 0x01, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x75, 0x18,
	0x8A, 0x26, 0x88, 0x04, 0x80, 0xE4, 0x0F, 0x80, 0xFC, 0x03, 0x74, 0x0C,
	0x80, 0xFC, 0x09, 0x74, 0x07, 0x3C, 0x07, 0x74, 0x03, 0xBB, 0xC8, 0x00,
	0x8B, 0xC3, 0x33, 0xD2, 0xF7, 0x36, 0x85, 0x04, 0xFE, 0xC8, 0xA2, 0x84,
	0x04, 0xFE, 0xC0, 0x8B, 0x0E, 0x4A, 0x04, 0xD1, 0xE1, 0x32, 0xE4, 0xF7,
	0xE1, 0x05, 0x00, 0x01, 0xA3, 0x4C, 0x04, 0x8B, 0x16, 0x63, 0x04, 0x8A,
	0x26, 0x85, 0x04, 0xFE, 0xCC, 0x80, 0x3E, 0x49, 0x04, 0x07, 0x75, 0x03,
	0xB0, 0x14, 0xEF, 0x8A, 0xEC, 0x8A, 0xCC, 0xB0, 0x09, 0xE8, 0x98, 0x15,
	0x80, 0xE4, 0xE0, 0x0A, 0xE5, 0xEF, 0xFE, 0xCD, 0x8A, 0xE1, 0x80, 0xFC,
	0x0C, 0x76, 0x04, 0x81, 0xE9, 0x01, 0x01, 0x89, 0x0E, 0x60, 0x04, 0xB0,
	0x0A, 0x8A, 0xE5, 0xEF, 0xFE, 0xC0, 0x8A, 0xE1, 0xEF, 0xA0, 0x84, 0x04,
	0xFE, 0xC0, 0xF6, 0x26, 0x85, 0x04, 0x81, 0xFB, 0xC8, 0x00, 0x75, 0x02,
	0xD1, 0xE0, 0x48, 0x8A, 0xE0, 0xB0, 0x12, 0xEF, 0xC3, 0x8C, 0xC7, 0x2E,
	0x8E, 0x06, 0x88, 0x14, 0xFA, 0x26, 0x89, 0x36, 0x7C, 0x00, 0x26, 0x89,
	0x3E, 0x7E, 0x00, 0xFB, 0xC3, 0x2E, 0x8E, 0x06, 0x88, 0x14, 0xBE, 0x20,
	0x5F, 0x8C, 0xCF, 0xB9, 0x0E, 0x00, 0xEB, 0x28, 0x2E, 0x8E, 0x06, 0x88,
	0x14, 0xBE, 0x20, 0x57, 0x8C, 0xCF, 0xB9, 0x08, 0x00, 0xEB, 0x19, 0x2E,
	0x8E, 0x06, 0x88, 0x14, 0xBE, 0x30, 0x6E, 0x8C, 0xCF, 0xB9, 0x10, 0x00,
	0xEB, 0x0A, 0x0D, 0x18, 0x2A, 0x8C, 0xC7, 0x2E, 0x8E, 0x06, 0x88, 0x14,
	0xFA, 0x26, 0x89, 0x36, 0x0C, 0x01, 0x26, 0x89, 0x3E, 0x0E, 0x01, 0xFB,
	0x80, 0xFB, 0x04, 0x72, 0x02, 0xB3, 0x02, 0xFE, 0xCA, 0x0A, 0xDB, 0x74,
	0x09, 0xFE, 0xCB, 0xB7, 0x00, 0x2E, 0x8A, 0x97, 0x22, 0x31, 0x89, 0x0E,
	0x85, 0x04, 0x88, 0x16, 0x84, 0x04, 0x88, 0x56, 0x10, 0xC3, 0x20, 0x5F,
	0x20, 0x57, 0x20, 0x5B, 0x20, 0x6D, 0x30, 0x6E, 0x30, 0x7E, 0x2E, 0x8E,
	0x06, 0x88, 0x14, 0x0A, 0xFF, 0x75, 0x07, 0x26, 0xC4, 0x1E, 0x7C, 0x00,
	0xEB, 0x21, 0xFE, 0xCF, 0x75, 0x07, 0x26, 0xC4, 0x1E, 0x0C, 0x01, 0xEB,
	0x16, 0xFE, 0xCF, 0x80, 0xFF, 0x05, 0x77, 0x26, 0x8C, 0xC8, 0x8E, 0xC0,
	0x8A, 0xDF, 0xB7, 0x00, 0x03, 0xDB, 0x2E, 0x8B, 0x9F, 0x5A, 0x31, 0x89,
	0x5E, 0x04, 0x8C, 0x46, 0x02, 0xA1, 0x85, 0x04, 0x89, 0x46, 0x0C, 0xA0,
	0x84, 0x04, 0x88, 0x46, 0x0A, 0xC7, 0x46, 0x10, 0x00, 0x00, 0xC3, 0x24,
	0x32, 0xD3, 0x32, 0xE7, 0x32, 0xFE, 0x32, 0x17, 0x33, 0x33, 0x33, 0xB8,
	0x33, 0x80, 0xEB, 0x10, 0x74, 0x1D, 0x80, 0xEB, 0x10, 0x74, 0x44, 0x80,
	0xEB, 0x10, 0x72, 0x12, 0x80, 0xFB, 0x06, 0x77, 0x0D, 0x32, 0xFF, 0xD1,
	0xE3, 0xC6, 0x46, 0x10, 0x12, 0x2E, 0xFF, 0xA7, 0xAF, 0x31, 0xC3, 0x8A,
	0x2E, 0x88, 0x04, 0xB1, 0x04, 0x8A, 0xC5, 0xD2, 0xED, 0x8A, 0xC8, 0x80,
	0xE1, 0x0F, 0x89, 0x4E, 0x0C, 0xA0, 0x87, 0x04, 0xD0, 0xE8, 0x24, 0x01,
	0x88, 0x46, 0x0F, 0xA0, 0x87, 0x04, 0x24, 0x7F, 0xB1, 0x05, 0xD2, 0xE8,
	0x88, 0x46, 0x0E, 0x88, 0x46, 0x10, 0xC3, 0xC3, 0x5A, 0x32, 0x55, 0x32,
	0x50, 0x32, 0x6A, 0x32, 0x84, 0x32, 0x7F, 0x32, 0x99, 0x32, 0x94, 0x32,
	0xAE, 0x32, 0xA9, 0x32, 0xC3, 0x32, 0xBE, 0x32, 0x3C, 0x02, 0x77, 0x28,
	0xF6, 0x06, 0x87, 0x04, 0x08, 0x75, 0x21, 0x8A, 0xD8, 0x32, 0xFF, 0xC1,
	0xE3, 0x03, 0x8B, 0xF3, 0x8A, 0x1E, 0x87, 0x04, 0x80, 0xE3, 0x02, 0xA0,
	0x89, 0x04, 0x24, 0x01, 0x0A, 0xD8, 0x80, 0xE3, 0x03, 0xD1, 0xE3, 0x2E,
	0xFF, 0xA0, 0x0C, 0x32, 0xC6, 0x46, 0x10, 0x00, 0xC3, 0x80, 0x0E, 0x89,
	0x04, 0x80, 0x80, 0x26, 0x89, 0x04, 0xEF, 0x80, 0x26, 0x88, 0x04, 0xF0,
	0x80, 0x0E, 0x88, 0x04, 0x08, 0xC3, 0x80, 0x0E, 0x89, 0x04, 0x80, 0x80,
	0x26, 0x89, 0x04, 0xEF, 0x80, 0x26, 0x88, 0x04, 0xF0, 0x80, 0x0E, 0x88,
	0x04, 0x0B, 0xC3, 0x80, 0x26, 0x89, 0x04, 0x7F, 0x80, 0x26, 0x89, 0x04,
	0xEF, 0x80, 0x26, 0x88, 0x04, 0xF0, 0x80, 0x0E, 0x88, 0x04, 0x09, 0xC3,
	0x80, 0x26, 0x89, 0x04, 0x7F, 0x80, 0x26, 0x89, 0x04, 0xEF, 0x80, 0x26,
	0x88, 0x04, 0xF0, 0x80, 0x0E, 0x88, 0x04, 0x0B, 0xC3, 0x80, 0x26, 0x89,
	0x04, 0x7F, 0x80, 0x0E, 0x89, 0x04, 0x10, 0x80, 0x26, 0x88, 0x04, 0xF0,
	0x80, 0x0E, 0x88, 0x04, 0x09, 0xC3, 0x80, 0x26, 0x89, 0x04, 0x7F, 0x80,
	0x0E, 0x89, 0x04, 0x10, 0x80, 0x26, 0x88, 0x04, 0xF0, 0x80, 0x0E, 0x88,
	0x04, 0x0B, 0xC3, 0x3C, 0x01, 0x77, 0x3B, 0xB0, 0x00, 0x75, 0x02, 0xB0,
	0x08, 0x80, 0x26, 0x89, 0x04, 0xF7, 0x08, 0x06, 0x89, 0x04, 0xC3, 0x3C,
	0x01, 0x77, 0x27, 0x50, 0xB0, 0x00, 0x74, 0x02, 0xB0, 0x0E, 0xBA, 0xE8,
	0x46, 0xEE, 0x58, 0xBA, 0xC3, 0x03, 0x34, 0x01, 0xEE, 0xC3, 0x3C, 0x01,
	0x77, 0x10, 0xB0, 0x00, 0x74, 0x02, 0xB0, 0x02, 0x80, 0x26, 0x89, 0x04,
	0xFD, 0x08, 0x06, 0x89, 0x04, 0xC3, 0xC6, 0x46, 0x10, 0x00, 0xC3, 0x3C,
	0x01, 0x77, 0xF7, 0xB0, 0x00, 0x75, 0x02, 0xB0, 0x01, 0x80, 0x26, 0x87,
	0x04, 0xFE, 0x08, 0x06, 0x87, 0x04, 0xC3, 0x4E, 0x33, 0x4D, 0x33, 0x46,
	0x33, 0x8A, 0x33, 0xC6, 0x46, 0x10, 0x00, 0x3C, 0x03, 0x77, 0x12, 0x8A,
	0xD8, 0x32, 0xFF, 0xD1, 0xE3, 0x2E, 0xFF, 0xA7, 0x2B, 0x33, 0xF6, 0x06,
	0x89, 0x04, 0x40, 0x74, 0x16, 0xC3, 0xF6, 0x06, 0x89, 0x04, 0x40, 0x75,
	0xF8, 0xB8, 0x80, 0x12, 0xB3, 0x35, 0xCD, 0x42, 0xF6, 0x06, 0x89, 0x04,
	0x40, 0x74, 0xEA, 0x8B, 0xFA, 0xE8, 0x0E, 0x06, 0x2E, 0x8E, 0x06, 0x88,
	0x14, 0xBF, 0xB4, 0x01, 0xBE, 0x08, 0x01, 0xA5, 0xA5, 0xBF, 0x08, 0x01,
	0xB8, 0xC6, 0x56, 0xAB, 0x8C, 0xC8, 0xAB, 0xBA, 0xE8, 0x46, 0xB0, 0x06,
	0xEE, 0xC6, 0x46, 0x10, 0x12, 0xC3, 0xF6, 0x06, 0x89, 0x04, 0x40, 0x74,
	0xBC, 0x8B, 0xFA, 0xE8, 0x10, 0x06, 0x2E, 0x8E, 0x06, 0x88, 0x14, 0xBF,
	0x08, 0x01, 0xBE, 0xB4, 0x01, 0xA5, 0xA5, 0xBF, 0xB4, 0x01, 0xB8, 0xC6,
	0x56, 0xAB, 0x8C, 0xC8, 0xAB, 0xBA, 0xE8, 0x46, 0xB0, 0x0E, 0xEE, 0xC6,
	0x46, 0x10, 0x12, 0xC3, 0x3C, 0x01, 0x77, 0x17, 0xB1, 0x05, 0xD2, 0xE0,
	0x8A, 0xD8, 0xBA, 0xC4, 0x03, 0xB0, 0x01, 0xE8, 0x7F, 0x12, 0x80, 0xE4,
	0xDF, 0x0A, 0xE3, 0xB0, 0x01, 0xEF, 0xC3, 0xC6, 0x46, 0x10, 0x00, 0xC3,
	0xC3, 0xE3, 0xFD, 0x3C, 0x03, 0x77, 0xF9, 0x8A, 0xE7, 0x86, 0x3E, 0x62,
	0x04, 0x53, 0x8A, 0xDC, 0x32, 0xFF, 0xD1, 0xE3, 0xA8, 0x01, 0x75, 0x04,
	0xFF, 0xB7, 0x50, 0x04, 0x8B, 0x76, 0x04, 0x89, 0x97, 0x50, 0x04, 0x0B,
	0xD2, 0x75, 0x1E, 0x52, 0xBA, 0xCE, 0x03, 0xB0, 0x06, 0xE8, 0x41, 0x12,
	0x5A, 0xF6, 0xC4, 0x01, 0x75, 0x0F, 0x0B, 0xDB, 0x75, 0x0B, 0x80, 0x7E,
	0x10, 0x00, 0x75, 0x05, 0xE8, 0x86, 0x00, 0x74, 0x51, 0x51, 0x8E, 0x46,
	0x02, 0x26, 0xAC, 0x3C, 0x0D, 0x76, 0x57, 0x8B, 0x5E, 0x0E, 0xF6, 0x46,
	0x10, 0x02, 0x74, 0x04, 0x26, 0x8A, 0x1C, 0x46, 0x56, 0x52, 0x55, 0xB9,
	0x01, 0x00, 0xE8, 0x33, 0xF2, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x5D, 0x5A,
	0xFE, 0xC2, 0x3A, 0x16, 0x4A, 0x04, 0x72, 0x13, 0xFE, 0xC6, 0x32, 0xD2,
	0x3A, 0x36, 0x84, 0x04, 0x76, 0x09, 0xB0, 0x0A, 0x9C, 0x0E, 0xE8, 0xD8,
	0xF7, 0xFE, 0xCE, 0x8A, 0x5E, 0x0F, 0x32, 0xFF, 0xD1, 0xE3, 0x89, 0x97,
	0x50, 0x04, 0x5E, 0x59, 0xE2, 0xAF, 0xF6, 0x46, 0x10, 0x01, 0x75, 0x01,
	0x5A, 0x5B, 0x86, 0x3E, 0x62, 0x04, 0xE8, 0xD1, 0xE9, 0xC3, 0x3C, 0x0D,
	0x74, 0x0C, 0x3C, 0x0A, 0x74, 0x08, 0x3C, 0x07, 0x74, 0x04, 0x3C, 0x08,
	0x75, 0x99, 0x56, 0x9C, 0x0E, 0xE8, 0xA1, 0xF7, 0x8A, 0x5E, 0x0F, 0x32,
	0xFF, 0xD1, 0xE3, 0x8B, 0x97, 0x50, 0x04, 0xEB, 0xC9, 0x52, 0x1E, 0x8A,
	0x16, 0x10, 0x04, 0x80, 0xE2, 0x30, 0x80, 0xFA, 0x30, 0xBA, 0x00, 0xB0,
	0x74, 0x02, 0xB6, 0xB8, 0x8E, 0xC2, 0x8E, 0x5E, 0x02, 0x33, 0xFF, 0x8A,
	0x66, 0x0E, 0x8A, 0x04, 0x3C, 0x0D, 0x76, 0x09, 0xAB, 0x46, 0xE2, 0xF6,
	0x32, 0xC0, 0x1F, 0x5A, 0xC3, 0x3C, 0x0D, 0x74, 0x0C, 0x3C, 0x0A, 0x74,
	0x08, 0x3C, 0x07, 0x74, 0x04, 0x3C, 0x08, 0x75, 0xE7, 0x0C, 0xFF, 0x1F,
	0x5A, 0xC3, 0x0A, 0xC0, 0x75, 0x29, 0xE8, 0x6D, 0x00, 0x74, 0x1B, 0x0A,
	0xC9, 0x74, 0x15, 0xA0, 0x10, 0x04, 0x24, 0x30, 0x3C, 0x30, 0x74, 0x07,
	0xF6, 0xC1, 0x01, 0x75, 0x07, 0xEB, 0x07, 0xF6, 0xC1, 0x01, 0x75, 0x02,
	0x86, 0xCD, 0x89, 0x4E, 0x0E, 0xC7, 0x46, 0x10, 0x1A, 0x00, 0xC3, 0xFE,
	0xC8, 0x75, 0x42, 0xB2, 0xFF, 0xBB, 0x10, 0x00, 0xE8, 0x7A, 0xE8, 0x74,
	0x2F, 0x26, 0xC4, 0x5F, 0x02, 0x8C, 0xC0, 0x0B, 0xC3, 0x74, 0x25, 0x26,
	0x8A, 0x0F, 0x32, 0xED, 0xE3, 0x1E, 0x8B, 0xFB, 0x83, 0xC7, 0x04, 0x8B,
	0x46, 0x0E, 0xF2, 0xAF, 0x74, 0x0E, 0x26, 0x8A, 0x0F, 0x8B, 0xFB, 0x83,
	0xC7, 0x04, 0x86, 0xC4, 0xF2, 0xAF, 0x75, 0x04, 0xB2, 0x0F, 0x2A, 0xD1,
	0x88, 0x16, 0x8A, 0x04, 0xC7, 0x46, 0x10, 0x1A, 0x00, 0xC3, 0x06, 0xB9,
	0xFF, 0xFF, 0xBB, 0x10, 0x00, 0xE8, 0x35, 0xE8, 0x74, 0x1E, 0x26, 0xC4,
	0x5F, 0x02, 0x8C, 0xC0, 0x0B, 0xC3, 0x74, 0x14, 0xA0, 0x8A, 0x04, 0x26,
	0x3A, 0x07, 0x73, 0x0C, 0x32, 0xE4, 0xD1, 0xE0, 0x05, 0x04, 0x00, 0x8B,
	0xF0, 0x26, 0x8B, 0x08, 0x83, 0xF9, 0xFF, 0x07, 0xC3, 0x0F, 0x0F, 0x0F,
	0x0F, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F,
	0x00, 0x0F, 0x01, 0x0F, 0xFF, 0x08, 0x08, 0x08, 0x08, 0x01, 0x01, 0x01,
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x02, 0x01, 0x01,
	0x01, 0x0B, 0xDB, 0x74, 0x05, 0xC6, 0x46, 0x10, 0x00, 0xC3, 0xC6, 0x46,
	0x10, 0x1B, 0xB8, 0x99, 0x3A, 0xAB, 0x8C, 0xC8, 0xAB, 0xB9, 0x0F, 0x00,
	0xBE, 0x49, 0x04, 0xF3, 0xA5, 0xA0, 0x84, 0x04, 0xFE, 0xC0, 0xAA, 0xA1,
	0x85, 0x04, 0xAB, 0xE8, 0x80, 0xFF, 0x8B, 0xC1, 0x86, 0xC4, 0xAB, 0xA0,
	0x49, 0x04, 0x32, 0xE4, 0x8B, 0xD8, 0x2E, 0x8A, 0x87, 0x85, 0x35, 0x3C,
	0x00, 0x74, 0x01, 0x40, 0xAB, 0x2E, 0x8A, 0x87, 0x99, 0x35, 0xAA, 0xB3,
	0x03, 0xA0, 0x49, 0x04, 0x3C, 0x11, 0x74, 0x49, 0x3C, 0x12, 0x74, 0x45,
	0xB3, 0x00, 0x3C, 0x13, 0x74, 0x3F, 0x3C, 0x04, 0x72, 0x12, 0x3C, 0x06,
	0x76, 0x37, 0x3C, 0x09, 0x72, 0x0A, 0x3C, 0x0E, 0x76, 0x2F, 0xB3, 0x01,
	0x3C, 0x10, 0x76, 0x29, 0xB3, 0x02, 0xF6, 0x06, 0x89, 0x04, 0x10, 0x75,
	0x20, 0xB3, 0x01, 0xF6, 0x06, 0x87, 0x04, 0x02, 0x75, 0x17, 0x8A, 0x26,
	0x88, 0x04, 0x80, 0xE4, 0x0F, 0x80, 0xFC, 0x03, 0x74, 0x0B, 0x80, 0xFC,
	0x09, 0x74, 0x06, 0x3C, 0x07, 0x74, 0x02, 0xB3, 0x00, 0x8A, 0xC3, 0xAA,
	0xBA, 0xC4, 0x03, 0xB0, 0x03, 0xE8, 0xF9, 0x0F, 0x8A, 0xC4, 0x24, 0x03,
	0xF6, 0xC4, 0x10, 0x74, 0x02, 0x0C, 0x04, 0xAA, 0x8A, 0xC4, 0x24, 0x0C,
	0xC0, 0xE8, 0x02, 0xF6, 0xC4, 0x20, 0x74, 0x02, 0x0C, 0x04, 0xAA, 0xB3,
	0x10, 0xE8, 0x2E, 0xF8, 0x8A, 0xC7, 0x24, 0x08, 0xC0, 0xE0, 0x02, 0x8A,
	0x26, 0x89, 0x04, 0x80, 0xE4, 0x0F, 0x0A, 0xE0, 0xA0, 0x87, 0x04, 0x24,
	0x01, 0xC0, 0xE0, 0x04, 0x34, 0x10, 0x0A, 0xC4, 0xAA, 0x33, 0xC0, 0xAB,
	0xAA, 0xA0, 0x87, 0x04, 0xC0, 0xE8, 0x05, 0x24, 0x03, 0xAA, 0x32, 0xC9,
	0x06, 0xC4, 0x1E, 0xA8, 0x04, 0x26, 0x8B, 0x47, 0x04, 0x26, 0x0B, 0x47,
	0x06, 0x74, 0x03, 0x80, 0xC9, 0x02, 0x26, 0x8B, 0x47, 0x08, 0x26, 0x0B,
	0x47, 0x0A, 0x74, 0x03, 0x80, 0xC9, 0x04, 0x26, 0x8B, 0x47, 0x0C, 0x26,
	0x0B, 0x47, 0x0E, 0x74, 0x03, 0x80, 0xC9, 0x08, 0x26, 0xC4, 0x5F, 0x10,
	0x8C, 0xC0, 0x0B, 0xC3, 0x74, 0x29, 0x26, 0x8B, 0x47, 0x06, 0x26, 0x0B,
	0x47, 0x08, 0x74, 0x03, 0x80, 0xC9, 0x01, 0x26, 0x8B, 0x47, 0x0A, 0x26,
	0x0B, 0x47, 0x0C, 0x74, 0x03, 0x80, 0xC9, 0x10, 0x26, 0xC4, 0x5F, 0x02,
	0x8C, 0xC0, 0x8C, 0xCB, 0x3B, 0xC3, 0x74, 0x03, 0x80, 0xC9, 0x20, 0x8A,
	0xC1, 0x07, 0xAA, 0xB9, 0x0D, 0x00, 0x32, 0xC0, 0xF3, 0xAA, 0xC3, 0x3D,
	0x37, 0x55, 0x37, 0x87, 0x38, 0xC6, 0x46, 0x10, 0x00, 0x2E, 0xF6, 0x06,
	0x97, 0x01, 0x08, 0x74, 0x04, 0xC6, 0x46, 0x10, 0x1C, 0x3C, 0x02, 0x77,
	0x0B, 0x32, 0xE4, 0xD1, 0xE0, 0x8B, 0xF0, 0x2E, 0xFF, 0xA4, 0x07, 0x37,
	0xC3, 0x00, 0x02, 0x02, 0x03, 0x0D, 0x0E, 0x0E, 0x0F, 0x02, 0x03, 0x03,
	0x04, 0x0E, 0x0F, 0x0F, 0x10, 0x80, 0xE1, 0x0F, 0x74, 0xEA, 0xC6, 0x46,
	0x10, 0x1C, 0x8A, 0xD9, 0x32, 0xFF, 0x32, 0xE4, 0x2E, 0x8A, 0x87, 0x2D,
	0x37, 0x89, 0x46, 0x0E, 0xC3, 0x8B, 0xFB, 0x83, 0xC7, 0x20, 0xF6, 0xC1,
	0x01, 0x75, 0x03, 0xE9, 0xD4, 0x00, 0x26, 0x89, 0x3F, 0xBA, 0xC4, 0x03,
	0xEC, 0xAA, 0xBA, 0xD4, 0x03, 0xEC, 0xAA, 0xBA, 0xCE, 0x03, 0xEC, 0xAA,
	0x8B, 0x16, 0x63, 0x04, 0x83, 0xC2, 0x06, 0xEC, 0xBA, 0xC0, 0x03, 0xEC,
	0xAA, 0xBA, 0xCA, 0x03, 0xEC, 0xAA, 0xBA, 0xC4, 0x03, 0xB9, 0x04, 0x00,
	0xB0, 0x01, 0xE8, 0xB8, 0x0E, 0x86, 0xC4, 0xAA, 0x86, 0xC4, 0xE2, 0xF6,
	0xBA, 0xCC, 0x03, 0xEC, 0xAA, 0x8B, 0x16, 0x63, 0x04, 0xB9, 0x19, 0x00,
	0xB0, 0x00, 0xE8, 0xA0, 0x0E, 0x86, 0xC4, 0xAA, 0x86, 0xC4, 0xE2, 0xF6,
	0x52, 0x83, 0xC2, 0x06, 0xEC, 0xBA, 0xC0, 0x03, 0xB9, 0x14, 0x00, 0x53,
	0xB3, 0x00, 0xE8, 0xDD, 0xF6, 0x8A, 0xC7, 0xAA, 0xFE, 0xC3, 0xE2, 0xF6,
	0x5B, 0xBA, 0xCE, 0x03, 0xB9, 0x09, 0x00, 0xB0, 0x00, 0xE8, 0x75, 0x0E,
	0x86, 0xC4, 0xAA, 0x86, 0xC4, 0xE2, 0xF6, 0x58, 0xAB, 0x1E, 0xB8, 0x00,
	0xA0, 0x8E, 0xD8, 0xBA, 0xC4, 0x03, 0xB0, 0x02, 0xE8, 0x55, 0x0E, 0x50,
	0xB4, 0x0F, 0xEF, 0xB0, 0x04, 0xE8, 0x4C, 0x0E, 0x50, 0xB4, 0x07, 0xEF,
	0xBA, 0xCE, 0x03, 0xB0, 0x04, 0xE8, 0x40, 0x0E, 0x50, 0xB0, 0x05, 0xE8,
	0x3A, 0x0E, 0x50, 0xB4, 0x01, 0xEF, 0xB0, 0x06, 0xE8, 0x31, 0x0E, 0x50,
	0xB4, 0x04, 0xEF, 0xC6, 0x06, 0xFF, 0xFF, 0x00, 0xB9, 0x04, 0x00, 0xB4,
	0x00, 0xB0, 0x04, 0xEF, 0xFE, 0xC4, 0xA0, 0xFF, 0xFF, 0xAA, 0xE2, 0xF5,
	0x58, 0xEF, 0x58, 0xEF, 0x58, 0xEF, 0xBA, 0xC4, 0x03, 0x58, 0xEF, 0x58,
	0xEF, 0x1F, 0xF6, 0x46, 0x0C, 0x02, 0x74, 0x07, 0x26, 0x89, 0x7F, 0x02,
	0xE8, 0x33, 0x01, 0xF6, 0x46, 0x0C, 0x04, 0x74, 0x2C, 0x26, 0x89, 0x7F,
	0x04, 0xBA, 0xC7, 0x03, 0xEC, 0x42, 0x24, 0x01, 0xAA, 0xEC, 0x74, 0x02,
	0xFE, 0xC8, 0xAA, 0xBA, 0xC6, 0x03, 0xEC, 0xAA, 0x53, 0x33, 0xDB, 0xBE,
	0x00, 0x01, 0xE8, 0x56, 0x0F, 0x8A, 0xC4, 0x8A, 0xE5, 0xAB, 0x8A, 0xC1,
	0xAA, 0x4E, 0x75, 0xF2, 0x5B, 0xF6, 0x46, 0x0C, 0x08, 0x74, 0x0B, 0x26,
	0x89, 0x7F, 0x06, 0xC6, 0x46, 0x10, 0x1C, 0xE8, 0xFE, 0xDA, 0xC3, 0xF6,
	0xC1, 0x01, 0x75, 0x03, 0xE9, 0x85, 0x00, 0x26, 0x8B, 0x37, 0x1E, 0xBA,
	0xCE, 0x03, 0xB8, 0x05, 0x00, 0xEF, 0xB8, 0x06, 0x04, 0xEF, 0xBA, 0xC4,
	0x03, 0xB8, 0x04, 0x07, 0xEF, 0xB8, 0x00, 0xA0, 0x8E, 0xD8, 0xBF, 0xFF,
	0xFF, 0xB5, 0x04, 0xB1, 0x01, 0x83, 0xC6, 0x42, 0xB0, 0x02, 0x8A, 0xE1,
	0xEF, 0x26, 0xAC, 0x88, 0x05, 0xD0, 0xE1, 0xFE, 0xCD, 0x75, 0xF1, 0xB0,
	0x02, 0xB4, 0x0F, 0xEF, 0x8A, 0x05, 0x1F, 0x26, 0x8B, 0x37, 0xB0, 0x00,
	0x86, 0x06, 0x89, 0x04, 0x50, 0xFF, 0x36, 0x63, 0x04, 0xE8, 0x4D, 0x0F,
	0x8F, 0x06, 0x63, 0x04, 0x58, 0xA2, 0x89, 0x04, 0x26, 0x8B, 0x37, 0xBA,
	0xC4, 0x03, 0x83, 0xC6, 0x05, 0x26, 0xAC, 0xB4, 0x01, 0x86, 0xE0, 0xEF,
	0x26, 0x8B, 0x37, 0x26, 0xAC, 0xEE, 0xBA, 0xD4, 0x03, 0x26, 0xAC, 0xEE,
	0xBA, 0xCE, 0x03, 0x26, 0xAC, 0xEE, 0x26, 0x8B, 0x54, 0x3D, 0x83, 0xC2,
	0x06, 0xEC, 0xBA, 0xC0, 0x03, 0x26, 0xAC, 0xEE, 0xF6, 0x46, 0x0C, 0x02,
	0x74, 0x07, 0x26, 0x8B, 0x77, 0x02, 0xE8, 0x85, 0x00, 0xF6, 0x46, 0x0C,
	0x04, 0x74, 0x41, 0x26, 0x8B, 0x77, 0x04, 0xC6, 0x46, 0x10, 0x1C, 0xBA,
	0xC6, 0x03, 0x83, 0xC6, 0x02, 0x26, 0xAC, 0xEE, 0xE8, 0xB2, 0x0E, 0x53,
	0x33, 0xDB, 0xBA, 0x00, 0x01, 0x52, 0x26, 0xAD, 0x8A, 0xEC, 0x8A, 0xE0,
	0x26, 0xAC, 0x8A, 0xC8, 0xE8, 0x89, 0x0E, 0x5A, 0x4A, 0x75, 0xEE, 0xE8,
	0xAA, 0x0E, 0x5B, 0x26, 0x8B, 0x77, 0x04, 0xBA, 0xC7, 0x03, 0x26, 0xAC,
	0x0A, 0xC0, 0x75, 0x01, 0x42, 0x26, 0xAC, 0xEE, 0xF6, 0x46, 0x0C, 0x08,
	0x74, 0x07, 0x26, 0x8B, 0x77, 0x06, 0xE8, 0x71, 0xDA, 0xC3, 0xA0, 0x10,
	0x04, 0x24, 0x30, 0xAA, 0xBE, 0x49, 0x04, 0xB9, 0x0F, 0x00, 0xF3, 0xA5,
	0xBE, 0x84, 0x04, 0xB9, 0x07, 0x00, 0xF3, 0xA4, 0xBE, 0xA8, 0x04, 0xA5,
	0xA5, 0xBE, 0x14, 0x00, 0xA5, 0xA5, 0xBE, 0x74, 0x00, 0xA5, 0xA5, 0xBE,
	0x7C, 0x00, 0xA5, 0xA5, 0xBE, 0x0C, 0x01, 0xA5, 0xA5, 0xC3, 0x80, 0x26,
	0x10, 0x04, 0xCF, 0x26, 0xAC, 0x08, 0x06, 0x10, 0x04, 0x06, 0x1E, 0x8C,
	0xD8, 0x8C, 0xC7, 0x97, 0x8E, 0xD8, 0x8E, 0xC7, 0xBF, 0x49, 0x04, 0xB9,
	0x0F, 0x00, 0xF3, 0xA5, 0xBF, 0x84, 0x04, 0xB9, 0x07, 0x00, 0xF3, 0xA4,
	0x1F, 0x07, 0x26, 0xAD, 0xA3, 0xA8, 0x04, 0x26, 0xAD, 0xA3, 0xAA, 0x04,
	0xBF, 0x14, 0x00, 0x26, 0xAD, 0x89, 0x05, 0x26, 0xAD, 0x89, 0x45, 0x02,
	0xBF, 0x74, 0x00, 0x26, 0xAD, 0x89, 0x05, 0x26, 0xAD, 0x89, 0x45, 0x02,
	0xBF, 0x7C, 0x00, 0x26, 0xAD, 0x89, 0x05, 0x26, 0xAD, 0x89, 0x45, 0x02,
	0xBF, 0x0C, 0x01, 0x26, 0xAD, 0x89, 0x05, 0x26, 0xAD, 0x89, 0x45, 0x02,
	0xC3, 0xA9, 0x3A, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x3A, 0x00, 0xC0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xA9, 0x3A, 0x00, 0xE0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x3A, 0x00,
	0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x75,
	0x3A, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A,
	0x00, 0x75, 0x3A, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x02,
	0x01, 0x00, 0x04, 0x04, 0x01, 0x00, 0x05, 0x02, 0x05, 0x00, 0x06, 0x01,
	0x06, 0x05, 0x06, 0x00, 0x08, 0x01, 0x08, 0x00, 0x07, 0x02, 0x07, 0x06,
	0x07, 0xFF, 0xE0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x02, 0x08, 0xFF,
	0x0E, 0x00, 0x00, 0x3F, 0x00, 0x28, 0x18, 0x08, 0x00, 0x08, 0x09, 0x03,
	0x00, 0x02, 0x63, 0x2D, 0x27, 0x28, 0x90, 0x2B, 0xA0, 0xBF, 0x1F, 0x00,
	0xC7, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x14, 0x1F,
	0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x08, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00, 0xFF, 0x28, 0x18, 0x08,
	0x00, 0x08, 0x09, 0x03, 0x00, 0x02, 0x63, 0x2D, 0x27, 0x28, 0x90, 0x2B,
	0xA0, 0xBF, 0x1F, 0x00, 0xC7, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00, 0x9C,
	0x8E, 0x8F, 0x14, 0x1F, 0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x08, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
	0xFF, 0x50, 0x18, 0x08, 0x00, 0x10, 0x01, 0x03, 0x00, 0x02, 0x63, 0x5F,
	0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F, 0x00, 0xC7, 0x06, 0x07, 0x00,
	0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x1F, 0x96, 0xB9, 0xA3, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13,
	0x14, 0x15, 0x16, 0x17, 0x08, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x0E, 0x00, 0xFF, 0x50, 0x18, 0x08, 0x00, 0x10, 0x01, 0x03,
	0x00, 0x02, 0x63, 0x5F, 0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F, 0x00,
	0xC7, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x1F,
	0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x08, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00, 0xFF, 0x28, 0x18, 0x08,
	0x00, 0x40, 0x09, 0x03, 0x00, 0x02, 0x63, 0x2D, 0x27, 0x28, 0x90, 0x2B,
	0x80, 0xBF, 0x1F, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C,
	0x8E, 0x8F, 0x14, 0x00, 0x96, 0xB9, 0xA2, 0xFF, 0x00, 0x13, 0x15, 0x17,
	0x02, 0x04, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x0F, 0x00,
	0xFF, 0x28, 0x18, 0x08, 0x00, 0x40, 0x09, 0x03, 0x00, 0x02, 0x63, 0x2D,
	0x27, 0x28, 0x90, 0x2B, 0x80, 0xBF, 0x1F, 0x00, 0xC1, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x14, 0x00, 0x96, 0xB9, 0xA2, 0xFF,
	0x00, 0x13, 0x15, 0x17, 0x02, 0x04, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13,
	0x14, 0x15, 0x16, 0x17, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x30, 0x0F, 0x00, 0xFF, 0x50, 0x18, 0x08, 0x00, 0x40, 0x01, 0x01,
	0x00, 0x06, 0x63, 0x5F, 0x4F, 0x50, 0x82, 0x54, 0x80, 0xBF, 0x1F, 0x00,
	0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x00,
	0x96, 0xB9, 0xC2, 0xFF, 0x00, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17,
	0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x01, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0xFF, 0x50, 0x18, 0x0E,
	0x00, 0x10, 0x00, 0x03, 0x00, 0x03, 0xA6, 0x5F, 0x4F, 0x50, 0x82, 0x55,
	0x81, 0xBF, 0x1F, 0x00, 0x4D, 0x0B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x83,
	0x85, 0x5D, 0x28, 0x0D, 0x63, 0xBA, 0xA3, 0xFF, 0x00, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x10, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x0E, 0x00, 0x0F, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0A, 0x00,
	0xFF, 0x50, 0x18, 0x10, 0x00, 0x7D, 0x21, 0x0F, 0x00, 0x06, 0x63, 0x5F,
	0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x1F, 0x96, 0xB9, 0xE3, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B,
	0x3C, 0x3D, 0x3E, 0x3F, 0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x18, 0x08,
	0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x23, 0x37, 0x27, 0x2D, 0x37, 0x31,
	0x15, 0x04, 0x11, 0x00, 0x47, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE1,
	0x24, 0xC7, 0x14, 0x08, 0xE0, 0xF0, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x08, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
	0xFF, 0x50, 0x00, 0x00, 0x00, 0x00, 0x29, 0x0F, 0x00, 0x06, 0x62, 0x5F,
	0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x1F, 0x96, 0xB9, 0xE3, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x3F, 0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00,
	0x00, 0x08, 0x05, 0x0F, 0xFF, 0x50, 0x00, 0x00, 0x00, 0x00, 0x29, 0x0F,
	0x00, 0x06, 0x63, 0x5F, 0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F, 0x00,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x1F,
	0x96, 0xB9, 0xE3, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x01, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x0F, 0x00, 0x00, 0x08, 0x05, 0x0F, 0xFF, 0x28, 0x18, 0x08,
	0x00, 0x20, 0x09, 0x0F, 0x00, 0x06, 0x63, 0x2D, 0x27, 0x28, 0x90, 0x2B,
	0x80, 0xBF, 0x1F, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C,
	0x8E, 0x8F, 0x14, 0x00, 0x96, 0xB9, 0xE3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F,
	0xFF, 0x50, 0x18, 0x08, 0x00, 0x40, 0x01, 0x0F, 0x00, 0x06, 0x63, 0x5F,
	0x4F, 0x50, 0x82, 0x54, 0x80, 0xBF, 0x1F, 0x00, 0xC0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x00, 0x96, 0xB9, 0xE3, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x10, 0x11, 0x12, 0x13,
	0x14, 0x15, 0x16, 0x17, 0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x0F, 0xFF, 0x50, 0x18, 0x0E, 0x00, 0x80, 0x05, 0x0F,
	0x00, 0x00, 0xA2, 0x60, 0x4F, 0x56, 0x1A, 0x50, 0xE0, 0x70, 0x1F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x2E, 0x5D, 0x14, 0x00,
	0x5E, 0x6E, 0x8B, 0xFF, 0x00, 0x08, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x0B, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x07, 0x0F, 0xFF, 0x50, 0x18, 0x0E,
	0x00, 0x80, 0x05, 0x0F, 0x00, 0x00, 0xA7, 0x5B, 0x4F, 0x53, 0x17, 0x50,
	0xBA, 0x6C, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E,
	0x2B, 0x5D, 0x14, 0x0F, 0x5F, 0x0A, 0x8B, 0xFF, 0x00, 0x01, 0x00, 0x00,
	0x04, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x04, 0x07, 0x00, 0x00,
	0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x07, 0x0F,
	0xFF, 0x50, 0x18, 0x0E, 0x00, 0x80, 0x01, 0x0F, 0x00, 0x06, 0xA2, 0x5F,
	0x4F, 0x50, 0x82, 0x54, 0x80, 0xBF, 0x1F, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x83, 0x85, 0x5D, 0x28, 0x0F, 0x63, 0xBA, 0xE3, 0xFF,
	0x00, 0x08, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x18, 0x00, 0x00, 0x0B, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x05, 0xFF, 0x50, 0x18, 0x0E, 0x00, 0x80, 0x01, 0x0F,
	0x00, 0x06, 0xA3, 0x5F, 0x4F, 0x50, 0x82, 0x54, 0x80, 0xBF, 0x1F, 0x00,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x85, 0x5D, 0x28, 0x0F,
	0x63, 0xBA, 0xE3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x01, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F, 0xFF, 0x28, 0x18, 0x0E,
	0x00, 0x08, 0x09, 0x03, 0x00, 0x02, 0xA3, 0x2D, 0x27, 0x28, 0x90, 0x2B,
	0xA0, 0xBF, 0x1F, 0x00, 0x4D, 0x0B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x83,
	0x85, 0x5D, 0x14, 0x1F, 0x63, 0xBA, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
	0x08, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
	0xFF, 0x28, 0x18, 0x0E, 0x00, 0x08, 0x09, 0x03, 0x00, 0x02, 0xA3, 0x2D,
	0x27, 0x28, 0x90, 0x2B, 0xA0, 0xBF, 0x1F, 0x00, 0x4D, 0x0B, 0x0C, 0x00,
	0x00, 0x00, 0x00, 0x83, 0x85, 0x5D, 0x14, 0x1F, 0x63, 0xBA, 0xA3, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B,
	0x3C, 0x3D, 0x3E, 0x3F, 0x08, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x0E, 0x00, 0xFF, 0x50, 0x18, 0x0E, 0x00, 0x10, 0x01, 0x03,
	0x00, 0x02, 0xA3, 0x5F, 0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F, 0x00,
	0x4D, 0x0B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x83, 0x85, 0x5D, 0x28, 0x1F,
	0x63, 0xBA, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x08, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00, 0xFF, 0x50, 0x18, 0x0E,
	0x00, 0x10, 0x01, 0x03, 0x00, 0x02, 0xA3, 0x5F, 0x4F, 0x50, 0x82, 0x55,
	0x81, 0xBF, 0x1F, 0x00, 0x4D, 0x0B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x83,
	0x85, 0x5D, 0x28, 0x1F, 0x63, 0xBA, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
	0x08, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00,
	0xFF, 0x28, 0x18, 0x10, 0x00, 0x08, 0x08, 0x03, 0x00, 0x02, 0x67, 0x2D,
	0x27, 0x28, 0x90, 0x2B, 0xA0, 0xBF, 0x1F, 0x00, 0x4F, 0x0D, 0x0E, 0x00,
	0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x14, 0x1F, 0x96, 0xB9, 0xA3, 0xFF,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07, 0x38, 0x39, 0x3A, 0x3B,
	0x3C, 0x3D, 0x3E, 0x3F, 0x0C, 0x00, 0x0F, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x0E, 0x00, 0xFF, 0x50, 0x18, 0x10, 0x00, 0x10, 0x00, 0x03,
	0x00, 0x02, 0x67, 0x5F, 0x4F, 0x50, 0x82, 0x55, 0x81, 0xBF, 0x1F, 0x00,
	0x4F, 0x0D, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x8E, 0x8F, 0x28, 0x1F,
	0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x0C, 0x00, 0x0F, 0x08,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00, 0xFF, 0x50, 0x18, 0x10,
	0x00, 0x10, 0x00, 0x03, 0x00, 0x02, 0x66, 0x5F, 0x4F, 0x50, 0x82, 0x55,
	0x81, 0xBF, 0x1F, 0x00, 0x4F, 0x0D, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x9C,
	0x8E, 0x8F, 0x28, 0x0F, 0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x08, 0x08, 0x08,
	0x08, 0x08, 0x08, 0x08, 0x10, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x0E, 0x00, 0x0F, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0A, 0x00,
	0xFF, 0x50, 0x1D, 0x10, 0x00, 0xA0, 0x01, 0x0F, 0x00, 0x06, 0xE3, 0x5F,
	0x4F, 0x50, 0x82, 0x54, 0x80, 0x0B, 0x3E, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xEA, 0x8C, 0xDF, 0x28, 0x00, 0xE7, 0x04, 0xC3, 0xFF,
	0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
	0x3F, 0x3F, 0x3F, 0x3F, 0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x01, 0xFF, 0x50, 0x1D, 0x10, 0x00, 0xA0, 0x01, 0x0F,
	0x00, 0x06, 0xE3, 0x5F, 0x4F, 0x50, 0x82, 0x54, 0x80, 0x0B, 0x3E, 0x00,
	0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEA, 0x8C, 0xDF, 0x28, 0x00,
	0xE7, 0x04, 0xE3, 0xFF, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x14, 0x07,
	0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x01, 0x00, 0x0F, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0F, 0xFF, 0x28, 0x18, 0x08,
	0x00, 0x20, 0x01, 0x0F, 0x00, 0x0E, 0x63, 0x5F, 0x4F, 0x50, 0x82, 0x54,
	0x80, 0xBF, 0x1F, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C,
	0x8E, 0x8F, 0x28, 0x40, 0x96, 0xB9, 0xA3, 0xFF, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	0x41, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x05, 0x0F,
	0xFF, 0x80, 0x40, 0x2A, 0xC0, 0x2A, 0x00, 0x6A, 0x2A, 0x40, 0xEA, 0x00,
	0x2A, 0x15, 0x00, 0xAA, 0x80, 0x40, 0x2A, 0xC0, 0x2A, 0x00, 0x6A, 0x2A,
	0x40, 0xEA, 0x00, 0x2A, 0x15, 0x00, 0xAA, 0x95, 0x55, 0x3F, 0xD5, 0x3F,
	0x15, 0x7F, 0x3F, 0x55, 0xFF, 0x15, 0x7F, 0x15, 0xBF, 0x95, 0x55, 0x3F,
	0xD5, 0x3F, 0x15, 0x7F, 0x3F, 0x55, 0xFF, 0x15, 0x7F, 0x15, 0xBF, 0x80,
	0x40, 0x2A, 0xC0, 0x2A, 0x00, 0x6A, 0x2A, 0x40, 0xEA, 0x00, 0x2A, 0x15,
	0x00, 0xAA, 0x80, 0x40, 0x2A, 0xC0, 0x2A, 0x00, 0x6A, 0x2A, 0x40, 0xEA,
	0x00, 0x2A, 0x15, 0x00, 0xAA, 0x95, 0x55, 0x3F, 0xD5, 0x3F, 0x15, 0x7F,
	0x3F, 0x55, 0xFF, 0x15, 0x7F, 0x15, 0xBF, 0x95, 0x55, 0x3F, 0xD5, 0x3F,
	0x15, 0x7F, 0x3F, 0x55, 0xFF, 0x15, 0x7F, 0x15, 0xBF, 0x80, 0x85, 0x91,
	0x9C, 0x88, 0x8B, 0x94, 0xA8, 0x80, 0x85, 0x91, 0x9C, 0x88, 0x8B, 0x94,
	0xA8, 0x8E, 0x98, 0xAD, 0xB2, 0xA0, 0xA4, 0xB8, 0xBF, 0x8E, 0x98, 0xAD,
	0xB2, 0xA0, 0xA4, 0xB8, 0xBF, 0x80, 0x85, 0x91, 0x9C, 0x88, 0x8B, 0x94,
	0xA8, 0x80, 0x85, 0x91, 0x9C, 0x88, 0x8B, 0x94, 0xA8, 0x8E, 0x98, 0xAD,
	0xB2, 0xA0, 0xA4, 0xB8, 0xBF, 0x8E, 0x98, 0xAD, 0xB2, 0xA0, 0xA4, 0xB8,
	0xBF, 0x80, 0x40, 0x2A, 0xC0, 0x2A, 0x00, 0x6A, 0x2A, 0x40, 0xEA, 0x00,
	0x6A, 0x00, 0xAA, 0x40, 0x15, 0x40, 0x3F, 0x00, 0x2A, 0x15, 0x00, 0x2A,
	0x3F, 0x2A, 0x00, 0x15, 0x2A, 0x00, 0x3F, 0x6A, 0x15, 0x6A, 0x3F, 0xC0,
	0x15, 0x00, 0x15, 0x2A, 0xC0, 0x3F, 0x00, 0x3F, 0x2A, 0x2A, 0x15, 0x00,
	0xEA, 0x15, 0x2A, 0x3F, 0x00, 0xEA, 0x3F, 0x00, 0x55, 0x00, 0x15, 0x3F,
	0x00, 0x3F, 0x15, 0x00, 0x7F, 0x2A, 0x55, 0x2A, 0x15, 0x3F, 0x2A, 0x3F,
	0x15, 0x2A, 0x7F, 0x15, 0x40, 0x15, 0x00, 0x2A, 0x15, 0x2A, 0x00, 0x15,
	0x6A, 0x3F, 0x40, 0x3F, 0x00, 0x2A, 0x3F, 0x2A, 0x00, 0x3F, 0x6A, 0xD5,
	0x00, 0x15, 0x00, 0x3F, 0xD5, 0x2A, 0x15, 0x2A, 0x3F, 0x3F, 0x00, 0x15,
	0xFF, 0x00, 0x3F, 0x2A, 0x15, 0xFF, 0x2A, 0x55, 0x00, 0x55, 0x2A, 0x15,
	0x3F, 0x00, 0x15, 0x3F, 0x2A, 0x3F, 0x15, 0x00, 0x3F, 0x15, 0x2A, 0x7F,
	0x00, 0x7F, 0x2A, 0x95, 0x55, 0x3F, 0xD5, 0x3F, 0x15, 0x7F, 0x3F, 0x55,
	0xFF, 0x15, 0x7F, 0x15, 0xBF, 0x80, 0x85, 0x91, 0x9C, 0x88, 0x8B, 0xA5,
	0xA8, 0x82, 0x87, 0x9B, 0xA0, 0x8F, 0x94, 0xA8, 0xAC, 0x8C, 0x91, 0xA5,
	0xAA, 0x94, 0x9E, 0xB2, 0xB6, 0x8F, 0x93, 0xA7, 0xAC, 0x9B, 0xA0, 0xB4,
	0xB9, 0x86, 0x8B, 0x9F, 0xA4, 0x93, 0x98, 0xAC, 0xB0, 0x89, 0x8D, 0xA1,
	0xA6, 0x95, 0x9A, 0xAE, 0xB3, 0x93, 0x97, 0xAB, 0xB0, 0x9F, 0xA4, 0xB8,
	0xBD, 0x8E, 0x98, 0xAD, 0xB2, 0xA0, 0xA4, 0xB8, 0xBF, 0x80, 0x80, 0x80,
	0x80, 0x80, 0x80, 0x80, 0x80, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xBF, 0xBF, 0xBF,
	0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
	0x80, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA,
	0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF,
	0xBF, 0x80, 0x40, 0x2A, 0xC0, 0x2A, 0x00, 0x6A, 0x2A, 0x40, 0xEA, 0x00,
	0x2A, 0x15, 0x00, 0xAA, 0x95, 0x55, 0x3F, 0xD5, 0x3F, 0x15, 0x7F, 0x3F,
	0x55, 0xFF, 0x15, 0x7F, 0x15, 0xBF, 0x80, 0x85, 0x91, 0x9C, 0x88, 0x8B,
	0x94, 0xA8, 0x8E, 0x98, 0xAD, 0xB2, 0xA0, 0xA4, 0xB8, 0xBF, 0x80, 0x85,
	0x88, 0x8B, 0x8E, 0x91, 0x94, 0x98, 0x9C, 0xA0, 0xA4, 0xA8, 0xAD, 0xB2,
	0xB8, 0xBF, 0x40, 0x3F, 0x10, 0x00, 0x3F, 0x1F, 0x00, 0x3F, 0x2F, 0x00,
	0x3F, 0xFF, 0x00, 0x3F, 0x00, 0x2F, 0x3F, 0x00, 0x1F, 0x3F, 0x00, 0x10,
	0x3F, 0x40, 0x3F, 0x10, 0x00, 0x3F, 0x1F, 0x00, 0x3F, 0x2F, 0x00, 0x7F,
	0x00, 0x2F, 0x3F, 0x00, 0x1F, 0x3F, 0x00, 0x10, 0x3F, 0x00, 0xC0, 0x3F,
	0x00, 0x3F, 0x10, 0x00, 0x3F, 0x1F, 0x00, 0x3F, 0x2F, 0x00, 0x7F, 0x00,
	0x2F, 0x3F, 0x00, 0x1F, 0x3F, 0x00, 0x10, 0x3F, 0x5F, 0x3F, 0x27, 0x1F,
	0x3F, 0x2F, 0x1F, 0x3F, 0x37, 0x1F, 0x3F, 0xFF, 0x1F, 0x3F, 0x1F, 0x37,
	0x3F, 0x1F, 0x2F, 0x3F, 0x1F, 0x27, 0x3F, 0x5F, 0x3F, 0x27, 0x1F, 0x3F,
	0x2F, 0x1F, 0x3F, 0x37, 0x1F, 0x7F, 0x1F, 0x37, 0x3F, 0x1F, 0x2F, 0x3F,
	0x1F, 0x27, 0x3F, 0x1F, 0xDF, 0x3F, 0x1F, 0x3F, 0x27, 0x1F, 0x3F, 0x2F,
	0x1F, 0x3F, 0x37, 0x1F, 0x7F, 0x1F, 0x37, 0x3F, 0x1F, 0x2F, 0x3F, 0x1F,
	0x27, 0x3F, 0x6D, 0x3F, 0x31, 0x2D, 0x3F, 0x36, 0x2D, 0x3F, 0x3A, 0x2D,
	0x3F, 0xFF, 0x2D, 0x3F, 0x2D, 0x3A, 0x3F, 0x2D, 0x36, 0x3F, 0x2D, 0x31,
	0x3F, 0x6D, 0x3F, 0x31, 0x2D, 0x3F, 0x36, 0x2D, 0x3F, 0x3A, 0x2D, 0x7F,
	0x2D, 0x3A, 0x3F, 0x2D, 0x36, 0x3F, 0x2D, 0x31, 0x3F, 0x2D, 0xED, 0x3F,
	0x2D, 0x3F, 0x31, 0x2D, 0x3F, 0x36, 0x2D, 0x3F, 0x3A, 0x2D, 0x7F, 0x2D,
	0x3A, 0x3F, 0x2D, 0x36, 0x3F, 0x2D, 0x31, 0x3F, 0x40, 0x1C, 0x07, 0x00,
	0x1C, 0x0E, 0x00, 0x1C, 0x15, 0x00, 0x1C, 0xDC, 0x00, 0x1C, 0x00, 0x15,
	0x1C, 0x00, 0x0E, 0x1C, 0x00, 0x07, 0x1C, 0x40, 0x1C, 0x07, 0x00, 0x1C,
	0x0E, 0x00, 0x1C, 0x15, 0x00, 0x5C, 0x00, 0x15, 0x1C, 0x00, 0x0E, 0x1C,
	0x00, 0x07, 0x1C, 0x00, 0xC0, 0x1C, 0x00, 0x1C, 0x07, 0x00, 0x1C, 0x0E,
	0x00, 0x1C, 0x15, 0x00, 0x5C, 0x00, 0x15, 0x1C, 0x00, 0x0E, 0x1C, 0x00,
	0x07, 0x1C, 0x4E, 0x1C, 0x11, 0x0E, 0x1C, 0x15, 0x0E, 0x1C, 0x18, 0x0E,
	0x1C, 0xDC, 0x0E, 0x1C, 0x0E, 0x18, 0x1C, 0x0E, 0x15, 0x1C, 0x0E, 0x11,
	0x1C, 0x4E, 0x1C, 0x11, 0x0E, 0x1C, 0x15, 0x0E, 0x1C, 0x18, 0x0E, 0x5C,
	0x0E, 0x18, 0x1C, 0x0E, 0x15, 0x1C, 0x0E, 0x11, 0x1C, 0x0E, 0xCE, 0x1C,
	0x0E, 0x1C, 0x11, 0x0E, 0x1C, 0x15, 0x0E, 0x1C, 0x18, 0x0E, 0x5C, 0x0E,
	0x18, 0x1C, 0x0E, 0x15, 0x1C, 0x0E, 0x11, 0x1C, 0x54, 0x1C, 0x16, 0x14,
	0x1C, 0x18, 0x14, 0x1C, 0x1A, 0x14, 0x1C, 0xDC, 0x14, 0x1C, 0x14, 0x1A,
	0x1C, 0x14, 0x18, 0x1C, 0x14, 0x16, 0x1C, 0x54, 0x1C, 0x16, 0x14, 0x1C,
	0x18, 0x14, 0x1C, 0x1A, 0x14, 0x5C, 0x14, 0x1A, 0x1C, 0x14, 0x18, 0x1C,
	0x14, 0x16, 0x1C, 0x14, 0xD4, 0x1C, 0x14, 0x1C, 0x16, 0x14, 0x1C, 0x18,
	0x14, 0x1C, 0x1A, 0x14, 0x5C, 0x14, 0x1A, 0x1C, 0x14, 0x18, 0x1C, 0x14,
	0x16, 0x1C, 0x40, 0x10, 0x04, 0x00, 0x10, 0x08, 0x00, 0x10, 0x0C, 0x00,
	0x10, 0xD0, 0x00, 0x10, 0x00, 0x0C, 0x10, 0x00, 0x08, 0x10, 0x00, 0x04,
	0x10, 0x40, 0x10, 0x04, 0x00, 0x10, 0x08, 0x00, 0x10, 0x0C, 0x00, 0x50,
	0x00, 0x0C, 0x10, 0x00, 0x08, 0x10, 0x00, 0x04, 0x10, 0x00, 0xC0, 0x10,
	0x00, 0x10, 0x04, 0x00, 0x10, 0x08, 0x00, 0x10, 0x0C, 0x00, 0x50, 0x00,
	0x0C, 0x10, 0x00, 0x08, 0x10, 0x00, 0x04, 0x10, 0x48, 0x10, 0x0A, 0x08,
	0x10, 0x0C, 0x08, 0x10, 0x0E, 0x08, 0x10, 0xD0, 0x08, 0x10, 0x08, 0x0E,
	0x10, 0x08, 0x0C, 0x10, 0x08, 0x0A, 0x10, 0x48, 0x10, 0x0A, 0x08, 0x10,
	0x0C, 0x08, 0x10, 0x0E, 0x08, 0x50, 0x08, 0x0E, 0x10, 0x08, 0x0C, 0x10,
	0x08, 0x0A, 0x10, 0x08, 0xC8, 0x10, 0x08, 0x10, 0x0A, 0x08, 0x10, 0x0C,
	0x08, 0x10, 0x0E, 0x08, 0x50, 0x08, 0x0E, 0x10, 0x08, 0x0C, 0x10, 0x08,
	0x0A, 0x10, 0x4B, 0x10, 0x0C, 0x0B, 0x10, 0x0D, 0x0B, 0x10, 0x0F, 0x0B,
	0x10, 0xD0, 0x0B, 0x10, 0x0B, 0x0F, 0x10, 0x0B, 0x0D, 0x10, 0x0B, 0x0C,
	0x10, 0x4B, 0x10, 0x0C, 0x0B, 0x10, 0x0D, 0x0B, 0x10, 0x0F, 0x0B, 0x50,
	0x0B, 0x0F, 0x10, 0x0B, 0x0D, 0x10, 0x0B, 0x0C, 0x10, 0x0B, 0xCB, 0x10,
	0x0B, 0x10, 0x0C, 0x0B, 0x10, 0x0D, 0x0B, 0x10, 0x0F, 0x0B, 0x50, 0x0B,
	0x0F, 0x10, 0x0B, 0x0D, 0x10, 0x0B, 0x0C, 0x10, 0xEE, 0x42, 0x8A, 0xE0,
	0xEC, 0x4A, 0x86, 0xC4, 0xC3, 0xEE, 0x42, 0xFE, 0xC0, 0x8A, 0xE0, 0xEC,
	0x4A, 0x86, 0xC4, 0xC3, 0x8A, 0xD8, 0xE4, 0x61, 0x8A, 0xF8, 0x24, 0xFC,
	0x0A, 0xC3, 0x0C, 0x01, 0xE6, 0x61, 0xB0, 0xB6, 0xE6, 0x43, 0xB0, 0x50,
	0xE6, 0x42, 0xB0, 0x05, 0xE6, 0x42, 0xBA, 0xFF, 0xFF, 0xB0, 0x80, 0xE6,
	0x43, 0xE4, 0x42, 0x8A, 0xE0, 0xE4, 0x42, 0x86, 0xC4, 0x3B, 0xC2, 0x8B,
	0xD0, 0x72, 0xEE, 0xE2, 0xEC, 0xE4, 0x61, 0x22, 0xC7, 0xE6, 0x61, 0xC3,
	0x50, 0x53, 0x51, 0x52, 0x50, 0xB9, 0xCC, 0x06, 0xB0, 0x03, 0xE8, 0xBB,
	0xFF, 0x58, 0x50, 0xB9, 0x2C, 0x01, 0xB0, 0x00, 0xE8, 0xB1, 0xFF, 0xB9,
	0x44, 0x02, 0xB0, 0x02, 0xE8, 0xA9, 0xFF, 0x58, 0xFE, 0xC8, 0x75, 0xEA,
	0x5A, 0x59, 0x5B, 0x58, 0xC3, 0x50, 0x56, 0x06, 0xE8, 0x8C, 0x03, 0xE8,
	0x6B, 0x01, 0x07, 0x5E, 0x58, 0xC3, 0x50, 0x53, 0x51, 0x52, 0x57, 0x56,
	0x1E, 0x06, 0xE8, 0xE1, 0x00, 0x52, 0xBA, 0xC4, 0x03, 0xB8, 0x02, 0x04,
	0xEF, 0xB8, 0x04, 0x07, 0xEF, 0xBA, 0xCE, 0x03, 0xB8, 0x04, 0x02, 0xEF,
	0xB8, 0x05, 0x00, 0xEF, 0xB8, 0x06, 0x04, 0xEF, 0x5A, 0x8C, 0xC0, 0x8E,
	0xD8, 0xB8, 0x00, 0xA0, 0x8E, 0xC0, 0x53, 0x80, 0xE3, 0x07, 0xD0, 0xCB,
	0xD0, 0xCB, 0xD0, 0xDB, 0x73, 0x03, 0x80, 0xC3, 0x10, 0xD0, 0xE3, 0x8A,
	0xE3, 0xB0, 0x00, 0x8B, 0xF8, 0x0B, 0xD2, 0x74, 0x07, 0xB8, 0x20, 0x00,
	0xF7, 0xE2, 0x03, 0xF8, 0xBA, 0x20, 0x00, 0x2A, 0xD7, 0xE3, 0x11, 0xE8,
	0x8B, 0xC7, 0x75, 0x0C, 0x51, 0x8A, 0xCF, 0xB5, 0x00, 0xF3, 0xA4, 0x03,
	0xFA, 0x59, 0xE2, 0xF4, 0x5B, 0x07, 0x1F, 0xE8, 0x2E, 0x00, 0xBA, 0xC4,
	0x03, 0xB8, 0x02, 0x03, 0xEF, 0xB8, 0x04, 0x03, 0xEF, 0xBA, 0xCE, 0x03,
	0xB8, 0x04, 0x00, 0xEF, 0xB8, 0x05, 0x10, 0xEF, 0xB8, 0x06, 0x0A, 0x81,
	0x3E, 0x63, 0x04, 0xB4, 0x03, 0x74, 0x02, 0xB4, 0x0E, 0xEF, 0xE8, 0x44,
	0x00, 0x5E, 0x5F, 0x5A, 0x59, 0x5B, 0x58, 0xC3, 0x50, 0x51, 0x57, 0x56,
	0x06, 0xB9, 0x00, 0xA0, 0x8E, 0xC1, 0xF6, 0xC3, 0xC0, 0x74, 0x28, 0xB9,
	0x07, 0x00, 0xBE, 0x20, 0x6D, 0xF6, 0xC3, 0x80, 0x75, 0x05, 0xBE, 0x30,
	0x7E, 0xB1, 0x08, 0x2E, 0x8A, 0x24, 0x46, 0x0A, 0xE4, 0x74, 0x10, 0x32,
	0xC0, 0xC1, 0xE8, 0x03, 0x8B, 0xF8, 0x51, 0xFA, 0xF3, 0x2E, 0xA5, 0xFB,
	0x59, 0xEB, 0xE8, 0x07, 0x5E, 0x5F, 0x59, 0x58, 0xC3, 0x52, 0x8B, 0x16,
	0x63, 0x04, 0x80, 0xC2, 0x06, 0xEC, 0xBA, 0xC0, 0x03, 0xB0, 0x20, 0xEE,
	0x5A, 0xC3, 0x52, 0x8B, 0x16, 0x63, 0x04, 0x83, 0xC2, 0x06, 0xEC, 0x32,
	0xC0, 0xBA, 0xC0, 0x03, 0xEE, 0x5A, 0xC3, 0x9C, 0xFA, 0xBA, 0xC8, 0x03,
	0xEC, 0x4A, 0x8A, 0xC3, 0xEE, 0x83, 0xC2, 0x02, 0xEC, 0x8A, 0xE0, 0xEC,
	0x8A, 0xE8, 0xEC, 0x8A, 0xC8, 0x43, 0x9D, 0xC3, 0x9C, 0xFA, 0xBA, 0xC8,
	0x03, 0x8A, 0xC3, 0xEE, 0x42, 0x8A, 0xC4, 0xEE, 0x8A, 0xC5, 0xEE, 0x8A,
	0xC1, 0xEE, 0x43, 0x9D, 0xC3, 0x52, 0xBA, 0xC4, 0x03, 0xEC, 0x50, 0xB0,
	0x01, 0xE8, 0x48, 0xFE, 0x80, 0xCC, 0x20, 0xEF, 0x58, 0xEE, 0x5A, 0xC3,
	0x52, 0xBA, 0xC4, 0x03, 0xEC, 0x50, 0xB0, 0x01, 0xE8, 0x35, 0xFE, 0x80,
	0xE4, 0xDF, 0xEF, 0x58, 0xEE, 0x5A, 0xC3, 0xE8, 0xD7, 0xFF, 0xBE, 0x00,
	0x01, 0x33, 0xDB, 0x32, 0xE4, 0x33, 0xC9, 0xE8, 0xB6, 0xFF, 0x4E, 0x75,
	0xFA, 0xE8, 0xD8, 0xFF, 0xC3, 0x51, 0x52, 0xB9, 0x19, 0x00, 0xB8, 0x00,
	0x00, 0x51, 0x50, 0xE8, 0x78, 0xFF, 0xB9, 0x05, 0x00, 0x03, 0xF1, 0xB8,
	0x00, 0x01, 0xBA, 0xC4, 0x03, 0xFA, 0xEF, 0xFE, 0xC0, 0xB4, 0x20, 0xEF,
	0x26, 0x0A, 0x24, 0xEF, 0x26, 0x8A, 0x44, 0x04, 0xBA, 0xC2, 0x03, 0xEE,
	0xB8, 0x00, 0x03, 0xBA, 0xC4, 0x03, 0xEF, 0xFB, 0xB9, 0x03, 0x00, 0xB0,
	0x02, 0x46, 0x26, 0x8A, 0x24, 0xEF, 0xFE, 0xC0, 0x46, 0xE2, 0xF7, 0x8B,
	0x16, 0x63, 0x04, 0x80, 0x3E, 0x49, 0x04, 0x08, 0x72, 0x07, 0x80, 0x3E,
	0x49, 0x04, 0x0C, 0x76, 0x0D, 0xBA, 0xB4, 0x03, 0x26, 0x8A, 0x04, 0xA8,
	0x01, 0x74, 0x03, 0xBA, 0xD4, 0x03, 0x89, 0x16, 0x63, 0x04, 0x46, 0xB8,
	0x11, 0x00, 0xEF, 0x58, 0x59, 0x03, 0xF0, 0x26, 0x8A, 0x24, 0x46, 0xEF,
	0xFE, 0xC0, 0xE2, 0xF7, 0x83, 0xC2, 0x06, 0xEC, 0x80, 0x3E, 0x49, 0x04,
	0x09, 0x74, 0x07, 0x80, 0x3E, 0x49, 0x04, 0x0B, 0x75, 0x04, 0x80, 0xEA,
	0x20, 0xEC, 0x32, 0xE4, 0xB9, 0x10, 0x00, 0xBA, 0xC0, 0x03, 0xF6, 0x06,
	0x89, 0x04, 0x08, 0x75, 0x0A, 0x8A, 0xC4, 0xEE, 0xFE, 0xC4, 0x26, 0xAC,
	0xEE, 0xE2, 0xF6, 0x02, 0xE1, 0x03, 0xF1, 0xB9, 0x05, 0x00, 0x80, 0xFC,
	0x11, 0x75, 0x09, 0x46, 0xF6, 0x06, 0x89, 0x04, 0x08, 0x75, 0x0E, 0x4E,
	0x8A, 0xC4, 0xEE, 0x32, 0xC0, 0x80, 0xFC, 0x14, 0x74, 0x02, 0x26, 0xAC,
	0xEE, 0xFE, 0xC4, 0xE2, 0xE1, 0x32, 0xC0, 0xB9, 0x09, 0x00, 0xBA, 0xCE,
	0x03, 0x26, 0x8A, 0x24, 0x46, 0xEF, 0xFE, 0xC0, 0xE2, 0xF7, 0x5A, 0x59,
	0xC3, 0xF6, 0x06, 0x89, 0x04, 0x08, 0x74, 0x01, 0xC3, 0xBA, 0xC6, 0x03,
	0xEC, 0xFE, 0xC0, 0x74, 0x03, 0xB0, 0xFF, 0xEE, 0xBF, 0x40, 0x00, 0x33,
	0xDB, 0xA0, 0x49, 0x04, 0xBE, 0x71, 0x43, 0x3C, 0x07, 0x74, 0x63, 0x3C,
	0x0F, 0x74, 0x5F, 0x3C, 0x13, 0x74, 0x65, 0x72, 0x13, 0x8A, 0xE0, 0xE8,
	0x23, 0xC7, 0x86, 0xE0, 0xF6, 0xC4, 0x02, 0x74, 0x4D, 0xF6, 0xC4, 0x04,
	0x74, 0x3B, 0xEB, 0x50, 0x3C, 0x04, 0x72, 0x0E, 0x3C, 0x06, 0x76, 0x22,
	0x3C, 0x08, 0x74, 0x2D, 0x3C, 0x0E, 0x76, 0x1A, 0xEB, 0x27, 0xF6, 0x06,
	0x89, 0x04, 0x10, 0x75, 0x20, 0x8A, 0x26, 0x88, 0x04, 0x80, 0xE4, 0x0F,
	0x80, 0xFC, 0x03, 0x74, 0x14, 0x80, 0xFC, 0x09, 0x74, 0x0F, 0xBE, 0xE9,
	0x41, 0xF6, 0x06, 0x89, 0x04, 0x06, 0x74, 0x12, 0xBE, 0x5D, 0x42, 0xEB,
	0x0D, 0xBE, 0x9D, 0x42, 0xF6, 0x06, 0x89, 0x04, 0x06, 0x74, 0x03, 0xBE,
	0x31, 0x43, 0xE8, 0x43, 0x00, 0xE8, 0x44, 0xFE, 0x4F, 0x75, 0xF7, 0xC3,
	0xBF, 0x10, 0x00, 0xBE, 0xB1, 0x43, 0xF6, 0x06, 0x89, 0x04, 0x06, 0x74,
	0x03, 0xBE, 0xCE, 0x43, 0xE8, 0xE3, 0xFF, 0xBF, 0x10, 0x00, 0xBB, 0x10,
	0x00, 0xBE, 0xDE, 0x43, 0xE8, 0xD7, 0xFF, 0xBF, 0xD8, 0x00, 0xBB, 0x20,
	0x00, 0xBE, 0xEE, 0x43, 0xF6, 0x06, 0x89, 0x04, 0x06, 0x74, 0xC7, 0xE8,
	0x0A, 0x00, 0xE8, 0x20, 0xE5, 0xE8, 0x08, 0xFE, 0x4F, 0x75, 0xF4, 0xC3,
	0x2E, 0xAC, 0x8A, 0xE0, 0x80, 0xE4, 0x3F, 0x24, 0xC0, 0x74, 0x14, 0x3C,
	0x40, 0x74, 0x1E, 0x3C, 0x80, 0x74, 0x07, 0x8A, 0xCC, 0x2E, 0xAC, 0x8A,
	0xE8, 0xC3, 0x8A, 0xEC, 0x8A, 0xCC, 0xC3, 0x2E, 0xAC, 0xA8, 0x40, 0x8A,
	0xE8, 0x74, 0x08, 0x80, 0xE5, 0xBF, 0x8A, 0xCD, 0xC3, 0x8A, 0xEC, 0x2E,
	0xAC, 0x8A, 0xC8, 0xC3, 0x17, 0x17, 0x18, 0x18, 0x04, 0x05, 0x06, 0x19,
	0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x11, 0x12, 0x1A, 0x1B, 0x1C,
	0x13, 0x14, 0x15, 0x16, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B,
	0x0C, 0x0D, 0x0E, 0x11, 0x12, 0x1A, 0x1B, 0x1C, 0x00, 0x01, 0x02, 0x03,
	0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x11,
	0x12, 0x1A, 0x1B, 0x1C, 0xA0, 0x49, 0x04, 0x50, 0x53, 0x3C, 0x13, 0x76,
	0x15, 0x33, 0xF6, 0x8E, 0xC6, 0xE8, 0x18, 0xC6, 0x75, 0x0C, 0x8C, 0xC0,
	0x0B, 0xC0, 0x75, 0x3F, 0x8C, 0xC8, 0x8E, 0xC0, 0xEB, 0x39, 0xBE, 0x08,
	0x4A, 0xF6, 0x06, 0x89, 0x04, 0x10, 0x75, 0x1B, 0xBE, 0x1C, 0x4A, 0x8A,
	0x26, 0x88, 0x04, 0x80, 0xE4, 0x0F, 0x80, 0xFC, 0x03, 0x74, 0x0C, 0x80,
	0xFC, 0x09, 0x74, 0x07, 0x3C, 0x07, 0x74, 0x03, 0xBE, 0x30, 0x4A, 0x8A,
	0xD8, 0x32, 0xFF, 0x2E, 0x8A, 0x00, 0xB4, 0x40, 0xF6, 0xE4, 0x8B, 0xF0,
	0x33, 0xDB, 0xE8, 0xFC, 0xD2, 0x03, 0xF3, 0x5B, 0x58, 0xC3, 0x32, 0xC9,
	0x2E, 0x8A, 0x1E, 0x43, 0x00, 0xF6, 0xC3, 0x01, 0x74, 0x06, 0xBE, 0x44,
	0x00, 0xE8, 0x2A, 0x00, 0xF6, 0xC3, 0x02, 0x74, 0x06, 0xBE, 0xE4, 0x00,
	0xE8, 0x1F, 0x00, 0xF6, 0xC3, 0x07, 0x74, 0x19, 0xF6, 0xC3, 0x08, 0x75,
	0x14, 0xB9, 0x00, 0x18, 0xB0, 0x00, 0xE8, 0x87, 0xFB, 0xE8, 0x77, 0xD2,
	0xB7, 0x00, 0xBA, 0x00, 0x00, 0xB4, 0x02, 0xCD, 0x10, 0xC3, 0x32, 0xFF,
	0xB4, 0x0E, 0x2E, 0xAC, 0xD2, 0xE8, 0x84, 0xC0, 0x74, 0x04, 0xCD, 0x10,
	0xEB, 0xF2, 0xC3, 0x37, 0x56, 0x37, 0x4B, 0xFA, 0x4B, 0x60, 0x4C, 0x9C,
	0x4C, 0xB3, 0x4C, 0xD1, 0x4C, 0xF6, 0x4C, 0x9B, 0x55, 0xB8, 0x55, 0xFF,
	0x55, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x8B, 0xF0, 0x32, 0xE4, 0x3C, 0x15,
	0x74, 0x0A, 0x3C, 0x10, 0x74, 0x0B, 0x3C, 0x08, 0x77, 0x1B, 0xEB, 0x07,
	0xB0, 0x0A, 0xEB, 0x03, 0x90, 0xB0, 0x09, 0xC6, 0x46, 0x10, 0x4F, 0x50,
	0xE8, 0x7F, 0xC4, 0x58, 0xD1, 0xE0, 0x96, 0x2E, 0xFF, 0x94, 0xEB, 0x4A,
	0xC3, 0xC6, 0x46, 0x10, 0x00, 0xEB, 0xF9, 0x8B, 0xD9, 0xC6, 0x46, 0x11,
	0x00, 0x33, 0xC0, 0x8B, 0xF7, 0xB9, 0x80, 0x00, 0xF3, 0xAB, 0x8B, 0xFE,
	0x0E, 0x1F, 0xF7, 0xC3, 0x00, 0x7F, 0x75, 0x05, 0xC6, 0x46, 0x11, 0x01,
	0xC3, 0x8B, 0xD7, 0x33, 0xFF, 0x81, 0xE3, 0xFF, 0x7F, 0x8D, 0x36, 0x28,
	0x4D, 0xE8, 0xE6, 0x00, 0x75, 0x0B, 0x83, 0xC6, 0x02, 0x83, 0xC7, 0x03,
	0xE8, 0xDB, 0x00, 0x74, 0xDF, 0x8D, 0x36, 0x82, 0x4D, 0x03, 0xF7, 0x8A,
	0x1C, 0x32, 0xFF, 0x8B, 0xFA, 0x57, 0x8B, 0x74, 0x01, 0xA4, 0x47, 0x56,
	0x8D, 0x36, 0xE0, 0x4D, 0xA5, 0x8A, 0xC3, 0xE8, 0xCF, 0xC4, 0xA8, 0x01,
	0x74, 0x0A, 0xB8, 0x20, 0x00, 0xAB, 0xAB, 0xB8, 0x00, 0xB8, 0xEB, 0x08,
	0xB8, 0x40, 0x00, 0xAB, 0xAB, 0xB8, 0x00, 0xA0, 0xAB, 0xAB, 0x57, 0x83,
	0xC7, 0x10, 0x66, 0xA5, 0x5F, 0x5E, 0x8D, 0x06, 0xC5, 0x4C, 0xAB, 0x8C,
	0xD8, 0xAB, 0xB9, 0x03, 0x00, 0xF3, 0xA5, 0xB0, 0x08, 0xAA, 0xA4, 0x66,
	0xA5, 0x56, 0x4E, 0x80, 0x3C, 0x06, 0x75, 0x2C, 0x83, 0xEE, 0x02, 0x80,
	0x3C, 0x0F, 0x75, 0x05, 0xBE, 0x4E, 0x4F, 0xEB, 0x17, 0x80, 0x3C, 0x10,
	0x75, 0x05, 0xBE, 0x57, 0x4F, 0xEB, 0x0D, 0x80, 0x3C, 0x18, 0x75, 0x05,
	0xBE, 0x60, 0x4F, 0xEB, 0x03, 0xBE, 0x69, 0x4F, 0x83, 0xC7, 0x03, 0xB9,
	0x09, 0x00, 0xF3, 0xA4, 0x5E, 0x5F, 0xE8, 0xF4, 0x03, 0xC3, 0x8B, 0xCB,
	0xC6, 0x46, 0x11, 0x00, 0xF7, 0xC3, 0x00, 0x7F, 0x75, 0x1C, 0x32, 0xE4,
	0x8A, 0xC3, 0xF7, 0xC1, 0x00, 0x80, 0x74, 0x02, 0x0C, 0x80, 0x60, 0x2E,
	0x8E, 0x1E, 0x88, 0x14, 0xE8, 0xFE, 0xCB, 0x61, 0xC3, 0xC6, 0x46, 0x11,
	0x01, 0xC3, 0x33, 0xFF, 0x0E, 0x1F, 0x81, 0xE3, 0xFF, 0x7F, 0x8D, 0x36,
	0x28, 0x4D, 0xE8, 0x19, 0x00, 0x75, 0x0B, 0x83, 0xC6, 0x02, 0x83, 0xC7,
	0x03, 0xE8, 0x0E, 0x00, 0x74, 0xDF, 0x8D, 0x36, 0x82, 0x4D, 0x03, 0xF7,
	0x8A, 0x1C, 0x32, 0xFF, 0xEB, 0xBC, 0x81, 0x3C, 0xFF, 0xFF, 0x74, 0x0F,
	0x39, 0x1C, 0x74, 0x08, 0x83, 0xC7, 0x03, 0x83, 0xC6, 0x02, 0xEB, 0xEE,
	0x80, 0xFB, 0xFF, 0xC3, 0xC6, 0x46, 0x11, 0x00, 0x33, 0xFF, 0x33, 0xC0,
	0x8E, 0xD8, 0x32, 0xFF, 0x8A, 0x1E, 0x49, 0x04, 0x0E, 0x1F, 0x8D, 0x36,
	0x82, 0x4D, 0xE8, 0x0E, 0x00, 0x74, 0x08, 0x8D, 0x36, 0x28, 0x4D, 0x03,
	0xF7, 0x8B, 0x1C, 0x89, 0x5E, 0x0E, 0xC3, 0x80, 0x3C, 0xFF, 0x74, 0x0F,
	0x38, 0x1C, 0x74, 0x08, 0x83, 0xC7, 0x02, 0x83, 0xC6, 0x03, 0xEB, 0xEF,
	0x80, 0xFB, 0xFF, 0xC3, 0xC6, 0x46, 0x11, 0x01, 0x80, 0xFA, 0x02, 0x77,
	0x0D, 0xC6, 0x46, 0x11, 0x00, 0xB4, 0x1C, 0x8A, 0xC2, 0xCD, 0x10, 0x89,
	0x5E, 0x0E, 0xC3, 0xE8, 0x6D, 0x04, 0x80, 0xFF, 0x01, 0x75, 0x03, 0xE8,
	0x8A, 0x04, 0x88, 0x66, 0x11, 0x89, 0x56, 0x0A, 0xC3, 0xE8, 0x5B, 0x04,
	0x80, 0xFF, 0x01, 0x75, 0x03, 0xE8, 0x78, 0x04, 0xCB, 0xC6, 0x46, 0x11,
	0x01, 0x80, 0xFB, 0x01, 0x77, 0x1B, 0x33, 0xC0, 0x8E, 0xD8, 0x8A, 0x3E,
	0x49, 0x04, 0x0E, 0x1F, 0x86, 0xFB, 0x8D, 0x36, 0x82, 0x4D, 0xE8, 0x9A,
	0xFF, 0x74, 0x06, 0x8B, 0x74, 0x01, 0xE8, 0x55, 0x03, 0xC3, 0xE8, 0x7E,
	0x04, 0x80, 0xFC, 0x01, 0x75, 0x0E, 0xE8, 0x02, 0x05, 0x80, 0xFC, 0x00,
	0x75, 0x06, 0x89, 0x4E, 0x0C, 0x89, 0x56, 0x0A, 0x88, 0x66, 0x11, 0xC3,
	0x53, 0x33, 0x20, 0x49, 0x6E, 0x63, 0x6F, 0x72, 0x70, 0x6F, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2E, 0x20, 0x54, 0x72, 0x69, 0x6F, 0x36, 0x34, 0x00,
	0x00, 0x01, 0x01, 0x01, 0x02, 0x01, 0x03, 0x01, 0x04, 0x01, 0x05, 0x01,
	0x06, 0x01, 0x07, 0x01, 0x09, 0x01, 0x0A, 0x01, 0x10, 0x01, 0x11, 0x01,
	0x12, 0x01, 0x13, 0x01, 0x14, 0x01, 0x15, 0x01, 0x16, 0x01, 0x17, 0x01,
	0x18, 0x01, 0x19, 0x01, 0x1A, 0x01, 0x20, 0x01, 0xFF, 0xFF, 0x01, 0x02,
	0x02, 0x02, 0x03, 0x02, 0x04, 0x02, 0x05, 0x02, 0x07, 0x02, 0x08, 0x02,
	0x13, 0x02, 0x07, 0x01, 0x10, 0x01, 0x11, 0x01, 0x12, 0x01, 0x13, 0x01,
	0x14, 0x01, 0x15, 0x01, 0x16, 0x01, 0x17, 0x01, 0x18, 0x01, 0x19, 0x01,
	0x1A, 0x01, 0x20, 0x01, 0xFF, 0xFF, 0x68, 0xE6, 0x4D, 0x69, 0xF2, 0x4D,
	0x6A, 0xFE, 0x4D, 0x6B, 0x0A, 0x4E, 0x6C, 0x16, 0x4E, 0x6D, 0x22, 0x4E,
	0x6E, 0x2E, 0x4E, 0x6F, 0x3A, 0x4E, 0x55, 0x46, 0x4E, 0x54, 0x52, 0x4E,
	0x70, 0x5E, 0x4E, 0x71, 0x6A, 0x4E, 0x72, 0x76, 0x4E, 0x73, 0x82, 0x4E,
	0x74, 0x8E, 0x4E, 0x75, 0x9A, 0x4E, 0x76, 0xA6, 0x4E, 0x77, 0xB2, 0x4E,
	0x78, 0xBE, 0x4E, 0x79, 0xCA, 0x4E, 0x7A, 0xD6, 0x4E, 0x7C, 0xE2, 0x4E,
	0x80, 0x00, 0x00, 0x49, 0xEE, 0x4E, 0x4A, 0xFA, 0x4E, 0x4B, 0x06, 0x4F,
	0x4C, 0x12, 0x4F, 0x4D, 0x1E, 0x4F, 0x4E, 0x2A, 0x4F, 0x4F, 0x36, 0x4F,
	0x52, 0x42, 0x4F, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x1B, 0x80,
	0x02, 0x80, 0x02, 0x90, 0x01, 0x10, 0x01, 0x08, 0x01, 0x04, 0x1B, 0x80,
	0x02, 0x80, 0x02, 0xE0, 0x01, 0x10, 0x01, 0x08, 0x01, 0x04, 0x1F, 0x64,
	0x00, 0x20, 0x03, 0x58, 0x02, 0x08, 0x04, 0x04, 0x01, 0x03, 0x1B, 0x20,
	0x03, 0x20, 0x03, 0x58, 0x02, 0x08, 0x01, 0x08, 0x01, 0x04, 0x1B, 0x80,
	0x00, 0x00, 0x04, 0x00, 0x03, 0x10, 0x04, 0x04, 0x01, 0x03, 0x1B, 0x00,
	0x04, 0x00, 0x04, 0x00, 0x03, 0x10, 0x01, 0x08, 0x01, 0x04, 0x1B, 0xA0,
	0x00, 0x00, 0x05, 0x00, 0x04, 0x10, 0x04, 0x04, 0x01, 0x03, 0x1B, 0x00,
	0x05, 0x00, 0x05, 0x00, 0x04, 0x10, 0x01, 0x08, 0x01, 0x04, 0x0F, 0x08,
	0x01, 0x84, 0x00, 0x19, 0x00, 0x10, 0x04, 0x04, 0x01, 0x00, 0x0F, 0x08,
	0x01, 0x84, 0x00, 0x2B, 0x00, 0x08, 0x04, 0x04, 0x01, 0x00, 0x1B, 0x00,
	0x05, 0x80, 0x02, 0xE0, 0x01, 0x10, 0x01, 0x0F, 0x01, 0x06, 0x1B, 0x00,
	0x05, 0x80, 0x02, 0xE0, 0x01, 0x10, 0x01, 0x10, 0x01, 0x06, 0x1B, 0x00,
	0x0A, 0x80, 0x02, 0xE0, 0x01, 0x10, 0x01, 0x20, 0x01, 0x06, 0x1B, 0x40,
	0x06, 0x20, 0x03, 0x58, 0x02, 0x08, 0x01, 0x0F, 0x01, 0x06, 0x1B, 0x40,
	0x06, 0x20, 0x03, 0x58, 0x02, 0x08, 0x01, 0x10, 0x01, 0x06, 0x1B, 0x80,
	0x0C, 0x20, 0x03, 0x58, 0x02, 0x08, 0x01, 0x20, 0x01, 0x06, 0x1B, 0x00,
	0x08, 0x00, 0x04, 0x00, 0x03, 0x10, 0x01, 0x0F, 0x01, 0x06, 0x1B, 0x00,
	0x08, 0x00, 0x04, 0x00, 0x03, 0x10, 0x01, 0x10, 0x01, 0x06, 0x1B, 0x00,
	0x10, 0x00, 0x04, 0x00, 0x03, 0x10, 0x01, 0x20, 0x01, 0x06, 0x1B, 0x00,
	0x0A, 0x00, 0x05, 0x00, 0x04, 0x10, 0x01, 0x0F, 0x01, 0x06, 0x1B, 0x00,
	0x0A, 0x00, 0x05, 0x00, 0x04, 0x10, 0x01, 0x10, 0x01, 0x06, 0x1B, 0x40,
	0x06, 0x40, 0x06, 0xB0, 0x04, 0x10, 0x01, 0x08, 0x01, 0x04, 0x1B, 0x00,
	0x04, 0x80, 0x02, 0xE0, 0x01, 0x10, 0x01, 0x08, 0x01, 0x04, 0x1B, 0x00,
	0x04, 0x20, 0x03, 0x58, 0x02, 0x08, 0x01, 0x04, 0x01, 0x04, 0x1B, 0x00,
	0x04, 0x20, 0x03, 0x58, 0x02, 0x08, 0x01, 0x08, 0x01, 0x04, 0x1B, 0x00,
	0x04, 0x00, 0x04, 0x00, 0x03, 0x10, 0x01, 0x04, 0x01, 0x04, 0x1B, 0x00,
	0x04, 0x00, 0x04, 0x00, 0x03, 0x10, 0x01, 0x08, 0x01, 0x04, 0x1B, 0x80,
	0x04, 0x80, 0x04, 0x60, 0x03, 0x10, 0x01, 0x08, 0x01, 0x04, 0x1B, 0x00,
	0x04, 0x00, 0x05, 0x00, 0x04, 0x10, 0x01, 0x04, 0x01, 0x04, 0x1B, 0x00,
	0x0A, 0x80, 0x02, 0x90, 0x01, 0x10, 0x01, 0x20, 0x01, 0x06, 0x05, 0x0A,
	0x05, 0x05, 0x05, 0x00, 0x01, 0x0F, 0x00, 0x05, 0x0B, 0x06, 0x05, 0x05,
	0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x10, 0x08, 0x08, 0x08, 0x00, 0x08, 0x18, 0x00, 0xE8, 0x78,
	0xF8, 0xB0, 0x18, 0xE8, 0xC6, 0xF6, 0x80, 0xCC, 0x20, 0xEF, 0xB0, 0x0D,
	0xE8, 0xBD, 0xF6, 0x80, 0xE4, 0x0F, 0x80, 0xFF, 0x04, 0x74, 0x20, 0x80,
	0xFF, 0x02, 0x74, 0x23, 0x80, 0xFF, 0x01, 0x74, 0x26, 0x80, 0xFF, 0x00,
	0x74, 0x02, 0xEB, 0x25, 0xEF, 0xB0, 0x18, 0xE8, 0x9E, 0xF6, 0x80, 0xE4,
	0xDF, 0xEF, 0xE8, 0x57, 0xF8, 0xEB, 0x16, 0x80, 0xCC, 0x50, 0xEF, 0x32,
	0xE4, 0xEB, 0x0E, 0x80, 0xCC, 0x40, 0xEF, 0x32, 0xE4, 0xEB, 0x06, 0x80,
	0xCC, 0x10, 0xEF, 0x32, 0xE4, 0xC3, 0xB0, 0x0D, 0xE8, 0x79, 0xF6, 0x80,
	0xE4, 0xF0, 0x80, 0xFC, 0x00, 0x74, 0x0F, 0x80, 0xFC, 0x10, 0x74, 0x0E,
	0x80, 0xFC, 0x40, 0x74, 0x0D, 0x80, 0xFC, 0x50, 0x74, 0x0C, 0x32, 0xFF,
	0xEB, 0x0A, 0xB7, 0x01, 0xEB, 0x06, 0xB7, 0x02, 0xEB, 0x02, 0xB7, 0x04,
	0xC3, 0x66, 0x50, 0x66, 0x53, 0x66, 0x52, 0x26, 0x8B, 0x4D, 0x10, 0x26,
	0x80, 0x7D, 0x1B, 0x03, 0x75, 0x03, 0xC1, 0xE1, 0x02, 0x26, 0x8B, 0x45,
	0x14, 0xF7, 0xE1, 0x8B, 0xDA, 0x66, 0xC1, 0xE3, 0x10, 0x8B, 0xD8, 0x8A,
	0xCA, 0xE8, 0x43, 0xC4, 0xC1, 0xEA, 0x04, 0x80, 0xFA, 0x00, 0x75, 0x02,
	0xB2, 0x08, 0x3A, 0xCA, 0x7E, 0x06, 0x26, 0x83, 0x25, 0xFE, 0xEB, 0x1B,
	0x8B, 0xC2, 0x26, 0x80, 0x7D, 0x1B, 0x03, 0x75, 0x03, 0xB8, 0x10, 0x00,
	0x66, 0xC1, 0xE0, 0x10, 0x66, 0x33, 0xD2, 0x66, 0xF7, 0xF3, 0x48, 0x26,
	0x88, 0x45, 0x1D, 0x66, 0x5A, 0x66, 0x5B, 0x66, 0x58, 0xC3, 0x33, 0xD2,
	0x8B, 0xC1, 0x80, 0xFF, 0x01, 0x74, 0x5C, 0x51, 0x66, 0x33, 0xC0, 0x66,
	0x33, 0xD2, 0x66, 0x33, 0xC9, 0x59, 0x8A, 0x44, 0x09, 0x3C, 0x0F, 0x75,
	0x02, 0xFE, 0xC0, 0x66, 0xF7, 0xE1, 0x66, 0xC1, 0xE8, 0x03, 0x8B, 0xD0,
	0x66, 0xC1, 0xE8, 0x10, 0x92, 0x3B, 0x44, 0x01, 0x73, 0x03, 0x8B, 0x44,
	0x01, 0xBB, 0x08, 0x00, 0xF7, 0xF3, 0x83, 0xFA, 0x00, 0x74, 0x01, 0x40,
	0x80, 0xFC, 0x03, 0x76, 0x03, 0xEB, 0x6E, 0x90, 0x50, 0x8B, 0xD8, 0xE8,
	0x47, 0xBF, 0xB0, 0x13, 0x8A, 0xE3, 0xEF, 0xB0, 0x51, 0xE8, 0xA0, 0xF5,
	0xC0, 0xE7, 0x04, 0x80, 0xE4, 0xCF, 0x0A, 0xE7, 0xEF, 0x58, 0xC1, 0xE0,
	0x03, 0xEB, 0x1C, 0xE8, 0x2B, 0xBF, 0xB0, 0x13, 0xE8, 0x89, 0xF5, 0x8A,
	0xDC, 0xB0, 0x51, 0xE8, 0x82, 0xF5, 0x80, 0xE4, 0x30, 0xC0, 0xEC, 0x04,
	0x8A, 0xC3, 0xC1, 0xE0, 0x03, 0xEB, 0x00, 0x50, 0x80, 0x7C, 0x0B, 0x00,
	0x74, 0x09, 0x33, 0xDB, 0x33, 0xD2, 0x8A, 0x5C, 0x08, 0xF7, 0xF3, 0x89,
	0x46, 0x0E, 0x58, 0x33, 0xDB, 0x8A, 0x5C, 0x09, 0x80, 0xFB, 0x0F, 0x75,
	0x02, 0xFE, 0xC3, 0x33, 0xD2, 0xF7, 0xF3, 0xC1, 0xE0, 0x03, 0x89, 0x46,
	0x0C, 0xE8, 0x0A, 0x00, 0xC6, 0x46, 0x11, 0x00, 0xC3, 0xC6, 0x46, 0x11,
	0x01, 0xC3, 0xE8, 0x52, 0xC3, 0xC1, 0xEA, 0x04, 0x83, 0xFA, 0x00, 0x75,
	0x02, 0xB2, 0x08, 0x33, 0xC0, 0x8B, 0x5E, 0x0E, 0x80, 0x7C, 0x0B, 0x03,
	0x75, 0x03, 0xC1, 0xE3, 0x02, 0xF7, 0xF3, 0x89, 0x46, 0x0A, 0xC3, 0x52,
	0x53, 0xB8, 0x4F, 0x01, 0x80, 0xFF, 0x00, 0x75, 0x18, 0x8B, 0xDA, 0xBA,
	0xC4, 0x03, 0xB0, 0x04, 0xE8, 0x09, 0xF5, 0xF6, 0xC4, 0x08, 0x75, 0x03,
	0xC1, 0xE3, 0x02, 0xE8, 0xC5, 0xC0, 0xB8, 0x4F, 0x00, 0x5B, 0x5A, 0xC3,
	0x53, 0xB8, 0x4F, 0x01, 0x80, 0xFF, 0x01, 0x75, 0x24, 0xE8, 0x89, 0xBE,
	0xB0, 0x6A, 0xE8, 0xE7, 0xF4, 0x8A, 0xDC, 0x80, 0xE3, 0x7F, 0xBA, 0xC4,
	0x03, 0xB0, 0x04, 0xE8, 0xDA, 0xF4, 0x33, 0xD2, 0x8A, 0xD3, 0xF6, 0xC4,
	0x08, 0xB8, 0x4F, 0x00, 0x75, 0x03, 0xC0, 0xEA, 0x02, 0x5B, 0xC3, 0x53,
	0xB8, 0x4F, 0x01, 0x80, 0xE3, 0x7F, 0x80, 0xFB, 0x00, 0x74, 0x03, 0xEB,
	0x7C, 0x90, 0x52, 0xE8, 0x53, 0xBE, 0xB0, 0x13, 0xE8, 0xB1, 0xF4, 0x8A,
	0xDC, 0xB0, 0x51, 0xE8, 0xAA, 0xF4, 0x80, 0xE4, 0x30, 0xC0, 0xEC, 0x04,
	0x8A, 0xC3, 0xD1, 0xE0, 0x50, 0x8B, 0xD9, 0xB0, 0x67, 0xE8, 0x98, 0xF4,
	0x80, 0xE4, 0xF0, 0xB1, 0x02, 0x80, 0xFC, 0x10, 0x76, 0x12, 0xB1, 0x01,
	0x80, 0xFC, 0x50, 0x76, 0x1A, 0xB1, 0x00, 0x80, 0xFC, 0x70, 0x74, 0x13,
	0xB1, 0x00, 0xEB, 0x0F, 0xBA, 0xC4, 0x03, 0xB0, 0x04, 0xE8, 0x74, 0xF4,
	0xF6, 0xC4, 0x08, 0x75, 0x02, 0xB1, 0x03, 0xD3, 0xEB, 0x58, 0x5A, 0xF7,
	0xE2, 0x83, 0xFA, 0x0F, 0x76, 0x05, 0xB8, 0x4F, 0x01, 0xEB, 0x1E, 0x03,
	0xC3, 0x8B, 0xDA, 0x73, 0x01, 0x43, 0x50, 0xE8, 0xEF, 0xBD, 0xB0, 0x69,
	0x8A, 0xE3, 0xEF, 0x5B, 0xB0, 0x0C, 0x8A, 0xE7, 0xEF, 0xB0, 0x0D, 0x8A,
	0xE3, 0xEF, 0xB8, 0x4F, 0x00, 0x5B, 0xC3, 0x53, 0xB8, 0x4F, 0x01, 0x80,
	0xFB, 0x01, 0x75, 0x79, 0xE8, 0xCE, 0xBD, 0x33, 0xDB, 0xB0, 0x69, 0xE8,
	0x2A, 0xF4, 0x80, 0xE4, 0x1F, 0x8A, 0xDC, 0x53, 0xB0, 0x0C, 0xE8, 0x1F,
	0xF4, 0x8A, 0xFC, 0xB0, 0x0D, 0xE8, 0x18, 0xF4, 0x8A, 0xDC, 0x53, 0xB0,
	0x13, 0xE8, 0x10, 0xF4, 0x8A, 0xDC, 0xB0, 0x51, 0xE8, 0x09, 0xF4, 0x80,
	0xE4, 0x30, 0xC0, 0xEC, 0x04, 0x8A, 0xC3, 0xD1, 0xE0, 0x8B, 0xD8, 0x58,
	0x5A, 0xF7, 0xF3, 0x50, 0x52, 0xE8, 0x91, 0xBD, 0xB0, 0x67, 0xE8, 0xEF,
	0xF3, 0x80, 0xE4, 0xF0, 0xB1, 0x02, 0x80, 0xFC, 0x10, 0x76, 0x12, 0xB1,
	0x01, 0x80, 0xFC, 0x50, 0x76, 0x1A, 0xB1, 0x00, 0x80, 0xFC, 0x70, 0x74,
	0x13, 0xB1, 0x00, 0xEB, 0x0F, 0xBA, 0xC4, 0x03, 0xB0, 0x04, 0xE8, 0xCB,
	0xF3, 0xF6, 0xC4, 0x08, 0x75, 0x02, 0xB1, 0x03, 0x58, 0xD3, 0xE0, 0x8B,
	0xC8, 0x5A, 0xB8, 0x4F, 0x00, 0x5B, 0xC3, 0x53, 0x51, 0xE8, 0xB6, 0x00,
	0xE8, 0x4E, 0xBD, 0xB0, 0x55, 0xE8, 0xAC, 0xF3, 0x80, 0xCC, 0x04, 0xEF,
	0xF6, 0xC3, 0x02, 0x75, 0x1D, 0xF6, 0xC3, 0x01, 0x74, 0x1E, 0xE8, 0x48,
	0xF5, 0xBB, 0x06, 0xFF, 0xE8, 0xDB, 0x00, 0x75, 0x08, 0xBB, 0x07, 0x00,
	0xE8, 0xD3, 0x00, 0x74, 0x0B, 0xE8, 0x9A, 0x01, 0xEB, 0x06, 0xBB, 0x80,
	0x00, 0xE8, 0x59, 0x02, 0xBA, 0xC4, 0x03, 0xB0, 0x0D, 0xE8, 0x78, 0xF3,
	0x80, 0xE4, 0x0F, 0xEF, 0xE8, 0x31, 0xF5, 0xE8, 0x0B, 0xBD, 0xB0, 0x55,
	0xE8, 0x69, 0xF3, 0x80, 0xE4, 0xFB, 0xEF, 0x80, 0xF7, 0x01, 0x59, 0x5B,
	0xC3, 0x53, 0x51, 0x52, 0xE8, 0x5B, 0x00, 0xE8, 0xF3, 0xBC, 0xB0, 0x55,
	0xE8, 0x51, 0xF3, 0x80, 0xCC, 0x04, 0xEF, 0x5A, 0x32, 0xFF, 0xF6, 0xC3,
	0x02, 0x74, 0x35, 0x81, 0xE2, 0xFF, 0x00, 0xC0, 0xE2, 0x06, 0x80, 0xC2,
	0x80, 0x8A, 0xFA, 0xB3, 0x42, 0x53, 0xBB, 0x01, 0x80, 0xE8, 0x09, 0x02,
	0xE8, 0x71, 0x02, 0x80, 0xFF, 0x56, 0x75, 0x14, 0xE8, 0x78, 0x02, 0xE8,
	0x66, 0x02, 0x80, 0xFF, 0x44, 0x75, 0x09, 0xE8, 0x8C, 0x01, 0x5B, 0xE8,
	0xEF, 0x01, 0xEB, 0x04, 0x5B, 0xE8, 0x82, 0x01, 0xE8, 0xAA, 0xBC, 0xB0,
	0x55, 0xE8, 0x08, 0xF3, 0x80, 0xE4, 0xFB, 0xEF, 0x80, 0xF7, 0x01, 0x59,
	0x5B, 0xC3, 0xE8, 0x98, 0xBC, 0xB0, 0x55, 0xE8, 0xF6, 0xF2, 0x80, 0xCC,
	0x04, 0xEF, 0xBB, 0x01, 0x00, 0xE8, 0xC5, 0x01, 0xE8, 0x2D, 0x02, 0x80,
	0xFF, 0x00, 0x75, 0x13, 0xE8, 0x34, 0x02, 0xE8, 0x22, 0x02, 0x80, 0xFF,
	0xFF, 0x75, 0x08, 0xE8, 0x48, 0x01, 0xBB, 0x02, 0x01, 0xEB, 0x0B, 0xBB,
	0x00, 0x00, 0xE8, 0x0B, 0x01, 0x74, 0x03, 0xBB, 0x05, 0x01, 0xB0, 0x55,
	0xE8, 0xC1, 0xF2, 0x80, 0xE4, 0xFB, 0xEF, 0x33, 0xD2, 0xC3, 0xBA, 0xC8,
	0x03, 0xE8, 0x95, 0x00, 0xB9, 0x80, 0x04, 0x3A, 0xE7, 0x74, 0x11, 0xD0,
	0xE4, 0xE8, 0xA1, 0x00, 0xEC, 0x24, 0x01, 0x0A, 0xE0, 0xE2, 0xF0, 0xB7,
	0x01, 0xEB, 0x41, 0x90, 0x53, 0xFE, 0xCB, 0x74, 0x0E, 0xE8, 0x8D, 0x00,
	0xE8, 0x72, 0x00, 0x80, 0xFC, 0xFF, 0x74, 0xF1, 0x5B, 0xEB, 0xD8, 0x5B,
	0xE8, 0x7E, 0x00, 0xE8, 0x63, 0x00, 0x80, 0xFC, 0x00, 0x75, 0xCC, 0x80,
	0xFF, 0x00, 0x74, 0x1A, 0x51, 0xB9, 0x38, 0x04, 0xE8, 0x6A, 0x00, 0xE2,
	0xFB, 0x59, 0xE8, 0x4C, 0x00, 0x80, 0xFC, 0x00, 0x75, 0xB5, 0xB9, 0x40,
	0x00, 0xE8, 0x59, 0x00, 0xE2, 0xFB, 0xB7, 0x00, 0x80, 0xF7, 0x01, 0xC3,
	0x52, 0x51, 0x50, 0xBA, 0xDA, 0x03, 0xB9, 0xFF, 0xFF, 0xEC, 0x24, 0x08,
	0xE3, 0x07, 0xE1, 0xF9, 0xEC, 0x24, 0x08, 0xE0, 0xFB, 0x58, 0x59, 0x5A,
	0xC3, 0x52, 0x50, 0xBA, 0xC4, 0x03, 0xB0, 0x0D, 0xE8, 0x35, 0xF2, 0x80,
	0xE4, 0x3F, 0x80, 0xFF, 0x01, 0x75, 0x07, 0x80, 0xCC, 0x80, 0xEF, 0xEB,
	0x05, 0x90, 0x80, 0xCC, 0x40, 0xEF, 0x58, 0x5A, 0xC3, 0x51, 0x32, 0xE4,
	0xB1, 0x08, 0xFE, 0xC9, 0xE8, 0x0E, 0x00, 0xEC, 0x24, 0x01, 0xD2, 0xE0,
	0x0A, 0xE0, 0x80, 0xF9, 0x00, 0x75, 0xEF, 0x59, 0xC3, 0x51, 0x53, 0xB7,
	0x01, 0xE8, 0xC1, 0xFF, 0xB9, 0x13, 0x01, 0xE2, 0xFE, 0xB7, 0x00, 0xE8,
	0xB7, 0xFF, 0xB9, 0x13, 0x01, 0xE2, 0xFE, 0x5B, 0x59, 0xC3, 0x9C, 0xFC,
	0x57, 0x32, 0xC0, 0xAA, 0xF6, 0xD0, 0xB9, 0x06, 0x00, 0xF3, 0xAA, 0x32,
	0xC0, 0xAA, 0xB7, 0xFA, 0xB9, 0x78, 0x00, 0xE8, 0xCF, 0xFF, 0xE8, 0xB4,
	0xFF, 0x8A, 0xC4, 0x02, 0xFC, 0xAA, 0xE2, 0xF3, 0x5F, 0x9D, 0x80, 0xFF,
	0x00, 0xB7, 0x00, 0x75, 0x02, 0xFE, 0xC7, 0xC3, 0x52, 0xBA, 0xC8, 0x03,
	0xE8, 0x61, 0xFF, 0xEC, 0x24, 0x01, 0x8A, 0xE0, 0xB9, 0x32, 0x00, 0xE8,
	0x56, 0xFF, 0xEC, 0x24, 0x01, 0x3A, 0xC4, 0x75, 0x02, 0xE2, 0xF4, 0x5A,
	0xC3, 0xB3, 0x01, 0xE8, 0x2A, 0x00, 0xB3, 0x03, 0xE8, 0x25, 0x00, 0xB3,
	0x02, 0xE8, 0x20, 0x00, 0xB3, 0x00, 0xE8, 0x1B, 0x00, 0xC3, 0xB3, 0x00,
	0xE8, 0x15, 0x00, 0xB3, 0x02, 0xE8, 0x10, 0x00, 0xB3, 0x03, 0xE8, 0x0B,
	0x00, 0xB3, 0x01, 0xE8, 0x06, 0x00, 0xB3, 0x03, 0xE8, 0x01, 0x00, 0xC3,
	0x52, 0x51, 0x50, 0xE8, 0x0B, 0xBB, 0xB0, 0x5C, 0xE8, 0x69, 0xF1, 0x80,
	0xE4, 0xFC, 0x0A, 0xE3, 0xEF, 0xB9, 0x13, 0x01, 0xE2, 0xFE, 0x58, 0x59,
	0x5A, 0xC3, 0x52, 0x50, 0xB3, 0x01, 0xE8, 0xDF, 0xFF, 0xB3, 0x03, 0xE8,
	0xDA, 0xFF, 0xBA, 0xC8, 0x03, 0xEC, 0x24, 0x01, 0x0A, 0xF8, 0xB3, 0x01,
	0xE8, 0xCD, 0xFF, 0x58, 0x5A, 0xC3, 0x32, 0xDB, 0x0A, 0xDF, 0x80, 0xE3,
	0x01, 0xE8, 0xC0, 0xFF, 0x80, 0xCB, 0x02, 0xE8, 0xBA, 0xFF, 0x80, 0xE3,
	0x01, 0xE8, 0xB4, 0xFF, 0xC3, 0x8B, 0xCB, 0xE8, 0x7F, 0xFF, 0xB7, 0xA0,
	0xE8, 0x4D, 0x00, 0x8B, 0xD9, 0xE8, 0x48, 0x00, 0xE8, 0x72, 0xFF, 0xB7,
	0xA1, 0xE8, 0x40, 0x00, 0xF7, 0xC1, 0x01, 0x00, 0x75, 0x39, 0x51, 0x57,
	0x9C, 0xFC, 0x81, 0xE1, 0xFC, 0x00, 0x49, 0x32, 0xE4, 0xE8, 0x40, 0x00,
	0xE8, 0x4C, 0x00, 0x8A, 0xC7, 0xAA, 0x02, 0xE7, 0xE2, 0xF3, 0xE8, 0x33,
	0x00, 0x8A, 0xC7, 0xAA, 0x02, 0xFC, 0xE8, 0x59, 0xFF, 0x9D, 0x5F, 0x59,
	0xF7, 0xC1, 0x02, 0x00, 0x74, 0x04, 0xB7, 0x01, 0xEB, 0x09, 0x80, 0xFF,
	0x00, 0xB7, 0x00, 0x75, 0x02, 0xFE, 0xC7, 0xC3, 0x51, 0xB9, 0x08, 0x00,
	0xD0, 0xC7, 0xE8, 0x89, 0xFF, 0xE2, 0xF9, 0x53, 0xB7, 0x01, 0xE8, 0x81,
	0xFF, 0x5B, 0x59, 0xC3, 0x51, 0x32, 0xFF, 0xB9, 0x08, 0x00, 0xD0, 0xC7,
	0xE8, 0x57, 0xFF, 0xE2, 0xF9, 0x59, 0xC3, 0x53, 0x32, 0xFF, 0xE8, 0x69,
	0xFF, 0x5B, 0xC3, 0xC6, 0x46, 0x11, 0x01, 0x80, 0xFB, 0x01, 0x77, 0x13,
	0xC6, 0x46, 0x0F, 0x06, 0x0A, 0xFF, 0x75, 0x09, 0xC6, 0x46, 0x0F, 0x06,
	0xC6, 0x46, 0x11, 0x00, 0xC3, 0xEB, 0xF9, 0xC3, 0xBA, 0xC4, 0x03, 0xEC,
	0x50, 0xB0, 0x08, 0xE8, 0x7E, 0xF0, 0x50, 0xB4, 0x06, 0xEF, 0xC6, 0x46,
	0x11, 0x01, 0x80, 0xFB, 0x02, 0x77, 0x2B, 0x80, 0xFB, 0x00, 0x74, 0x1D,
	0x80, 0xFB, 0x01, 0x74, 0x10, 0x80, 0xFB, 0x02, 0x74, 0x00, 0xE8, 0xE1,
	0xF9, 0x88, 0x7E, 0x0F, 0x74, 0x10, 0xEB, 0x12, 0x90, 0xE8, 0x86, 0xF9,
	0x74, 0x08, 0xEB, 0x0A, 0x90, 0xC7, 0x46, 0x0E, 0x10, 0x07, 0xC6, 0x46,
	0x11, 0x00, 0x58, 0xEF, 0x58, 0xEE, 0xC3, 0xC6, 0x46, 0x11, 0x01, 0x80,
	0xFB, 0x02, 0x77, 0x2E, 0x80, 0xFB, 0x00, 0x74, 0x0A, 0x80, 0xFB, 0x01,
	0x74, 0x10, 0x80, 0xFB, 0x02, 0x74, 0x13, 0xE8, 0x28, 0xFD, 0x89, 0x5E,
	0x0E, 0x74, 0x13, 0xEB, 0x15, 0x90, 0xE8, 0x62, 0xFC, 0x74, 0x0B, 0xEB,
	0x0D, 0x90, 0xE8, 0xB4, 0xFC, 0x74, 0x03, 0xEB, 0x05, 0x90, 0xC6, 0x46,
	0x11, 0x00, 0xC3, 0xC6, 0x46, 0x11, 0x00, 0x33, 0xC0, 0x57, 0xB9, 0x80,
	0x00, 0xF3, 0xAB, 0x5F, 0x26, 0x66, 0xC7, 0x05, 0x56, 0x45, 0x53, 0x41,
	0x83, 0xC7, 0x04, 0xB8, 0x02, 0x01, 0xAB, 0xB8, 0x10, 0x4D, 0xAB, 0x8C,
	0xC8, 0xAB, 0x83, 0xC7, 0x04, 0x8D, 0x06, 0x28, 0x4D, 0xAB, 0x8C, 0xC8,
	0xAB, 0xE8, 0xEF, 0xBD, 0xB8, 0x08, 0x00, 0x80, 0xFE, 0x00, 0x74, 0x18,
	0xD1, 0xE0, 0x80, 0xFE, 0x01, 0x74, 0x11, 0xD1, 0xE0, 0x80, 0xFE, 0x02,
	0x74, 0x0A, 0xD1, 0xE0, 0x80, 0xFE, 0x04, 0x74, 0x03, 0xB8, 0x10, 0x00,
	0x26, 0x89, 0x05, 0xC3, 0x19, 0x18, 0xA3, 0x1D, 0x4E, 0x1E, 0x81, 0x1E,
	0x96, 0x1E, 0xB2, 0x1E, 0xF1, 0x1E, 0x40, 0x1F, 0xF0, 0x23, 0x70, 0x26,
	0xFF, 0x26, 0x66, 0x29, 0xAA, 0x2A, 0x6A, 0x2B, 0x35, 0x2C, 0xF9, 0x2C,
	0x4A, 0x2D, 0x6B, 0x2F, 0xBD, 0x31, 0xD9, 0x33, 0x18, 0x57, 0x18, 0x57,
	0x18, 0x57, 0x18, 0x57, 0x18, 0x57, 0x18, 0x57, 0xE2, 0x34, 0xAD, 0x35,
	0x0D, 0x37, 0xFB, 0xFC, 0x80, 0xFC, 0x0E, 0x74, 0x36, 0x80, 0xFC, 0x0C,
	0x74, 0x34, 0x80, 0xFC, 0x0D, 0x74, 0x32, 0x50, 0x53, 0x51, 0x52, 0x56,
	0x57, 0x55, 0x06, 0x1E, 0x8B, 0xEC, 0x2E, 0x8E, 0x1E, 0x88, 0x14, 0x8B,
	0xF0, 0x8A, 0xC4, 0x32, 0xE4, 0x3C, 0x1D, 0x73, 0x1B, 0xD1, 0xE0, 0x96,
	0x2E, 0xFF, 0x94, 0x8C, 0x56, 0x1F, 0x07, 0x5D, 0x5F, 0x5E, 0x5A, 0x59,
	0x5B, 0x58, 0xCF, 0xE9, 0x2F, 0xD5, 0xE9, 0xA1, 0xD3, 0xE9, 0x5E, 0xD4,
	0x8B, 0xC6, 0x80, 0xFC, 0x4F, 0x75, 0xE6, 0xE8, 0xEB, 0xF3, 0xEB, 0xE1,
	0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7E, 0x81, 0xA5, 0x81, 0xBD, 0x99, 0x81, 0x7E,
	0x7E, 0xFF, 0xDB, 0xFF, 0xC3, 0xE7, 0xFF, 0x7E, 0x6C, 0xFE, 0xFE, 0xFE,
	0x7C, 0x38, 0x10, 0x00, 0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00,
	0x38, 0x7C, 0x38, 0xFE, 0xFE, 0x92, 0x10, 0x7C, 0x00, 0x10, 0x38, 0x7C,
	0xFE, 0x7C, 0x38, 0x7C, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00,
	0xFF, 0xFF, 0xE7, 0xC3, 0xC3, 0xE7, 0xFF, 0xFF, 0x00, 0x3C, 0x66, 0x42,
	0x42, 0x66, 0x3C, 0x00, 0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF,
	0x0F, 0x07, 0x0F, 0x7D, 0xCC, 0xCC, 0xCC, 0x78, 0x3C, 0x66, 0x66, 0x66,
	0x3C, 0x18, 0x7E, 0x18, 0x3F, 0x33, 0x3F, 0x30, 0x30, 0x70, 0xF0, 0xE0,
	0x7F, 0x63, 0x7F, 0x63, 0x63, 0x67, 0xE6, 0xC0, 0x99, 0x5A, 0x3C, 0xE7,
	0xE7, 0x3C, 0x5A, 0x99, 0x80, 0xE0, 0xF8, 0xFE, 0xF8, 0xE0, 0x80, 0x00,
	0x02, 0x0E, 0x3E, 0xFE, 0x3E, 0x0E, 0x02, 0x00, 0x18, 0x3C, 0x7E, 0x18,
	0x18, 0x7E, 0x3C, 0x18, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00,
	0x7F, 0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x1B, 0x00, 0x3E, 0x63, 0x38, 0x6C,
	0x6C, 0x38, 0x86, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x00,
	0x18, 0x3C, 0x7E, 0x18, 0x7E, 0x3C, 0x18, 0xFF, 0x18, 0x3C, 0x7E, 0x18,
	0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00,
	0x00, 0x18, 0x0C, 0xFE, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x30, 0x60, 0xFE,
	0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xFE, 0x00, 0x00,
	0x00, 0x24, 0x66, 0xFF, 0x66, 0x24, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E,
	0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7E, 0x3C, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18,
	0x18, 0x00, 0x18, 0x00, 0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x6C, 0x6C, 0xFE, 0x6C, 0xFE, 0x6C, 0x6C, 0x00, 0x18, 0x7E, 0xC0, 0x7C,
	0x06, 0xFC, 0x18, 0x00, 0x00, 0xC6, 0xCC, 0x18, 0x30, 0x66, 0xC6, 0x00,
	0x38, 0x6C, 0x38, 0x76, 0xDC, 0xCC, 0x76, 0x00, 0x30, 0x30, 0x60, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00,
	0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00, 0x00, 0x66, 0x3C, 0xFF,
	0x3C, 0x66, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x7E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00,
	0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00, 0x7C, 0xCE, 0xDE, 0xF6,
	0xE6, 0xC6, 0x7C, 0x00, 0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xFC, 0x00,
	0x78, 0xCC, 0x0C, 0x38, 0x60, 0xCC, 0xFC, 0x00, 0x78, 0xCC, 0x0C, 0x38,
	0x0C, 0xCC, 0x78, 0x00, 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x1E, 0x00,
	0xFC, 0xC0, 0xF8, 0x0C, 0x0C, 0xCC, 0x78, 0x00, 0x38, 0x60, 0xC0, 0xF8,
	0xCC, 0xCC, 0x78, 0x00, 0xFC, 0xCC, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00,
	0x78, 0xCC, 0xCC, 0x78, 0xCC, 0xCC, 0x78, 0x00, 0x78, 0xCC, 0xCC, 0x7C,
	0x0C, 0x18, 0x70, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00,
	0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x30, 0x18, 0x30, 0x60, 0xC0,
	0x60, 0x30, 0x18, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00, 0x00,
	0x60, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x60, 0x00, 0x3C, 0x66, 0x0C, 0x18,
	0x18, 0x00, 0x18, 0x00, 0x7C, 0xC6, 0xDE, 0xDE, 0xDC, 0xC0, 0x7C, 0x00,
	0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00, 0xFC, 0x66, 0x66, 0x7C,
	0x66, 0x66, 0xFC, 0x00, 0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C, 0x00,
	0xF8, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00, 0xFE, 0x62, 0x68, 0x78,
	0x68, 0x62, 0xFE, 0x00, 0xFE, 0x62, 0x68, 0x78, 0x68, 0x60, 0xF0, 0x00,
	0x3C, 0x66, 0xC0, 0xC0, 0xCE, 0x66, 0x3A, 0x00, 0xCC, 0xCC, 0xCC, 0xFC,
	0xCC, 0xCC, 0xCC, 0x00, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00,
	0x1E, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00, 0xE6, 0x66, 0x6C, 0x78,
	0x6C, 0x66, 0xE6, 0x00, 0xF0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00,
	0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00, 0xC6, 0xE6, 0xF6, 0xDE,
	0xCE, 0xC6, 0xC6, 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00,
	0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00, 0x7C, 0xC6, 0xC6, 0xC6,
	0xD6, 0x7C, 0x0E, 0x00, 0xFC, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0xE6, 0x00,
	0x7C, 0xC6, 0xE0, 0x78, 0x0E, 0xC6, 0x7C, 0x00, 0xFC, 0xB4, 0x30, 0x30,
	0x30, 0x30, 0x78, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xFC, 0x00,
	0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00, 0xC6, 0xC6, 0xC6, 0xC6,
	0xD6, 0xFE, 0x6C, 0x00, 0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6, 0x00,
	0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x78, 0x00, 0xFE, 0xC6, 0x8C, 0x18,
	0x32, 0x66, 0xFE, 0x00, 0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00,
	0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00, 0x78, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x78, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x30, 0x30, 0x18, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,
	0xE0, 0x60, 0x60, 0x7C, 0x66, 0x66, 0xDC, 0x00, 0x00, 0x00, 0x78, 0xCC,
	0xC0, 0xCC, 0x78, 0x00, 0x1C, 0x0C, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00,
	0x00, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00, 0x38, 0x6C, 0x64, 0xF0,
	0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8,
	0xE0, 0x60, 0x6C, 0x76, 0x66, 0x66, 0xE6, 0x00, 0x30, 0x00, 0x70, 0x30,
	0x30, 0x30, 0x78, 0x00, 0x0C, 0x00, 0x1C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78,
	0xE0, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0xE6, 0x00, 0x70, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x78, 0x00, 0x00, 0x00, 0xCC, 0xFE, 0xFE, 0xD6, 0xD6, 0x00,
	0x00, 0x00, 0xB8, 0xCC, 0xCC, 0xCC, 0xCC, 0x00, 0x00, 0x00, 0x78, 0xCC,
	0xCC, 0xCC, 0x78, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0xF0,
	0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x1E, 0x00, 0x00, 0xDC, 0x76,
	0x62, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x7C, 0xC0, 0x70, 0x1C, 0xF8, 0x00,
	0x10, 0x30, 0xFC, 0x30, 0x30, 0x34, 0x18, 0x00, 0x00, 0x00, 0xCC, 0xCC,
	0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00,
	0x00, 0x00, 0xC6, 0xC6, 0xD6, 0xFE, 0x6C, 0x00, 0x00, 0x00, 0xC6, 0x6C,
	0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8,
	0x00, 0x00, 0xFC, 0x98, 0x30, 0x64, 0xFC, 0x00, 0x1C, 0x30, 0x30, 0xE0,
	0x30, 0x30, 0x1C, 0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00,
	0xE0, 0x30, 0x30, 0x1C, 0x30, 0x30, 0xE0, 0x00, 0x76, 0xDC, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0x00,
	0x7C, 0xC6, 0xC0, 0xC6, 0x7C, 0x0C, 0x06, 0x7C, 0x00, 0xCC, 0x00, 0xCC,
	0xCC, 0xCC, 0x76, 0x00, 0x1C, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00,
	0x7E, 0x81, 0x3C, 0x06, 0x3E, 0x66, 0x3B, 0x00, 0xCC, 0x00, 0x78, 0x0C,
	0x7C, 0xCC, 0x76, 0x00, 0xE0, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,
	0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0xC0, 0x78, 0x0C, 0x38, 0x7E, 0x81, 0x3C, 0x66, 0x7E, 0x60, 0x3C, 0x00,
	0xCC, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00, 0xE0, 0x00, 0x78, 0xCC,
	0xFC, 0xC0, 0x78, 0x00, 0xCC, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00,
	0x7C, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00, 0xE0, 0x00, 0x70, 0x30,
	0x30, 0x30, 0x78, 0x00, 0xC6, 0x10, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00,
	0x30, 0x30, 0x00, 0x78, 0xCC, 0xFC, 0xCC, 0x00, 0x1C, 0x00, 0xFC, 0x60,
	0x78, 0x60, 0xFC, 0x00, 0x00, 0x00, 0x7F, 0x0C, 0x7F, 0xCC, 0x7F, 0x00,
	0x3E, 0x6C, 0xCC, 0xFE, 0xCC, 0xCC, 0xCE, 0x00, 0x78, 0x84, 0x00, 0x78,
	0xCC, 0xCC, 0x78, 0x00, 0x00, 0xCC, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00,
	0x00, 0xE0, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00, 0x78, 0x84, 0x00, 0xCC,
	0xCC, 0xCC, 0x76, 0x00, 0x00, 0xE0, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00,
	0x00, 0xCC, 0x00, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8, 0xC3, 0x18, 0x3C, 0x66,
	0x66, 0x3C, 0x18, 0x00, 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00,
	0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18, 0x38, 0x6C, 0x64, 0xF0,
	0x60, 0xE6, 0xFC, 0x00, 0xCC, 0xCC, 0x78, 0x30, 0xFC, 0x30, 0xFC, 0x30,
	0xF8, 0xCC, 0xCC, 0xFA, 0xC6, 0xCF, 0xC6, 0xC3, 0x0E, 0x1B, 0x18, 0x3C,
	0x18, 0x18, 0xD8, 0x70, 0x1C, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00,
	0x38, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00, 0x00, 0x1C, 0x00, 0x78,
	0xCC, 0xCC, 0x78, 0x00, 0x00, 0x1C, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00,
	0x00, 0xF8, 0x00, 0xB8, 0xCC, 0xCC, 0xCC, 0x00, 0xFC, 0x00, 0xCC, 0xEC,
	0xFC, 0xDC, 0xCC, 0x00, 0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00,
	0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00, 0x18, 0x00, 0x18, 0x18,
	0x30, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xC0, 0xC0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFC, 0x0C, 0x0C, 0x00, 0x00, 0xC6, 0xCC, 0xD8, 0x36,
	0x6B, 0xC2, 0x84, 0x0F, 0xC3, 0xC6, 0xCC, 0xDB, 0x37, 0x6D, 0xCF, 0x03,
	0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00, 0x33, 0x66, 0xCC,
	0x66, 0x33, 0x00, 0x00, 0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00,
	0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x55, 0xAA, 0x55, 0xAA,
	0x55, 0xAA, 0x55, 0xAA, 0xDB, 0xF6, 0xDB, 0x6F, 0xDB, 0x7E, 0xD7, 0xED,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0xF8, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18,
	0x36, 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00,
	0xFE, 0x36, 0x36, 0x36, 0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18,
	0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36,
	0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36,
	0xFE, 0x00, 0x00, 0x00, 0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x1F, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x1F, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x18,
	0x1F, 0x18, 0x18, 0x18, 0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x30,
	0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30,
	0x37, 0x36, 0x36, 0x36, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00,
	0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36, 0x18, 0x18, 0xFF, 0x00,
	0xFF, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x18,
	0x1F, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36, 0x18, 0x18, 0xFF, 0x18,
	0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
	0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x0F,
	0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00, 0x00, 0x78, 0xCC, 0xF8,
	0xCC, 0xF8, 0xC0, 0xC0, 0x00, 0xFC, 0xCC, 0xC0, 0xC0, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x00, 0xFC, 0xCC, 0x60, 0x30,
	0x60, 0xCC, 0xFC, 0x00, 0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00,
	0x00, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x60, 0xC0, 0x00, 0x76, 0xDC, 0x18,
	0x18, 0x18, 0x18, 0x00, 0xFC, 0x30, 0x78, 0xCC, 0xCC, 0x78, 0x30, 0xFC,
	0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00, 0x38, 0x6C, 0xC6, 0xC6,
	0x6C, 0x6C, 0xEE, 0x00, 0x1C, 0x30, 0x18, 0x7C, 0xCC, 0xCC, 0x78, 0x00,
	0x00, 0x00, 0x7E, 0xDB, 0xDB, 0x7E, 0x00, 0x00, 0x06, 0x0C, 0x7E, 0xDB,
	0xDB, 0x7E, 0x60, 0xC0, 0x38, 0x60, 0xC0, 0xF8, 0xC0, 0x60, 0x38, 0x00,
	0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x00, 0x00, 0x7E, 0x00, 0x7E,
	0x00, 0x7E, 0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00,
	0x60, 0x30, 0x18, 0x30, 0x60, 0x00, 0xFC, 0x00, 0x18, 0x30, 0x60, 0x30,
	0x18, 0x00, 0xFC, 0x00, 0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70, 0x18, 0x18, 0x00, 0x7E,
	0x00, 0x18, 0x18, 0x00, 0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00,
	0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
	0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
	0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C, 0x1C, 0x58, 0x6C, 0x6C, 0x6C,
	0x6C, 0x00, 0x00, 0x00, 0x70, 0x98, 0x30, 0x60, 0xF8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x81, 0xA5, 0x81,
	0x81, 0xBD, 0x99, 0x81, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0xFF,
	0xDB, 0xFF, 0xFF, 0xC3, 0xE7, 0xFF, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x6C, 0xFE, 0xFE, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0xE7, 0xE7, 0xE7, 0x99, 0x18,
	0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0xFF, 0xFF, 0x7E,
	0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
	0x3C, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xE7, 0xC3, 0xC3, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF, 0xFF,
	0xFF, 0xFF, 0x00, 0x00, 0x1E, 0x0E, 0x1A, 0x32, 0x78, 0xCC, 0xCC, 0xCC,
	0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x18,
	0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x33, 0x3F, 0x30,
	0x30, 0x30, 0x70, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x63,
	0x7F, 0x63, 0x63, 0x63, 0x67, 0xE7, 0xE6, 0xC0, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x18, 0xDB, 0x3C, 0xE7, 0x3C, 0xDB, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFE, 0xF8, 0xE0, 0xC0, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0E, 0x3E, 0xFE, 0x3E, 0x0E, 0x06,
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0x18, 0x18, 0x18,
	0x7E, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66,
	0x66, 0x66, 0x00, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xDB,
	0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x1B, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x7C,
	0xC6, 0x60, 0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x38, 0x0C, 0xC6, 0x7C, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0x18, 0x18, 0x18, 0x7E, 0x3C,
	0x18, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x0C, 0xFE, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x30, 0x60, 0xFE, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xFE, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x6C, 0xFE, 0x6C, 0x28, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x7C, 0x7C,
	0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x7C,
	0x7C, 0x38, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x3C, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x6C, 0x6C, 0xFE, 0x6C, 0x6C, 0x6C, 0xFE, 0x6C,
	0x6C, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7C, 0xC6, 0xC2, 0xC0, 0x7C, 0x06,
	0x86, 0xC6, 0x7C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0xC6,
	0x0C, 0x18, 0x30, 0x66, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C,
	0x6C, 0x38, 0x76, 0xDC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x30,
	0x30, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0C, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x18,
	0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x3C, 0xFF, 0x3C,
	0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18,
	0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xCE, 0xDE, 0xF6, 0xE6,
	0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x38, 0x78, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0x06, 0x0C, 0x18, 0x30, 0x60, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x7C, 0xC6, 0x06, 0x06, 0x3C, 0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0C, 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x0C, 0x1E, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFE, 0xC0, 0xC0, 0xFC, 0x0E, 0x06, 0x06, 0xC6,
	0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x60, 0xC0, 0xC0, 0xFC, 0xC6,
	0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC6, 0x06, 0x0C,
	0x18, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0xC6, 0xC6, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x7C, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x06, 0x0C, 0x78, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18,
	0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x30,
	0x18, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
	0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30,
	0x18, 0x0C, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x7C, 0xC6, 0xC6, 0x0C, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xDE, 0xDE, 0xDE, 0xDC, 0xC0, 0x7C, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6,
	0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x66,
	0x66, 0x66, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0,
	0xC0, 0xC0, 0xC2, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x6C,
	0x66, 0x66, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0xF0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xDE, 0xC6, 0x66,
	0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xC6,
	0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x0C,
	0x0C, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xE6, 0x66, 0x6C, 0x6C, 0x78, 0x6C, 0x6C, 0x66, 0xE6, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xF0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0xC6,
	0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xE6, 0xF6, 0xFE, 0xDE, 0xCE,
	0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0xC6, 0xC6,
	0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x66,
	0x66, 0x66, 0x7C, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xDE, 0x7C, 0x0C, 0x0E, 0x00, 0x00,
	0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0x66, 0xE6, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x60, 0x38, 0x0C, 0xC6, 0xC6,
	0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x5A, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6,
	0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6,
	0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xD6, 0xFE, 0x7C, 0x6C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xC6, 0xC6, 0x6C, 0x38, 0x38, 0x38, 0x6C, 0xC6, 0xC6, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x18,
	0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC6, 0x8C, 0x18, 0x30, 0x60,
	0xC2, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x30, 0x30, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0,
	0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00, 0x00, 0x00,
	0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x00, 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
	0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60,
	0x60, 0x78, 0x6C, 0x66, 0x66, 0x66, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x1C, 0x0C, 0x0C, 0x3C, 0x6C, 0xCC, 0xCC, 0xCC, 0x76, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC6,
	0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x64, 0x60, 0xF0, 0x60,
	0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76,
	0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xCC, 0x78, 0x00, 0x00, 0x00, 0xE0, 0x60,
	0x60, 0x6C, 0x76, 0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x06, 0x06, 0x00, 0x0E, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66,
	0x3C, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0x66,
	0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEC,
	0xFE, 0xD6, 0xD6, 0xD6, 0xD6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x7C, 0x60, 0x60,
	0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 0xCC, 0x7C,
	0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x76, 0x62,
	0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
	0xC6, 0x70, 0x1C, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x30,
	0x30, 0xFC, 0x30, 0x30, 0x30, 0x36, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xD6, 0xD6, 0xFE,
	0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x6C, 0x38,
	0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6,
	0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFE, 0xCC, 0x18, 0x30, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x0E, 0x18, 0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x0E, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0E, 0x18, 0x18, 0x18,
	0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38,
	0x6C, 0xC6, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x66,
	0xC2, 0xC0, 0xC0, 0xC2, 0x66, 0x3C, 0x0C, 0x06, 0x7C, 0x00, 0x00, 0x00,
	0xCC, 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00,
	0x00, 0x0C, 0x18, 0x30, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC6, 0x7C, 0x00,
	0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC,
	0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0x00, 0x78, 0x0C, 0x7C,
	0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x00, 0x78,
	0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x38,
	0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x66, 0x60, 0x66, 0x3C, 0x0C, 0x06, 0x3C, 0x00, 0x00,
	0x00, 0x10, 0x38, 0x6C, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC6, 0x7C, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC6,
	0x7C, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x00, 0x7C, 0xC6, 0xFE,
	0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x00, 0x38,
	0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x66,
	0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x60,
	0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00,
	0x00, 0xC6, 0xC6, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0x00,
	0x00, 0x00, 0x38, 0x6C, 0x38, 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6,
	0xC6, 0x00, 0x00, 0x00, 0x18, 0x30, 0x60, 0x00, 0xFE, 0x66, 0x60, 0x7C,
	0x60, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x76,
	0x36, 0x7E, 0xD8, 0xD8, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x6C,
	0xCC, 0xCC, 0xFE, 0xCC, 0xCC, 0xCC, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x10,
	0x38, 0x6C, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xC6, 0xC6, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,
	0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6,
	0x7C, 0x00, 0x00, 0x00, 0x00, 0x30, 0x78, 0xCC, 0x00, 0xCC, 0xCC, 0xCC,
	0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x00, 0xCC,
	0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6,
	0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0x78, 0x00, 0x00, 0xC6,
	0xC6, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00, 0x00, 0x00,
	0x00, 0xC6, 0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00,
	0x00, 0x00, 0x00, 0x18, 0x18, 0x7C, 0xC6, 0xC0, 0xC0, 0xC6, 0x7C, 0x18,
	0x18, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x64, 0x60, 0xF0, 0x60, 0x60,
	0x60, 0xE6, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x3C, 0x18,
	0x7E, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xCC, 0xCC,
	0xF8, 0xC4, 0xCC, 0xDE, 0xCC, 0xCC, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x0E,
	0x1B, 0x18, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x18, 0x18, 0xD8, 0x70, 0x00,
	0x00, 0x18, 0x30, 0x60, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00,
	0x00, 0x00, 0x00, 0x0C, 0x18, 0x30, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18,
	0x3C, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x60, 0x00, 0x7C, 0xC6, 0xC6,
	0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x60, 0x00, 0xCC,
	0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC,
	0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x76, 0xDC,
	0x00, 0xC6, 0xE6, 0xF6, 0xFE, 0xDE, 0xCE, 0xC6, 0xC6, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60,
	0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFE, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFE, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0,
	0xC0, 0xC6, 0xCC, 0xD8, 0x30, 0x60, 0xCE, 0x93, 0x06, 0x0C, 0x1F, 0x00,
	0x00, 0xC0, 0xC0, 0xC6, 0xCC, 0xD8, 0x30, 0x66, 0xCE, 0x9A, 0x3F, 0x06,
	0x0F, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x3C,
	0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x66, 0xCC, 0x66,
	0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x66,
	0x33, 0x66, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x44, 0x11, 0x44,
	0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x55, 0xAA,
	0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,
	0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77,
	0xDD, 0x77, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF8,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF8,
	0x18, 0xF8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x36, 0x36, 0x36, 0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
	0x06, 0xF6, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x1F,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x37,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
	0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36,
	0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x18, 0x18,
	0x18, 0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0xFF,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
	0xF0, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x76, 0xDC, 0xD8, 0xD8, 0xDC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x7C, 0xC6, 0xFC, 0xC6, 0xC6, 0xFC, 0xC0, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0xFE, 0xC6, 0xC6, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C,
	0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC6, 0x60, 0x30, 0x18, 0x30,
	0x60, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E,
	0xD8, 0xD8, 0xD8, 0xD8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x66, 0x66, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xC0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x76, 0xDC, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x7E, 0x18, 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x7E, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0x6C,
	0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C,
	0x6C, 0x6C, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x30, 0x18, 0x0C,
	0x3E, 0x66, 0x66, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x7E, 0xDB, 0xDB, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x03, 0x06, 0x7E, 0xCF, 0xDB, 0xF3, 0x7E, 0x60, 0xC0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x1C, 0x30, 0x60, 0x60, 0x7C, 0x60, 0x60, 0x30, 0x1C, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
	0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00,
	0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7E,
	0x18, 0x18, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x18,
	0x0C, 0x06, 0x0C, 0x18, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x0C, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8,
	0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x7E, 0x00,
	0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC,
	0x00, 0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C,
	0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C,
	0x1C, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x98, 0x30, 0x60, 0xC8,
	0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x1D, 0x00, 0x00, 0x00, 0x00, 0x24, 0x66, 0xFF, 0x66, 0x24, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x22, 0x00, 0x63, 0x63, 0x63, 0x22, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x18, 0x18,
	0x18, 0xFF, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x4D, 0x00, 0x00, 0xC3, 0xE7, 0xFF, 0xDB, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
	0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0xFF, 0xDB, 0x99, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0xC3, 0xC3, 0xC3,
	0xC3, 0xDB, 0xDB, 0xFF, 0x66, 0x66, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00,
	0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0xC3, 0xC3, 0x00, 0x00, 0x00,
	0x5A, 0x00, 0x00, 0xFF, 0xC3, 0x86, 0x0C, 0x18, 0x30, 0x61, 0xC3, 0xFF,
	0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x3E, 0x30, 0x30, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x3E, 0x00, 0x00, 0x00, 0x5D, 0x00, 0x00, 0x3E, 0x06, 0x06,
	0x06, 0x06, 0x06, 0x06, 0x06, 0x3E, 0x00, 0x00, 0x00, 0x6D, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xE6, 0xFF, 0xDB, 0xDB, 0xDB, 0xDB, 0x00, 0x00, 0x00,
	0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xC3, 0xDB, 0xDB, 0xFF, 0x66,
	0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x3B, 0x1B, 0x7E,
	0xD8, 0xDC, 0x77, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0xC3, 0x66, 0x3C,
	0x18, 0x7E, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x9E, 0x00, 0xFC,
	0x66, 0x66, 0x7C, 0x62, 0x66, 0x6F, 0x66, 0x66, 0xF3, 0x00, 0x00, 0x00,
	0xF1, 0x00, 0x00, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18, 0x00, 0xFF,
	0x00, 0x00, 0x00, 0xF6, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0xFF, 0x00,
	0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x7E, 0x81, 0xA5, 0x81, 0x81, 0xBD, 0x99, 0x81, 0x81, 0x7E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0xFF, 0xDB, 0xFF, 0xFF, 0xC3,
	0xE7, 0xFF, 0xFF, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x6C, 0xFE, 0xFE, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0xE7, 0xE7,
	0xE7, 0x99, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
	0x3C, 0x7E, 0xFF, 0xFF, 0x7E, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xC3,
	0xC3, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x1E, 0x0E, 0x1A, 0x32, 0x78, 0xCC,
	0xCC, 0xCC, 0xCC, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x66,
	0x66, 0x66, 0x66, 0x3C, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3F, 0x33, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x70, 0xF0, 0xE0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x63, 0x7F, 0x63, 0x63, 0x63,
	0x63, 0x67, 0xE7, 0xE6, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
	0x18, 0xDB, 0x3C, 0xE7, 0x3C, 0xDB, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFE, 0xF8, 0xF0, 0xE0, 0xC0, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0E, 0x1E, 0x3E, 0xFE, 0x3E,
	0x1E, 0x0E, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C,
	0x7E, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x66,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xDB, 0xDB, 0xDB, 0x7B, 0x1B,
	0x1B, 0x1B, 0x1B, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0x60,
	0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x38, 0x0C, 0xC6, 0x7C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0xFE,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0x18, 0x18, 0x18,
	0x18, 0x7E, 0x3C, 0x18, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C,
	0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0C, 0xFE,
	0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x30, 0x60, 0xFE, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x6C, 0xFE,
	0x6C, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x38, 0x38, 0x7C, 0x7C, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x7C, 0x7C, 0x38, 0x38, 0x10, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C,
	0x3C, 0x3C, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x66, 0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x6C, 0xFE, 0x6C, 0x6C,
	0x6C, 0xFE, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7C, 0xC6,
	0xC2, 0xC0, 0x7C, 0x06, 0x86, 0xC6, 0x7C, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xC2, 0xC6, 0x0C, 0x18, 0x30, 0x60, 0xC6, 0x86,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x76, 0xDC,
	0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30,
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x0C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x0C,
	0x0C, 0x0C, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x18, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x0C, 0x18,
	0x30, 0x60, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0xC6, 0xCE, 0xD6, 0xD6, 0xE6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x38, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0x06, 0x0C, 0x18, 0x30,
	0x60, 0xC0, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0x06, 0x06, 0x3C, 0x06, 0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0C, 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x0C, 0x0C, 0x1E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC0, 0xC0, 0xC0, 0xFC, 0x06,
	0x06, 0x06, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x60,
	0xC0, 0xC0, 0xFC, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFE, 0xC6, 0x06, 0x06, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x30,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0xC6,
	0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0xC6, 0xC6, 0x7E, 0x06, 0x06, 0x06, 0x0C, 0x78, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00,
	0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
	0x0C, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0C, 0x06,
	0x0C, 0x18, 0x30, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0xC6, 0x0C, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xDE, 0xDE, 0xDE, 0xDC, 0xC0, 0x7C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE,
	0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x66,
	0x66, 0x66, 0x7C, 0x66, 0x66, 0x66, 0x66, 0xFC, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xC0, 0xC0, 0xC2, 0x66, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x6C, 0x66, 0x66, 0x66, 0x66,
	0x66, 0x66, 0x6C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x66,
	0x62, 0x68, 0x78, 0x68, 0x60, 0x62, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFE, 0x66, 0x62, 0x68, 0x78, 0x68, 0x60, 0x60, 0x60, 0xF0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xDE,
	0xC6, 0xC6, 0x66, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6,
	0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
	0xCC, 0xCC, 0xCC, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x66,
	0x6C, 0x6C, 0x78, 0x78, 0x6C, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xF0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6,
	0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xE6,
	0xF6, 0xFE, 0xDE, 0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x60,
	0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6,
	0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xDE, 0x7C, 0x0C, 0x0E, 0x00, 0x00,
	0x00, 0x00, 0xFC, 0x66, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0x66, 0x66, 0xE6,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0x60, 0x38, 0x0C,
	0x06, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E,
	0x5A, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
	0xC6, 0x6C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6,
	0xC6, 0xC6, 0xC6, 0xD6, 0xD6, 0xFE, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xC6, 0xC6, 0x6C, 0x6C, 0x38, 0x38, 0x6C, 0x6C, 0xC6, 0xC6,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18,
	0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC6,
	0x86, 0x0C, 0x18, 0x30, 0x60, 0xC2, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38,
	0x1C, 0x0E, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x0C,
	0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x30, 0x30, 0x18, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x78, 0x6C, 0x66,
	0x66, 0x66, 0x66, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x7C, 0xC6, 0xC0, 0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x1C, 0x0C, 0x0C, 0x3C, 0x6C, 0xCC, 0xCC, 0xCC, 0xCC, 0x76,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xFE,
	0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C,
	0x64, 0x60, 0xF0, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x7C,
	0x0C, 0xCC, 0x78, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x6C, 0x76, 0x66,
	0x66, 0x66, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18,
	0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x06, 0x06, 0x00, 0x0E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x66, 0x66, 0x3C, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x66, 0x6C, 0x78,
	0x78, 0x6C, 0x66, 0xE6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0xFE, 0xD6, 0xD6, 0xD6, 0xD6, 0xD6,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66,
	0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0x7C,
	0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xCC, 0xCC,
	0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0x0C, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xDC, 0x76, 0x62, 0x60, 0x60, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0x60, 0x38, 0x0C, 0xC6, 0x7C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x30, 0x30, 0xFC, 0x30, 0x30,
	0x30, 0x30, 0x36, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6,
	0xD6, 0xD6, 0xFE, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xC6, 0x6C, 0x38, 0x38, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E,
	0x06, 0x0C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xCC, 0x18,
	0x30, 0x60, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x18,
	0x18, 0x18, 0x70, 0x18, 0x18, 0x18, 0x18, 0x0E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x18, 0x18, 0x18, 0x0E, 0x18,
	0x18, 0x18, 0x18, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0xFE, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x66, 0xC2, 0xC0, 0xC0, 0xC0,
	0xC2, 0x66, 0x3C, 0x0C, 0x06, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC,
	0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0C, 0x18, 0x30, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC0, 0xC6, 0x7C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6C, 0x00, 0x78, 0x0C, 0x7C,
	0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0xCC,
	0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x60, 0x30, 0x18, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x38, 0x00, 0x78, 0x0C, 0x7C,
	0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3C, 0x66, 0x60, 0x60, 0x66, 0x3C, 0x0C, 0x06, 0x3C, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x38, 0x6C, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC0, 0xC6, 0x7C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0x00, 0x7C, 0xC6, 0xFE,
	0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18,
	0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0xC0, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x66, 0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x66, 0x00, 0x38, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18,
	0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xC6, 0xC6, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6, 0xC6,
	0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x38, 0x00, 0x38, 0x6C, 0xC6, 0xC6,
	0xFE, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x60, 0x00,
	0xFE, 0x66, 0x60, 0x7C, 0x60, 0x60, 0x66, 0xFE, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x76, 0x36, 0x7E, 0xD8, 0xD8, 0x6E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x6C, 0xCC, 0xCC, 0xFE, 0xCC,
	0xCC, 0xCC, 0xCC, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x6C,
	0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xC6, 0xC6, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x00, 0x7C, 0xC6, 0xC6,
	0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x78, 0xCC,
	0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x60, 0x30, 0x18, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0x00, 0xC6, 0xC6, 0xC6,
	0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0x78, 0x00, 0x00, 0xC6, 0xC6, 0x00,
	0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xC6, 0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x3C, 0x66, 0x60, 0x60, 0x60,
	0x66, 0x3C, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x64,
	0x60, 0xF0, 0x60, 0x60, 0x60, 0x60, 0xE6, 0xFC, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x66, 0x66, 0x3C, 0x18, 0x7E, 0x18, 0x7E, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xCC, 0xCC, 0xF8, 0xC4, 0xCC, 0xDE,
	0xCC, 0xCC, 0xCC, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x1B, 0x18,
	0x18, 0x18, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0x70, 0x00, 0x00,
	0x00, 0x18, 0x30, 0x60, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x18, 0x30, 0x00, 0x38, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x60,
	0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x18, 0x30, 0x60, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x76,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC, 0x00, 0xDC, 0x66, 0x66,
	0x66, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC, 0x00, 0xC6,
	0xE6, 0xF6, 0xFE, 0xDE, 0xCE, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30,
	0x00, 0x30, 0x30, 0x60, 0xC0, 0xC6, 0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x06,
	0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC2,
	0xC6, 0xCC, 0x18, 0x30, 0x60, 0xCE, 0x93, 0x06, 0x0C, 0x1F, 0x00, 0x00,
	0x00, 0xC0, 0xC0, 0xC2, 0xC6, 0xCC, 0x18, 0x30, 0x66, 0xCE, 0x9A, 0x3F,
	0x06, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18,
	0x3C, 0x3C, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44,
	0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x11, 0x44, 0x55, 0xAA, 0x55, 0xAA,
	0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA,
	0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77,
	0xDD, 0x77, 0xDD, 0x77, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xF6,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x36, 0x36, 0x36, 0x36, 0x36, 0xF6, 0x06, 0xF6,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xF6, 0x06, 0xFE,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x37, 0x30, 0x3F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xF7,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36, 0x36, 0xF7, 0x00, 0xF7,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x18, 0x18, 0x18, 0x18,
	0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x1F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xFF,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x18, 0x18, 0x18, 0x18,
	0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0,
	0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x0F,
	0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC, 0xD8,
	0xD8, 0xD8, 0xDC, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xFC, 0xC6, 0xFC, 0xC6, 0xC6, 0xFC, 0xC0, 0xC0, 0xC0, 0x00, 0x00,
	0x00, 0x00, 0xFE, 0xC6, 0xC6, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFE, 0x6C, 0x6C,
	0x6C, 0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
	0xC6, 0x60, 0x30, 0x18, 0x30, 0x60, 0xC6, 0xFE, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0xD8, 0xD8, 0x70,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x66,
	0x66, 0x7C, 0x60, 0x60, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x76, 0xDC, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x7E, 0x18, 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x7E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xFE,
	0xC6, 0xC6, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C,
	0xC6, 0xC6, 0xC6, 0x6C, 0x6C, 0x6C, 0x6C, 0xEE, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x1E, 0x30, 0x18, 0x0C, 0x3E, 0x66, 0x66, 0x66, 0x66, 0x3C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0xDB, 0xDB,
	0xDB, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
	0x06, 0x7E, 0xCF, 0xDB, 0xF3, 0x7E, 0x60, 0xC0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x1C, 0x30, 0x60, 0x60, 0x7C, 0x60, 0x60, 0x60, 0x30, 0x1C,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6,
	0xC6, 0xC6, 0xC6, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x18, 0x0C, 0x06, 0x0C,
	0x18, 0x30, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
	0x18, 0x30, 0x60, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0xD8, 0xD8, 0xD8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xEC,
	0x6C, 0x6C, 0x3C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x6C, 0x6C,
	0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x70, 0x98, 0x30, 0x60, 0xC8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x7C, 0x7C, 0x7C,
	0x7C, 0x7C, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x66, 0xFF, 0x66, 0x24, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x63, 0x63, 0x63, 0x22, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x00, 0xC3,
	0xE7, 0xFF, 0xDB, 0xDB, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x00, 0x00, 0x00,
	0x00, 0x54, 0x00, 0x00, 0xFF, 0xDB, 0x99, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0xC3, 0xC3, 0xC3,
	0xC3, 0xC3, 0xDB, 0xDB, 0xFF, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x5A,
	0x00, 0x00, 0xFF, 0xC3, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x61, 0xC3, 0xFF,
	0x00, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x3E, 0x30, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x30, 0x30, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x00, 0x00,
	0x3E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x3E, 0x00, 0x00,
	0x00, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0xFF, 0xDB, 0xDB,
	0xDB, 0xDB, 0xDB, 0x00, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xC3, 0xC3, 0xC3, 0xDB, 0xDB, 0xFF, 0x66, 0x00, 0x00, 0x00, 0x00,
	0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x3B, 0x1B, 0x7E, 0xD8, 0xDC,
	0x77, 0x00, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0xC3, 0x66, 0x3C, 0x18,
	0x7E, 0x18, 0x7E, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x9E, 0x00,
	0xFC, 0x66, 0x66, 0x7C, 0x62, 0x66, 0x6F, 0x66, 0x66, 0x66, 0xF3, 0x00,
	0x00, 0x00, 0x00, 0xF1, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0xFF, 0x18,
	0x18, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x00, 0x00, 0x00,
	0x00, 0x18, 0x18, 0x00, 0xFF, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E
};
